Symbol table:

FlexCAN_StartRxMessageFifoData.part.0/161 (FlexCAN_StartRxMessageFifoData.part.0) @062c10e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: FlexCAN_StartRxMessageFifoData/45 (107374 (estimated locally),0.50 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (115158811 (estimated locally),0.11 per call) FlexCAN_SetMsgBuffIntCmd/114 (115158811 (estimated locally),0.11 per call) FlexCAN_SetMsgBuffIntCmd/114 (115158811 (estimated locally),0.11 per call) 
FlexCAN_GetMsgBuffIntStatusFlag.part.0/158 (FlexCAN_GetMsgBuffIntStatusFlag.part.0) @062c67e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: FlexCAN_GetMsgBuffIntStatusFlag/30 (536870912 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_SetExtendedTimeSegments.part.0/157 (FlexCAN_SetExtendedTimeSegments.part.0) @062c6460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: FlexCAN_SetExtendedTimeSegments/12 (107374 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_SetTimeSegments.part.0/155 (FlexCAN_SetTimeSegments.part.0) @062c60e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: FlexCAN_SetTimeSegments/11 (107374 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_SetFDTimeSegments.part.0/153 (FlexCAN_SetFDTimeSegments.part.0) @062c1d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: FlexCAN_SetFDTimeSegments/10 (107374 (estimated locally),0.50 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20/151 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20) @0641dc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/104 (17717 (estimated locally),0.08 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20/150 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20) @0641db60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/104 (17717 (estimated locally),0.08 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10/149 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10) @0641d7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (26575 (estimated locally),0.12 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10/148 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10) @0641d700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (26575 (estimated locally),0.12 per call) 
  Calls: 
FLEXCAN_ClearMsgBuffIntCmd/147 (FLEXCAN_ClearMsgBuffIntCmd) @0641d0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_AbortTransfer/99 (12823 (estimated locally),0.06 per call) FlexCAN_AbortRxTransfer/51 (237404317 (estimated locally),0.22 per call) 
  Calls: 
FlexCAN_SetErrIntCmd/146 (FlexCAN_SetErrIntCmd) @0640eee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetErrorInt_Privileged/98 (5154 (estimated locally),0.02 per call) FlexCAN_Ip_SetErrorInt_Privileged/98 (5154 (estimated locally),0.02 per call) FlexCAN_Ip_SetErrorInt_Privileged/98 (15617 (estimated locally),0.07 per call) FlexCAN_Ip_SetErrorInt_Privileged/98 (15617 (estimated locally),0.07 per call) FlexCAN_Ip_SetErrorInt_Privileged/98 (15617 (estimated locally),0.07 per call) 
  Calls: 
FlexCAN_DisableInterrupts/145 (FlexCAN_DisableInterrupts) @0640ec40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_DisableInterrupts_Privileged/97 (44539 (estimated locally),0.21 per call) 
  Calls: 
FlexCAN_EnableInterrupts/144 (FlexCAN_EnableInterrupts) @0640ea80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_EnableInterrupts_Privileged/96 (44539 (estimated locally),0.21 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17/143 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17) @0640e620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (26575 (estimated locally),0.12 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17/142 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17) @0640e540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (26575 (estimated locally),0.12 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16/141 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16) @0640e2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/92 (13288 (estimated locally),0.06 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16/140 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16) @0640e1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/92 (13288 (estimated locally),0.06 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15/139 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15) @063fdd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/90 (6644 (estimated locally),0.03 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15/138 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15) @063fdc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/90 (6644 (estimated locally),0.03 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09/137 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09) @063fd8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ClearTDCFail/87 (107374 (estimated locally),0.50 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09/136 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09) @063fd7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ClearTDCFail/87 (107374 (estimated locally),0.50 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14/135 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14) @063fd2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/85 (13288 (estimated locally),0.06 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14/134 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14) @063fd1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/85 (13288 (estimated locally),0.06 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08/133 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08) @063e7ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetRxMaskType_Privileged/84 (26575 (estimated locally),0.12 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08/132 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08) @063e7e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetRxMaskType_Privileged/84 (26575 (estimated locally),0.12 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07/131 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07) @063e7b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStartMode_Privileged/82 (107374 (estimated locally),0.50 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07/130 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07) @063e7a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStartMode_Privileged/82 (107374 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_ExitFreezeMode/129 (FlexCAN_ExitFreezeMode) @063ceee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStartMode_Privileged/82 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_ExitFreezeMode_Privileged/73 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_GetMsgBuffTimestamp/128 (FlexCAN_GetMsgBuffTimestamp) @063ce000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_MainFunctionWrite/79 (35433 (estimated locally),0.16 per call) FlexCAN_IRQHandlerTxMB/47 (536870911 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_SetRxFifoFilter/127 (FlexCAN_SetRxFifoFilter) @063ae9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRxFifo_Privileged/59 (26575 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_Enable/126 (FlexCAN_Enable) @063ae8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxMb15Mask_Privileged/101 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxMb14Mask_Privileged/100 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetErrorInt_Privileged/98 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetTDCOffset_Privileged/92 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetBitrateCbt_Privileged/90 (13690 (estimated locally),0.06 per call) FlexCAN_Ip_SetBitrate_Privileged/85 (13690 (estimated locally),0.06 per call) FlexCAN_Ip_SetRxMaskType_Privileged/84 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/75 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxIndividualMask_Privileged/74 (11568 (estimated locally),0.05 per call) FlexCAN_Ip_SetRxMbGlobalMask_Privileged/71 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_ConfigRxFifo_Privileged/59 (27380 (estimated locally),0.13 per call) 
  Calls: 
FlexCAN_ReadRxFifo/125 (FlexCAN_ReadRxFifo) @063ae620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_IRQHandlerRxFIFO/48 (54331336 (estimated locally),0.05 per call) 
  Calls: 
FlexCAN_GetMsgBuff/124 (FlexCAN_GetMsgBuff) @0639dee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_IRQHandlerTxMB/47 (536870911 (estimated locally),0.50 per call) FlexCAN_IRQHandlerRxMB/46 (1073741823 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_LockRxMsgBuff/123 (FlexCAN_LockRxMsgBuff) @0639de00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_IRQHandlerTxMB/47 (536870911 (estimated locally),0.50 per call) FlexCAN_IRQHandlerRxMB/46 (1073741823 (estimated locally),1.00 per call) 
  Calls: 
OsIf_GetElapsed/122 (OsIf_GetElapsed) @0639da80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/104 (156507 (estimated locally),0.73 per call) FlexCAN_Ip_SendBlocking/70 (17560 (estimated locally),0.08 per call) FlexCAN_Ip_SendBlocking/70 (156507 (estimated locally),0.73 per call) FlexCAN_Ip_ReceiveBlocking/56 (313013 (estimated locally),1.46 per call) FlexCAN_ProccessLegacyRxFIFO/42 (1014686025 (estimated locally),8.83 per call) FlexCAN_AbortTxTransfer/50 (1014686025 (estimated locally),8.83 per call) 
  Calls: 
OsIf_GetCounter/121 (OsIf_GetCounter) @0639d9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/104 (17717 (estimated locally),0.08 per call) FlexCAN_Ip_SendBlocking/70 (1988 (estimated locally),0.01 per call) FlexCAN_Ip_SendBlocking/70 (17717 (estimated locally),0.08 per call) FlexCAN_Ip_ReceiveBlocking/56 (35433 (estimated locally),0.16 per call) FlexCAN_ProccessLegacyRxFIFO/42 (114863532 (estimated locally),1.00 per call) FlexCAN_AbortTxTransfer/50 (114863532 (estimated locally),1.00 per call) 
  Calls: 
OsIf_MicrosToTicks/120 (OsIf_MicrosToTicks) @0639d8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/104 (214748 (estimated locally),1.00 per call) FlexCAN_Ip_SendBlocking/70 (1988 (estimated locally),0.01 per call) FlexCAN_Ip_SendBlocking/70 (214748 (estimated locally),1.00 per call) FlexCAN_Ip_ReceiveBlocking/56 (214748 (estimated locally),1.00 per call) FlexCAN_ProccessLegacyRxFIFO/42 (114863532 (estimated locally),1.00 per call) FlexCAN_AbortTxTransfer/50 (114863532 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_SetRxMsgBuff/119 (FlexCAN_SetRxMsgBuff) @0639d460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRxMb/54 (25646 (estimated locally),0.12 per call) FlexCAN_Ip_ConfigRxMb/54 (25646 (estimated locally),0.12 per call) FlexCAN_Ip_ConfigRxMb/54 (25646 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_SetTxMsgBuff/118 (FlexCAN_SetTxMsgBuff) @0639d1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/60 (6412 (estimated locally),0.03 per call) FlexCAN_StartSendData/44 (8335 (estimated locally),0.04 per call) 
  Calls: 
FlexCAN_GetMsgBuffRegion/117 (FlexCAN_GetMsgBuffRegion) @0639d0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SendBlocking/70 (1988 (estimated locally),0.01 per call) FlexCAN_Ip_ConfigRemoteResponseMb/60 (6412 (estimated locally),0.03 per call) FlexCAN_AbortRxTransfer/51 (354334802 (estimated locally),0.33 per call) FlexCAN_AbortRxTransfer/51 (237404317 (estimated locally),0.22 per call) FlexCAN_IRQHandlerRxMB/46 (177167401 (estimated locally),0.17 per call) FlexCAN_AbortTxTransfer/50 (114863532 (estimated locally),1.00 per call) FlexCAN_StartSendData/44 (8335 (estimated locally),0.04 per call) 
  Calls: 
FlexCAN_IsMbOutOfRange/116 (FlexCAN_IsMbOutOfRange) @0639d000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/60 (13422 (estimated locally),0.06 per call) FlexCAN_Ip_ConfigRxMb/54 (53687 (estimated locally),0.25 per call) FlexCAN_StartSendData/44 (26844 (estimated locally),0.13 per call) FlexCAN_StartRxMessageBufferData/43 (107374 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_GetMbPayloadSize/115 (FlexCAN_GetMbPayloadSize) @06389ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/60 (26844 (estimated locally),0.13 per call) FlexCAN_StartSendData/44 (53687 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_SetMsgBuffIntCmd/114 (FlexCAN_SetMsgBuffIntCmd) @06389c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/60 (2116 (estimated locally),0.01 per call) FlexCAN_Ip_ReceiveBlocking/56 (12047 (estimated locally),0.06 per call) FlexCAN_Ip_ReceiveBlocking/56 (17717 (estimated locally),0.08 per call) FlexCAN_Ip_Receive/55 (17717 (estimated locally),0.08 per call) FlexCAN_Ip_Send/53 (2923 (estimated locally),0.01 per call) FlexCAN_IRQHandlerTxMB/47 (147934780 (estimated locally),0.14 per call) FlexCAN_IRQHandlerTxMB/47 (177167401 (estimated locally),0.17 per call) FlexCAN_ProccessLegacyRxFIFO/42 (19089400 (estimated locally),0.17 per call) FlexCAN_ProccessLegacyRxFIFO/42 (19089400 (estimated locally),0.17 per call) FlexCAN_ProccessLegacyRxFIFO/42 (19089400 (estimated locally),0.17 per call) FlexCAN_IRQHandlerRxMB/46 (147934780 (estimated locally),0.14 per call) FlexCAN_IRQHandlerRxMB/46 (177167401 (estimated locally),0.17 per call) FlexCAN_CompleteRxMessageFifoData/62 (35433 (estimated locally),0.16 per call) FlexCAN_CompleteRxMessageFifoData/62 (35433 (estimated locally),0.16 per call) FlexCAN_CompleteRxMessageFifoData/62 (35433 (estimated locally),0.16 per call) FlexCAN_StartRxMessageFifoData.part.0/161 (115158811 (estimated locally),0.11 per call) FlexCAN_StartRxMessageFifoData.part.0/161 (115158811 (estimated locally),0.11 per call) FlexCAN_StartRxMessageFifoData.part.0/161 (115158811 (estimated locally),0.11 per call) 
  Calls: 
FlexCAN_EnableRxFifo/113 (FlexCAN_EnableRxFifo) @06389700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitRxFifo/39 (354334802 (estimated locally),0.33 per call) 
  Calls: 
FlexCAN_SetMaxMsgBuffNum/112 (FlexCAN_SetMaxMsgBuffNum) @06389460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitCtroll/40 (536870913 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_SetPayloadSize/111 (FlexCAN_SetPayloadSize) @06389380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitCtroll/40 (536870913 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_ConfigCtrlOptions/110 (FlexCAN_ConfigCtrlOptions) @0637f540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitController/41 (378493993 (estimated locally),0.35 per call) 
  Calls: 
FlexCAN_Init/109 (FlexCAN_Init) @0637f2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitController/41 (756987987 (estimated locally),0.71 per call) 
  Calls: 
FlexCAN_Disable/108 (FlexCAN_Disable) @0637f000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxMb15Mask_Privileged/101 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxMb14Mask_Privileged/100 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetErrorInt_Privileged/98 (25394 (estimated locally),0.12 per call) FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetTDCOffset_Privileged/92 (13690 (estimated locally),0.06 per call) FlexCAN_Ip_SetBitrateCbt_Privileged/90 (13690 (estimated locally),0.06 per call) FlexCAN_Ip_SetBitrate_Privileged/85 (13690 (estimated locally),0.06 per call) FlexCAN_Ip_SetRxMaskType_Privileged/84 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetStopMode_Privileged/83 (35433 (estimated locally),0.16 per call) FlexCAN_Ip_Deinit_Privileged/76 (35433 (estimated locally),0.16 per call) FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/75 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_SetRxIndividualMask_Privileged/74 (11568 (estimated locally),0.05 per call) FlexCAN_Ip_SetRxMbGlobalMask_Privileged/71 (27380 (estimated locally),0.13 per call) FlexCAN_Ip_ConfigRxFifo_Privileged/59 (27380 (estimated locally),0.13 per call) FlexCAN_InitController/41 (378493993 (estimated locally),0.35 per call) FlexCAN_InitController/41 (209057533 (estimated locally),0.19 per call) FlexCAN_InitCtroll/40 (177167401 (estimated locally),0.17 per call) FlexCAN_InitCtroll/40 (536870913 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_EnterFreezeMode/107 (FlexCAN_EnterFreezeMode) @0637fee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStopMode_Privileged/83 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_Deinit_Privileged/76 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_EnterFreezeMode_Privileged/72 (1073741824 (estimated locally),1.00 per call) FlexCAN_InitController/41 (378493993 (estimated locally),0.35 per call) FlexCAN_InitController/41 (633507677 (estimated locally),0.59 per call) FlexCAN_InitCtroll/40 (177167401 (estimated locally),0.17 per call) FlexCAN_InitCtroll/40 (536870913 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_SetOperationMode/106 (FlexCAN_SetOperationMode) @0637fc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_Init_Privileged/52 (13288 (estimated locally),0.06 per call) 
  Calls: 
FlexCAN_IsFDAvailable/105 (FlexCAN_IsFDAvailable) @0637fb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/92 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_Init_Privileged/52 (26844 (estimated locally),0.13 per call) FlexCAN_InitController/41 (378493993 (estimated locally),0.35 per call) FlexCAN_SetRegDefaultVal/36 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_Ip_ManualBusOffRecovery/104 (FlexCAN_Ip_ManualBusOffRecovery) @0637f700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_GetElapsed/122 (156507 (estimated locally),0.73 per call) OsIf_GetCounter/121 (17717 (estimated locally),0.08 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20/151 (17717 (estimated locally),0.08 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20/150 (17717 (estimated locally),0.08 per call) OsIf_MicrosToTicks/120 (214748 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetListenOnlyMode/103 (FlexCAN_Ip_GetListenOnlyMode) @0637f460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (FlexCAN_Ip_SetListenOnlyMode_Privileged) @0637f1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10/149 (26575 (estimated locally),0.12 per call) FlexCAN_SetListenOnlyMode/5 (26575 (estimated locally),0.12 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10/148 (26575 (estimated locally),0.12 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_SetRxMb15Mask_Privileged/101 (FlexCAN_Ip_SetRxMb15Mask_Privileged) @06202d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_SetRxMb14Mask_Privileged/100 (FlexCAN_Ip_SetRxMb14Mask_Privileged) @062027e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_AbortTransfer/99 (FlexCAN_Ip_AbortTransfer) @062022a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_AbortRxTransfer/51 (2595 (estimated locally),0.01 per call) FlexCAN_AbortTxTransfer/50 (2595 (estimated locally),0.01 per call) FLEXCAN_ClearMsgBuffIntCmd/147 (12823 (estimated locally),0.06 per call) 
FlexCAN_Ip_SetErrorInt_Privileged/98 (FlexCAN_Ip_SetErrorInt_Privileged) @06202ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (25394 (estimated locally),0.12 per call) FlexCAN_SetErrIntCmd/146 (5154 (estimated locally),0.02 per call) FlexCAN_SetErrIntCmd/146 (5154 (estimated locally),0.02 per call) FlexCAN_SetErrIntCmd/146 (15617 (estimated locally),0.07 per call) FlexCAN_SetErrIntCmd/146 (15617 (estimated locally),0.07 per call) FlexCAN_SetErrIntCmd/146 (15617 (estimated locally),0.07 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_DisableInterrupts_Privileged/97 (FlexCAN_Ip_DisableInterrupts_Privileged) @06202c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_DisableInterrupts/145 (44539 (estimated locally),0.21 per call) 
FlexCAN_Ip_EnableInterrupts_Privileged/96 (FlexCAN_Ip_EnableInterrupts_Privileged) @062029a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_EnableInterrupts/144 (44539 (estimated locally),0.21 per call) 
FlexCAN_Ip_ClearBuffStatusFlag/95 (FlexCAN_Ip_ClearBuffStatusFlag) @06202700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_GetBuffStatusFlag/94 (FlexCAN_Ip_GetBuffStatusFlag) @06202460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_GetBuffStatusFlag/8 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged) @062021c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17/143 (26575 (estimated locally),0.12 per call) FlexCAN_SetTxArbitrationStartDelay/34 (26575 (estimated locally),0.12 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17/142 (26575 (estimated locally),0.12 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_SetTDCOffset_Privileged/92 (FlexCAN_Ip_SetTDCOffset_Privileged) @061f7d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (13690 (estimated locally),0.06 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16/141 (13288 (estimated locally),0.06 per call) FlexCAN_SetTDCOffset/2 (13288 (estimated locally),0.06 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16/140 (13288 (estimated locally),0.06 per call) FlexCAN_IsFDAvailable/105 (107374 (estimated locally),0.50 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_GetBitrateFD/91 (FlexCAN_Ip_GetBitrateFD) @061f77e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_GetFDTimeSegments/15 (53687 (estimated locally),0.25 per call) 
FlexCAN_Ip_SetBitrateCbt_Privileged/90 (FlexCAN_Ip_SetBitrateCbt_Privileged) @061f72a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (13690 (estimated locally),0.06 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15/139 (6644 (estimated locally),0.03 per call) FlexCAN_SetFDTimeSegments/10 (6644 (estimated locally),0.03 per call) FlexCAN_SetFDEnabled/4 (6644 (estimated locally),0.03 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15/138 (6644 (estimated locally),0.03 per call) FlexCAN_Enable/126 (13690 (estimated locally),0.06 per call) 
FlexCAN_Ip_GetTDCValue/89 (FlexCAN_Ip_GetTDCValue) @061f7ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_GetTDCFail/88 (FlexCAN_Ip_GetTDCFail) @061f7c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_ClearTDCFail/87 (FlexCAN_Ip_ClearTDCFail) @061f79a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09/137 (107374 (estimated locally),0.50 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09/136 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_GetBitrate/86 (FlexCAN_Ip_GetBitrate) @061f7700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_GetTimeSegments/14 (31675 (estimated locally),0.15 per call) FlexCAN_GetExtendedTimeSegments/13 (22012 (estimated locally),0.10 per call) 
FlexCAN_Ip_SetBitrate_Privileged/85 (FlexCAN_Ip_SetBitrate_Privileged) @061f7460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (13690 (estimated locally),0.06 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14/135 (13288 (estimated locally),0.06 per call) FlexCAN_SetTimeSegments/11 (7840 (estimated locally),0.04 per call) FlexCAN_SetExtendedTimeSegments/12 (5448 (estimated locally),0.03 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14/134 (13288 (estimated locally),0.06 per call) FlexCAN_Enable/126 (13690 (estimated locally),0.06 per call) 
FlexCAN_Ip_SetRxMaskType_Privileged/84 (FlexCAN_Ip_SetRxMaskType_Privileged) @061f71c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08/133 (26575 (estimated locally),0.12 per call) FlexCAN_SetRxMaskType/35 (26575 (estimated locally),0.12 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08/132 (26575 (estimated locally),0.12 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_SetStopMode_Privileged/83 (FlexCAN_Ip_SetStopMode_Privileged) @061edd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (35433 (estimated locally),0.16 per call) FlexCAN_EnterFreezeMode/107 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_SetStartMode_Privileged/82 (FlexCAN_Ip_SetStartMode_Privileged) @061ed7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ExitFreezeMode/129 (107374 (estimated locally),0.50 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07/131 (107374 (estimated locally),0.50 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07/130 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_GetStartMode_Privileged/81 (FlexCAN_Ip_GetStartMode_Privileged) @061ed2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_GetStopMode_Privileged/80 (FlexCAN_Ip_GetStopMode_Privileged) @061edee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_MainFunctionWrite/79 (FlexCAN_Ip_MainFunctionWrite) @061edc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (35433 (estimated locally),0.16 per call) FlexCAN_GetMsgBuffTimestamp/128 (35433 (estimated locally),0.16 per call) FlexCAN_GetBuffStatusFlag/8 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_MainFunctionBusOff_Privileged/78 (FlexCAN_Ip_MainFunctionBusOff_Privileged) @061ed9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(37581 (estimated locally),0.18 per call) 
FlexCAN_Ip_MainFunctionRead/77 (FlexCAN_Ip_MainFunctionRead) @061ed700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_IRQHandlerRxMB/46 (3613 (estimated locally),0.02 per call) FlexCAN_GetBuffStatusFlag/8 (35702 (estimated locally),0.17 per call) FlexCAN_IRQHandlerRxFIFO/48 (2968 (estimated locally),0.01 per call) 
FlexCAN_Ip_Deinit_Privileged/76 (FlexCAN_Ip_Deinit_Privileged) @061ed460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (write)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (35433 (estimated locally),0.16 per call) FlexCAN_SetRegDefaultVal/36 (35433 (estimated locally),0.16 per call) FlexCAN_EnterFreezeMode/107 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/75 (FlexCAN_Ip_SetRxFifoGlobalMask_Privileged) @061ed1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_SetRxIndividualMask_Privileged/74 (FlexCAN_Ip_SetRxIndividualMask_Privileged) @061dcd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (11568 (estimated locally),0.05 per call) FlexCAN_Enable/126 (11568 (estimated locally),0.05 per call) 
FlexCAN_Ip_ExitFreezeMode_Privileged/73 (FlexCAN_Ip_ExitFreezeMode_Privileged) @061dc7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ExitFreezeMode/129 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_EnterFreezeMode_Privileged/72 (FlexCAN_Ip_EnterFreezeMode_Privileged) @061dc2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_EnterFreezeMode/107 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxMbGlobalMask_Privileged/71 (FlexCAN_Ip_SetRxMbGlobalMask_Privileged) @061dcee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_SendBlocking/70 (FlexCAN_Ip_SendBlocking) @061dcc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (17717 (estimated locally),0.08 per call) FlexCAN_GetBuffStatusFlag/8 (18582 (estimated locally),0.09 per call) OsIf_GetElapsed/122 (17560 (estimated locally),0.08 per call) OsIf_GetCounter/121 (1988 (estimated locally),0.01 per call) OsIf_MicrosToTicks/120 (1988 (estimated locally),0.01 per call) FlexCAN_GetMsgBuffRegion/117 (1988 (estimated locally),0.01 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (1988 (estimated locally),0.01 per call) FlexCAN_GetBuffStatusFlag/8 (165615 (estimated locally),0.77 per call) OsIf_GetElapsed/122 (156507 (estimated locally),0.73 per call) OsIf_GetCounter/121 (17717 (estimated locally),0.08 per call) FlexCAN_StartSendData/44 (53687 (estimated locally),0.25 per call) OsIf_MicrosToTicks/120 (214748 (estimated locally),1.00 per call) 
FlexCAN_BusOff_IRQHandler/69 (FlexCAN_BusOff_IRQHandler) @061dc9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(13153 (estimated locally),0.06 per call) 
   Indirect call(13153 (estimated locally),0.06 per call) 
   Indirect call(13153 (estimated locally),0.06 per call) 
FlexCAN_Error_IRQHandler/68 (FlexCAN_Error_IRQHandler) @061dc700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(10786 (estimated locally),0.05 per call) 
   Indirect call(13153 (estimated locally),0.06 per call) 
FlexCAN_Ip_GetControllerRxErrorCounter/67 (FlexCAN_Ip_GetControllerRxErrorCounter) @061dc460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_GetControllerTxErrorCounter/66 (FlexCAN_Ip_GetControllerTxErrorCounter) @061dc1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_GetErrorStatus/65 (FlexCAN_Ip_GetErrorStatus) @061cdd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_ClearErrorStatus/64 (FlexCAN_Ip_ClearErrorStatus) @061cd7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_IRQHandler/63 (FlexCAN_IRQHandler) @061cd2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (202115 (estimated locally),0.94 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (3173 (estimated locally),0.01 per call) FlexCAN_GetMsgBuffIntStatusFlag/30 (19233 (estimated locally),0.09 per call) FlexCAN_IRQHandlerTxMB/47 (3893 (estimated locally),0.02 per call) FlexCAN_IRQHandlerRxMB/46 (3251 (estimated locally),0.02 per call) FlexCAN_IRQHandlerRxFIFO/48 (3173 (estimated locally),0.01 per call) FlexCAN_ProcessSpuriousInterruptMB/49 (9473 (estimated locally),0.04 per call) FlexCAN_GetMsgBuffIntStatusFlag/30 (239641 (estimated locally),1.12 per call) FlexCAN_GetMsgBuffIntStatusFlag/30 (28706 (estimated locally),0.13 per call) 
FlexCAN_CompleteRxMessageFifoData/62 (FlexCAN_CompleteRxMessageFifoData) @061cdee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandlerRxFIFO/48 (17929341 (estimated locally),0.02 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (35433 (estimated locally),0.16 per call) FlexCAN_SetMsgBuffIntCmd/114 (35433 (estimated locally),0.16 per call) FlexCAN_SetMsgBuffIntCmd/114 (35433 (estimated locally),0.16 per call) 
FlexCAN_Ip_GetTransferStatus/61 (FlexCAN_Ip_GetTransferStatus) @061cdc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_ConfigRemoteResponseMb/60 (FlexCAN_Ip_ConfigRemoteResponseMb) @061cd9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (2116 (estimated locally),0.01 per call) FlexCAN_SetTxMsgBuff/118 (6412 (estimated locally),0.03 per call) FlexCAN_GetMsgBuffRegion/117 (6412 (estimated locally),0.03 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (6412 (estimated locally),0.03 per call) FlexCAN_IsMbOutOfRange/116 (13422 (estimated locally),0.06 per call) FlexCAN_GetMbPayloadSize/115 (26844 (estimated locally),0.13 per call) 
FlexCAN_Ip_ConfigRxFifo_Privileged/59 (FlexCAN_Ip_ConfigRxFifo_Privileged) @061cd700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/108 (27380 (estimated locally),0.13 per call) FlexCAN_SetRxFifoFilter/127 (26575 (estimated locally),0.12 per call) FlexCAN_Enable/126 (27380 (estimated locally),0.13 per call) 
FlexCAN_Ip_RxFifoBlocking/58 (FlexCAN_Ip_RxFifoBlocking) @061cd460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ProccessLegacyRxFIFO/42 (35433 (estimated locally),0.16 per call) FlexCAN_StartRxMessageFifoData/45 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_RxFifo/57 (FlexCAN_Ip_RxFifo) @061cd1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_StartRxMessageFifoData/45 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_ReceiveBlocking/56 (FlexCAN_Ip_ReceiveBlocking) @061bbd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxState/38 (read)Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (12047 (estimated locally),0.06 per call) OsIf_GetElapsed/122 (313013 (estimated locally),1.46 per call) FlexCAN_IRQHandlerRxMB/46 (34087 (estimated locally),0.16 per call) FlexCAN_GetBuffStatusFlag/8 (103294 (estimated locally),0.48 per call) OsIf_GetCounter/121 (35433 (estimated locally),0.16 per call) FlexCAN_SetMsgBuffIntCmd/114 (17717 (estimated locally),0.08 per call) FlexCAN_StartRxMessageBufferData/43 (107374 (estimated locally),0.50 per call) OsIf_MicrosToTicks/120 (214748 (estimated locally),1.00 per call) 
FlexCAN_Ip_Receive/55 (FlexCAN_Ip_Receive) @061bb7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (17717 (estimated locally),0.08 per call) FlexCAN_StartRxMessageBufferData/43 (107374 (estimated locally),0.50 per call) 
FlexCAN_Ip_ConfigRxMb/54 (FlexCAN_Ip_ConfigRxMb) @061bb2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetRxMsgBuff/119 (25646 (estimated locally),0.12 per call) FlexCAN_SetRxMsgBuff/119 (25646 (estimated locally),0.12 per call) FlexCAN_SetRxMsgBuff/119 (25646 (estimated locally),0.12 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (25646 (estimated locally),0.12 per call) FlexCAN_IsMbOutOfRange/116 (53687 (estimated locally),0.25 per call) 
FlexCAN_Ip_Send/53 (FlexCAN_Ip_Send) @061bbee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (2923 (estimated locally),0.01 per call) FlexCAN_StartSendData/44 (17717 (estimated locally),0.08 per call) 
FlexCAN_Ip_Init_Privileged/52 (FlexCAN_Ip_Init_Privileged) @061bbc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (write)
  Referring: 
  Availability: available
  Function flags: count:214748 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetOperationMode/106 (13288 (estimated locally),0.06 per call) FlexCAN_SetTimeSegments/11 (6644 (estimated locally),0.03 per call) FlexCAN_SetFDTimeSegments/10 (6644 (estimated locally),0.03 per call) FlexCAN_SetExtendedTimeSegments/12 (6644 (estimated locally),0.03 per call) FlexCAN_EnableExtCbt/17 (13288 (estimated locally),0.06 per call) FlexCAN_InitController/41 (40265 (estimated locally),0.19 per call) FlexCAN_IsFDAvailable/105 (26844 (estimated locally),0.13 per call) 
FlexCAN_AbortRxTransfer/51 (FlexCAN_AbortRxTransfer) @061bb9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_AbortTransfer/99 (2595 (estimated locally),0.01 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (1073741824 (estimated locally),1.00 per call) FlexCAN_GetMsgBuffRegion/117 (354334802 (estimated locally),0.33 per call) FLEXCAN_ClearMsgBuffIntCmd/147 (237404317 (estimated locally),0.22 per call) FlexCAN_GetMsgBuffRegion/117 (237404317 (estimated locally),0.22 per call) RxFifoOcuppiedLastMsgBuff/21 (719407022 (estimated locally),0.67 per call) 
FlexCAN_AbortTxTransfer/50 (FlexCAN_AbortTxTransfer) @061bb700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_AbortTransfer/99 (2595 (estimated locally),0.01 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (114863532 (estimated locally),1.00 per call) FlexCAN_GetBuffStatusFlag/8 (1073741824 (estimated locally),9.35 per call) OsIf_GetElapsed/122 (1014686025 (estimated locally),8.83 per call) OsIf_GetCounter/121 (114863532 (estimated locally),1.00 per call) OsIf_MicrosToTicks/120 (114863532 (estimated locally),1.00 per call) FlexCAN_GetMsgBuffRegion/117 (114863532 (estimated locally),1.00 per call) 
FlexCAN_ProcessSpuriousInterruptMB/49 (FlexCAN_ProcessSpuriousInterruptMB) @061bb460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:118111602 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/63 (9473 (estimated locally),0.04 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (52034066 (estimated locally),0.44 per call) FlexCAN_GetBuffStatusImask/9 (315357973 (estimated locally),2.67 per call) FlexCAN_GetBuffStatusFlag/8 (955630223 (estimated locally),8.09 per call) 
FlexCAN_IRQHandlerRxFIFO/48 (FlexCAN_IRQHandlerRxFIFO) @061bb1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_MainFunctionRead/77 (2968 (estimated locally),0.01 per call) FlexCAN_IRQHandler/63 (3173 (estimated locally),0.01 per call) FlexCAN_ProccessLegacyRxFIFO/42 (160726266 (estimated locally),1.40 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/7 (268435456 (estimated locally),0.25 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (268435456 (estimated locally),0.25 per call) FlexCAN_CompleteRxMessageFifoData/62 (17929341 (estimated locally),0.02 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (54331336 (estimated locally),0.05 per call) FlexCAN_ReadRxFifo/125 (54331336 (estimated locally),0.05 per call) 
   Indirect call(187904819 (estimated locally),0.18 per call) 
   Indirect call(187904819 (estimated locally),0.18 per call) 
   Indirect call(38031935 (estimated locally),0.04 per call) 
FlexCAN_IRQHandlerTxMB/47 (FlexCAN_IRQHandlerTxMB) @062d9d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/63 (3893 (estimated locally),0.02 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (147934780 (estimated locally),0.14 per call) FlexCAN_SetMsgBuffIntCmd/114 (177167401 (estimated locally),0.17 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (536870911 (estimated locally),0.50 per call) FlexCAN_GetMsgBuffTimestamp/128 (536870911 (estimated locally),0.50 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (108662672 (estimated locally),0.10 per call) FlexCAN_GetMsgBuff/124 (536870911 (estimated locally),0.50 per call) FlexCAN_LockRxMsgBuff/123 (536870911 (estimated locally),0.50 per call) 
   Indirect call(751619278 (estimated locally),0.70 per call) 
FlexCAN_IRQHandlerRxMB/46 (FlexCAN_IRQHandlerRxMB) @062d97e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_MainFunctionRead/77 (3613 (estimated locally),0.02 per call) FlexCAN_IRQHandler/63 (3251 (estimated locally),0.02 per call) FlexCAN_Ip_ReceiveBlocking/56 (34087 (estimated locally),0.16 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (147934780 (estimated locally),0.14 per call) FlexCAN_SetMsgBuffIntCmd/114 (177167401 (estimated locally),0.17 per call) FlexCAN_GetMsgBuffRegion/117 (177167401 (estimated locally),0.17 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (1073741823 (estimated locally),1.00 per call) FlexCAN_GetMsgBuff/124 (1073741823 (estimated locally),1.00 per call) FlexCAN_LockRxMsgBuff/123 (1073741823 (estimated locally),1.00 per call) 
   Indirect call(751619277 (estimated locally),0.70 per call) 
FlexCAN_StartRxMessageFifoData/45 (FlexCAN_StartRxMessageFifoData) @062d92a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_RxFifoBlocking/58 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_RxFifo/57 (107374 (estimated locally),0.50 per call) 
  Calls: FlexCAN_StartRxMessageFifoData.part.0/161 (107374 (estimated locally),0.50 per call) 
FlexCAN_StartSendData/44 (FlexCAN_StartSendData) @062d9ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxState/38 (read)Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SendBlocking/70 (53687 (estimated locally),0.25 per call) FlexCAN_Ip_Send/53 (17717 (estimated locally),0.08 per call) 
  Calls: FlexCAN_SetTxMsgBuff/118 (8335 (estimated locally),0.04 per call) FlexCAN_GetMsgBuffRegion/117 (8335 (estimated locally),0.04 per call) FlexCAN_ClearMsgBuffIntStatusFlag/7 (8335 (estimated locally),0.04 per call) FlexCAN_IsMbOutOfRange/116 (26844 (estimated locally),0.13 per call) FlexCAN_GetMbPayloadSize/115 (53687 (estimated locally),0.25 per call) 
FlexCAN_StartRxMessageBufferData/43 (FlexCAN_StartRxMessageBufferData) @062d9c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/37 (read)Flexcan_Ip_apxState/38 (read)
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_ReceiveBlocking/56 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_Receive/55 (107374 (estimated locally),0.50 per call) 
  Calls: FlexCAN_IsMbOutOfRange/116 (107374 (estimated locally),0.50 per call) 
FlexCAN_ProccessLegacyRxFIFO/42 (FlexCAN_ProccessLegacyRxFIFO) @062d99a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxState/38 (read)Flexcan_Ip_apxBase/37 (read)
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_RxFifoBlocking/58 (35433 (estimated locally),0.16 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/114 (19089400 (estimated locally),0.17 per call) FlexCAN_SetMsgBuffIntCmd/114 (19089400 (estimated locally),0.17 per call) FlexCAN_SetMsgBuffIntCmd/114 (19089400 (estimated locally),0.17 per call) OsIf_GetElapsed/122 (1014686025 (estimated locally),8.83 per call) FlexCAN_IRQHandlerRxFIFO/48 (160726266 (estimated locally),1.40 per call) FlexCAN_GetBuffStatusFlag/8 (487049291 (estimated locally),4.24 per call) OsIf_GetCounter/121 (114863532 (estimated locally),1.00 per call) OsIf_MicrosToTicks/120 (114863532 (estimated locally),1.00 per call) 
FlexCAN_InitController/41 (FlexCAN_InitController) @062d9700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Init_Privileged/52 (40265 (estimated locally),0.19 per call) 
  Calls: FlexCAN_InitCtroll/40 (378493993 (estimated locally),0.35 per call) FlexCAN_ConfigCtrlOptions/110 (378493993 (estimated locally),0.35 per call) FlexCAN_SetFDEnabled/4 (124903018 (estimated locally),0.12 per call) FlexCAN_IsFDAvailable/105 (378493993 (estimated locally),0.35 per call) FlexCAN_Disable/108 (378493993 (estimated locally),0.35 per call) FlexCAN_EnterFreezeMode/107 (378493993 (estimated locally),0.35 per call) FlexCAN_Init/109 (756987987 (estimated locally),0.71 per call) FlexCAN_SetClkSrc/29 (756987987 (estimated locally),0.71 per call) FlexCAN_Disable/108 (209057533 (estimated locally),0.19 per call) FlexCAN_EnterFreezeMode/107 (633507677 (estimated locally),0.59 per call) 
FlexCAN_InitCtroll/40 (FlexCAN_InitCtroll) @062d9460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitController/41 (378493993 (estimated locally),0.35 per call) 
  Calls: FlexCAN_Disable/108 (177167401 (estimated locally),0.17 per call) FlexCAN_EnterFreezeMode/107 (177167401 (estimated locally),0.17 per call) FlexCAN_SetMaxMsgBuffNum/112 (536870913 (estimated locally),0.50 per call) FlexCAN_SetPayloadSize/111 (536870913 (estimated locally),0.50 per call) FlexCAN_Disable/108 (536870913 (estimated locally),0.50 per call) FlexCAN_EnterFreezeMode/107 (536870913 (estimated locally),0.50 per call) FlexCAN_InitRxFifo/39 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_InitRxFifo/39 (FlexCAN_InitRxFifo) @062d91c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitCtroll/40 (1073741824 (estimated locally),1.00 per call) 
  Calls: FlexCAN_EnableRxFifo/113 (354334802 (estimated locally),0.33 per call) 
Flexcan_Ip_apxState/38 (Flexcan_Ip_apxState) @0618a678
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: FlexCAN_IRQHandlerTxMB/47 (read)FlexCAN_AbortRxTransfer/51 (read)FlexCAN_CompleteRxMessageFifoData/62 (read)FlexCAN_Ip_Init_Privileged/52 (write)FlexCAN_Ip_Send/53 (read)FlexCAN_StartRxMessageFifoData.part.0/161 (read)FlexCAN_Ip_ConfigRxMb/54 (read)FlexCAN_StartSendData/44 (read)FlexCAN_Ip_DisableInterrupts_Privileged/97 (read)FlexCAN_IRQHandlerRxMB/46 (read)FlexCAN_AbortTxTransfer/50 (read)FlexCAN_ProcessSpuriousInterruptMB/49 (read)FlexCAN_Ip_Receive/55 (read)FlexCAN_Ip_ReceiveBlocking/56 (read)FlexCAN_Ip_ConfigRemoteResponseMb/60 (read)FlexCAN_IRQHandlerRxFIFO/48 (read)FlexCAN_ProccessLegacyRxFIFO/42 (read)FlexCAN_Ip_GetTransferStatus/61 (read)FlexCAN_IRQHandler/63 (read)FlexCAN_Error_IRQHandler/68 (read)FlexCAN_BusOff_IRQHandler/69 (read)FlexCAN_Ip_SendBlocking/70 (read)FlexCAN_Ip_Deinit_Privileged/76 (write)FlexCAN_Ip_MainFunctionRead/77 (read)FlexCAN_Ip_MainFunctionBusOff_Privileged/78 (read)FlexCAN_Ip_MainFunctionWrite/79 (read)FlexCAN_Ip_EnableInterrupts_Privileged/96 (read)FlexCAN_StartRxMessageBufferData/43 (read)FlexCAN_Ip_AbortTransfer/99 (read)
  Availability: available
  Varpool flags:
Flexcan_Ip_apxBase/37 (Flexcan_Ip_apxBase) @0618a5e8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: FlexCAN_IRQHandlerTxMB/47 (read)FlexCAN_AbortRxTransfer/51 (read)FlexCAN_CompleteRxMessageFifoData/62 (read)FlexCAN_Ip_Init_Privileged/52 (read)FlexCAN_Ip_Send/53 (read)FlexCAN_StartRxMessageFifoData.part.0/161 (read)FlexCAN_Ip_ConfigRxMb/54 (read)FlexCAN_StartSendData/44 (read)FlexCAN_Ip_GetListenOnlyMode/103 (read)FlexCAN_IRQHandlerRxMB/46 (read)FlexCAN_AbortTxTransfer/50 (read)FlexCAN_ProcessSpuriousInterruptMB/49 (read)FlexCAN_Ip_Receive/55 (read)FlexCAN_Ip_ReceiveBlocking/56 (read)FlexCAN_Ip_ConfigRxFifo_Privileged/59 (read)FlexCAN_IRQHandlerRxFIFO/48 (read)FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (read)FlexCAN_Ip_ConfigRemoteResponseMb/60 (read)FlexCAN_IRQHandler/63 (read)FlexCAN_Ip_ClearErrorStatus/64 (read)FlexCAN_Ip_GetErrorStatus/65 (read)FlexCAN_Ip_GetControllerTxErrorCounter/66 (read)FlexCAN_Ip_GetControllerRxErrorCounter/67 (read)FlexCAN_Error_IRQHandler/68 (read)FlexCAN_BusOff_IRQHandler/69 (read)FlexCAN_Ip_SendBlocking/70 (read)FlexCAN_Ip_SetRxMbGlobalMask_Privileged/71 (read)FlexCAN_Ip_EnterFreezeMode_Privileged/72 (read)FlexCAN_Ip_ExitFreezeMode_Privileged/73 (read)FlexCAN_Ip_SetRxIndividualMask_Privileged/74 (read)FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/75 (read)FlexCAN_Ip_Deinit_Privileged/76 (read)FlexCAN_Ip_MainFunctionRead/77 (read)FlexCAN_Ip_MainFunctionBusOff_Privileged/78 (read)FlexCAN_Ip_MainFunctionWrite/79 (read)FlexCAN_Ip_GetStopMode_Privileged/80 (read)FlexCAN_Ip_GetStartMode_Privileged/81 (read)FlexCAN_Ip_SetStartMode_Privileged/82 (read)FlexCAN_Ip_SetStopMode_Privileged/83 (read)FlexCAN_Ip_SetRxMaskType_Privileged/84 (read)FlexCAN_Ip_SetBitrate_Privileged/85 (read)FlexCAN_Ip_GetBitrate/86 (read)FlexCAN_Ip_ClearTDCFail/87 (read)FlexCAN_Ip_GetTDCFail/88 (read)FlexCAN_Ip_GetTDCValue/89 (read)FlexCAN_Ip_SetBitrateCbt_Privileged/90 (read)FlexCAN_Ip_GetBitrateFD/91 (read)FlexCAN_Ip_SetTDCOffset_Privileged/92 (read)FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (read)FlexCAN_Ip_GetBuffStatusFlag/94 (read)FlexCAN_Ip_ClearBuffStatusFlag/95 (read)FlexCAN_Ip_EnableInterrupts_Privileged/96 (read)FlexCAN_Ip_DisableInterrupts_Privileged/97 (read)FlexCAN_StartRxMessageBufferData/43 (read)FlexCAN_ProccessLegacyRxFIFO/42 (read)FlexCAN_Ip_SetErrorInt_Privileged/98 (read)FlexCAN_Ip_AbortTransfer/99 (read)FlexCAN_Ip_SetRxMb14Mask_Privileged/100 (read)FlexCAN_Ip_SetRxMb15Mask_Privileged/101 (read)FlexCAN_Ip_ManualBusOffRecovery/104 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FlexCAN_SetRegDefaultVal/36 (FlexCAN_SetRegDefaultVal) @062cec40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Deinit_Privileged/76 (35433 (estimated locally),0.16 per call) 
  Calls: FlexCAN_IsFDAvailable/105 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_SetRxMaskType/35 (FlexCAN_SetRxMaskType) @062ce8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetRxMaskType_Privileged/84 (26575 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_SetTxArbitrationStartDelay/34 (FlexCAN_SetTxArbitrationStartDelay) @062ce460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/93 (26575 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_GetMsgBuffIntStatusFlag/30 (FlexCAN_GetMsgBuffIntStatusFlag) @062c98c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/63 (19233 (estimated locally),0.09 per call) FlexCAN_IRQHandler/63 (239641 (estimated locally),1.12 per call) FlexCAN_IRQHandler/63 (28706 (estimated locally),0.13 per call) 
  Calls: FlexCAN_GetMsgBuffIntStatusFlag.part.0/158 (536870912 (estimated locally),0.50 per call) 
FlexCAN_SetClkSrc/29 (FlexCAN_SetClkSrc) @062c9620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitController/41 (756987987 (estimated locally),0.71 per call) 
  Calls: 
RxFifoOcuppiedLastMsgBuff/21 (RxFifoOcuppiedLastMsgBuff) @062c18c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_AbortRxTransfer/51 (719407022 (estimated locally),0.67 per call) 
  Calls: 
FlexCAN_EnableExtCbt/17 (FlexCAN_EnableExtCbt) @062bbc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Init_Privileged/52 (13288 (estimated locally),0.06 per call) 
  Calls: 
FlexCAN_GetFDTimeSegments/15 (FlexCAN_GetFDTimeSegments) @062bb620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrateFD/91 (53687 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_GetTimeSegments/14 (FlexCAN_GetTimeSegments) @062bb380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrate/86 (31675 (estimated locally),0.15 per call) 
  Calls: 
FlexCAN_GetExtendedTimeSegments/13 (FlexCAN_GetExtendedTimeSegments) @062bb0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrate/86 (22012 (estimated locally),0.10 per call) 
  Calls: 
FlexCAN_SetExtendedTimeSegments/12 (FlexCAN_SetExtendedTimeSegments) @062b6e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/85 (5448 (estimated locally),0.03 per call) FlexCAN_Ip_Init_Privileged/52 (6644 (estimated locally),0.03 per call) 
  Calls: FlexCAN_SetExtendedTimeSegments.part.0/157 (107374 (estimated locally),0.50 per call) 
FlexCAN_SetTimeSegments/11 (FlexCAN_SetTimeSegments) @062b6700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/85 (7840 (estimated locally),0.04 per call) FlexCAN_Ip_Init_Privileged/52 (6644 (estimated locally),0.03 per call) 
  Calls: FlexCAN_SetTimeSegments.part.0/155 (107374 (estimated locally),0.50 per call) 
FlexCAN_SetFDTimeSegments/10 (FlexCAN_SetFDTimeSegments) @062b6000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/90 (6644 (estimated locally),0.03 per call) FlexCAN_Ip_Init_Privileged/52 (6644 (estimated locally),0.03 per call) 
  Calls: FlexCAN_SetFDTimeSegments.part.0/153 (107374 (estimated locally),0.50 per call) 
FlexCAN_GetBuffStatusImask/9 (FlexCAN_GetBuffStatusImask) @062b18c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_ProcessSpuriousInterruptMB/49 (315357973 (estimated locally),2.67 per call) 
  Calls: 
FlexCAN_GetBuffStatusFlag/8 (FlexCAN_GetBuffStatusFlag) @062b1620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBuffStatusFlag/94 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_MainFunctionWrite/79 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_MainFunctionRead/77 (35702 (estimated locally),0.17 per call) FlexCAN_Ip_SendBlocking/70 (18582 (estimated locally),0.09 per call) FlexCAN_Ip_SendBlocking/70 (165615 (estimated locally),0.77 per call) FlexCAN_Ip_ReceiveBlocking/56 (103294 (estimated locally),0.48 per call) FlexCAN_ProccessLegacyRxFIFO/42 (487049291 (estimated locally),4.24 per call) FlexCAN_AbortTxTransfer/50 (1073741824 (estimated locally),9.35 per call) FlexCAN_ProcessSpuriousInterruptMB/49 (955630223 (estimated locally),8.09 per call) 
  Calls: 
FlexCAN_ClearMsgBuffIntStatusFlag/7 (FlexCAN_ClearMsgBuffIntStatusFlag) @062b1380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_ClearBuffStatusFlag/95 (107374 (estimated locally),0.50 per call) FlexCAN_Ip_MainFunctionWrite/79 (35433 (estimated locally),0.16 per call) FlexCAN_Ip_SendBlocking/70 (17717 (estimated locally),0.08 per call) FlexCAN_Ip_SendBlocking/70 (1988 (estimated locally),0.01 per call) FlexCAN_IRQHandler/63 (202115 (estimated locally),0.94 per call) FlexCAN_IRQHandler/63 (3173 (estimated locally),0.01 per call) FlexCAN_Ip_ConfigRemoteResponseMb/60 (6412 (estimated locally),0.03 per call) FlexCAN_Ip_ConfigRxMb/54 (25646 (estimated locally),0.12 per call) FlexCAN_AbortRxTransfer/51 (1073741824 (estimated locally),1.00 per call) FlexCAN_IRQHandlerTxMB/47 (536870911 (estimated locally),0.50 per call) FlexCAN_IRQHandlerTxMB/47 (108662672 (estimated locally),0.10 per call) FlexCAN_IRQHandlerRxFIFO/48 (268435456 (estimated locally),0.25 per call) FlexCAN_IRQHandlerRxFIFO/48 (268435456 (estimated locally),0.25 per call) FlexCAN_IRQHandlerRxFIFO/48 (54331336 (estimated locally),0.05 per call) FlexCAN_IRQHandlerRxMB/46 (1073741823 (estimated locally),1.00 per call) FlexCAN_AbortTxTransfer/50 (114863532 (estimated locally),1.00 per call) FlexCAN_StartSendData/44 (8335 (estimated locally),0.04 per call) FlexCAN_ProcessSpuriousInterruptMB/49 (52034066 (estimated locally),0.44 per call) 
  Calls: 
FlexCAN_SetListenOnlyMode/5 (FlexCAN_SetListenOnlyMode) @062add20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/102 (26575 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_SetFDEnabled/4 (FlexCAN_SetFDEnabled) @062ad9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/90 (6644 (estimated locally),0.03 per call) FlexCAN_InitController/41 (124903018 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_SetTDCOffset/2 (FlexCAN_SetTDCOffset) @062ad0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/92 (13288 (estimated locally),0.06 per call) 
  Calls: 
FlexCAN_StartRxMessageFifoData.part.0 (uint8 instance, struct Flexcan_Ip_MsgBuffType * data)
{
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  Flexcan_Ip_StatusType eResult;
  volatile boolean x;
  int _2;
  _Bool _5;
  <unnamed type> _6;
  <unnamed type> _7;
  _Bool _9;
  _Bool _10;
  _Bool _11;

  <bb 9> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) instance_1(D);
  base_3 = Flexcan_Ip_apxBase[_2];
  # DEBUG base => base_3
  # DEBUG BEGIN_STMT
  state_4 = Flexcan_Ip_apxState[_2];
  # DEBUG state => state_4
  # DEBUG BEGIN_STMT
  _5 = state_4->bIsLegacyFifoEn;
  if (_5 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 ={v} state_4->mbs[0].state;
  if (_6 != 0)
    goto <bb 8>; [35.00%]
  else
    goto <bb 4>; [65.00%]

  <bb 4> [local count: 348966093]:
  # DEBUG BEGIN_STMT
  state_4->mbs[0].state ={v} 1;
  # DEBUG BEGIN_STMT
  _7 = state_4->transferType;
  if (_7 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 118648472]:
  # DEBUG BEGIN_STMT
  state_4->mbs[0].isPolling = 1;

  <bb 6> [local count: 348966093]:
  # DEBUG BEGIN_STMT
  state_4->mbs[0].pMBmessage = data_8(D);
  # DEBUG BEGIN_STMT
  if (_7 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 115158811]:
  # DEBUG BEGIN_STMT
  state_4->mbs[0].isPolling = 0;
  # DEBUG BEGIN_STMT
  _9 = state_4->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_3, instance_1(D), 6, 1, _9);
  # DEBUG BEGIN_STMT
  _10 = state_4->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_3, instance_1(D), 7, 1, _10);
  # DEBUG BEGIN_STMT
  _11 = state_4->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_3, instance_1(D), 5, 1, _11);

  <bb 8> [local count: 1073741824]:
  # eResult_12 = PHI <1(2), 2(3), 0(6), 0(7)>
  # DEBUG eResult => eResult_12
  # DEBUG BEGIN_STMT
  return eResult_12;

}


FlexCAN_GetMsgBuffIntStatusFlag.part.0 (const struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint8 flag;
  uint32 mask;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;

  <bb 4> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  mask_2 ={v} base_1(D)->IMASK1;
  # DEBUG mask => mask_2
  # DEBUG BEGIN_STMT
  _3 ={v} base_1(D)->IFLAG1;
  _4 = mask_2 & _3;
  _6 = msgBuffIdx_5(D);
  _7 = _4 >> _6;
  _8 = (unsigned char) _7;
  flag_9 = _8 & 1;
  # DEBUG flag => flag_9

  <bb 3> [local count: 1073741824]:
  # flag_10 = PHI <flag_9(2)>
  # DEBUG flag => flag_10
  # DEBUG BEGIN_STMT
  return flag_10;

}


FlexCAN_SetExtendedTimeSegments.part.0 (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  volatile boolean x;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 3> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 ={v} base_1(D)->CBT;
  _3 = _2 & 2147483648;
  base_1(D)->CBT ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_1(D)->CBT;
  _6 = timeSeg_5(D)->propSeg;
  _7 = _6 << 10;
  _8 = _7 & 65535;
  _9 = timeSeg_5(D)->phaseSeg2;
  _10 = _9 & 31;
  _11 = _8 | _10;
  _12 = timeSeg_5(D)->phaseSeg1;
  _13 = _12 << 5;
  _14 = _13 & 992;
  _15 = _11 | _14;
  _16 = timeSeg_5(D)->preDivider;
  _17 = _16 << 21;
  _18 = _17 & 2145386496;
  _19 = _15 | _18;
  _20 = timeSeg_5(D)->rJumpwidth;
  _21 = _20 << 16;
  _22 = _21 & 2031616;
  _23 = _19 | _22;
  _24 = _4 | _23;
  base_1(D)->CBT ={v} _24;
  return;

}


FlexCAN_SetTimeSegments.part.0 (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  volatile boolean x;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;

  <bb 3> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 ={v} base_1(D)->CTRL1;
  _3 = _2 & 65528;
  base_1(D)->CTRL1 ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_1(D)->CTRL1;
  _6 = timeSeg_5(D)->propSeg;
  _7 = _6 & 7;
  _8 = timeSeg_5(D)->phaseSeg2;
  _9 = _8 << 16;
  _10 = _9 & 458752;
  _11 = _7 | _10;
  _12 = timeSeg_5(D)->phaseSeg1;
  _13 = _12 << 19;
  _14 = _13 & 3670016;
  _15 = _11 | _14;
  _16 = timeSeg_5(D)->preDivider;
  _17 = _16 << 24;
  _18 = _15 | _17;
  _19 = timeSeg_5(D)->rJumpwidth;
  _20 = _19 << 22;
  _21 = _20 & 12582912;
  _22 = _18 | _21;
  _23 = _4 | _22;
  base_1(D)->CTRL1 ={v} _23;
  return;

}


FlexCAN_SetFDTimeSegments.part.0 (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  volatile boolean x;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 3> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 ={v} base_1(D)->FDCBT;
  _3 = _2 & 3221783320;
  base_1(D)->FDCBT ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_1(D)->FDCBT;
  _6 = timeSeg_5(D)->propSeg;
  _7 = _6 << 10;
  _8 = _7 & 31744;
  _9 = timeSeg_5(D)->phaseSeg2;
  _10 = _9 & 7;
  _11 = _8 | _10;
  _12 = timeSeg_5(D)->phaseSeg1;
  _13 = _12 << 5;
  _14 = _13 & 255;
  _15 = _11 | _14;
  _16 = timeSeg_5(D)->preDivider;
  _17 = _16 << 20;
  _18 = _17 & 1072693248;
  _19 = _15 | _18;
  _20 = timeSeg_5(D)->rJumpwidth;
  _21 = _20 << 16;
  _22 = _21 & 458752;
  _23 = _19 | _22;
  _24 = _4 | _23;
  base_1(D)->FDCBT ={v} _24;
  return;

}


FlexCAN_Ip_ManualBusOffRecovery (uint8 Instance)
{
  volatile boolean x;
  Flexcan_Ip_StatusType RetVal;
  uint32 uS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  struct FLEXCAN_Type * Base;
  int _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _31;
  _Bool x.0_34;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_18(D);
  Base_20 = Flexcan_Ip_apxBase[_1];
  # DEBUG Base => Base_20
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  uS2Ticks_23 = OsIf_MicrosToTicks (10000, 0);
  # DEBUG uS2Ticks => uS2Ticks_23
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  _2 = Instance_18(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_34 ={v} x;
  if (x.0_34 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 ={v} Base_20->CTRL1;
  _4 = _3 & 64;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 5> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _5 ={v} Base_20->ESR1;
  _6 = _5 & 32;
  if (_6 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 6> [local count: 17717]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20 ();
  # DEBUG BEGIN_STMT
  _7 ={v} Base_20->CTRL1;
  _8 = _7 & 4294967231;
  Base_20->CTRL1 ={v} _8;
  # DEBUG BEGIN_STMT
  _9 ={v} Base_20->CTRL1;
  _10 = _9 | 64;
  Base_20->CTRL1 ={v} _10;
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20 ();
  # DEBUG BEGIN_STMT
  _11 = OsIf_GetCounter (0);
  timeStart = _11;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 156507]:
  # DEBUG BEGIN_STMT
  _31 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_32 = timeElapsed_14 + _31;
  # DEBUG timeElapsed => timeElapsed_32
  # DEBUG BEGIN_STMT
  if (uS2Ticks_23 <= timeElapsed_32)
    goto <bb 9>; [5.50%]
  else
    goto <bb 11>; [94.50%]

  <bb 11> [local count: 147899]:

  <bb 8> [local count: 165615]:
  # timeElapsed_14 = PHI <0(6), timeElapsed_32(11)>
  # DEBUG timeElapsed => timeElapsed_14
  # DEBUG BEGIN_STMT
  _12 ={v} Base_20->ESR1;
  _13 = _12 & 32;
  if (_13 != 0)
    goto <bb 7>; [94.50%]
  else
    goto <bb 9>; [5.50%]

  <bb 9> [local count: 107374]:
  # RetVal_15 = PHI <1(4), 0(5), 3(7), 0(8)>
  # DEBUG RetVal => RetVal_15
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return RetVal_15;

}


FlexCAN_Ip_GetListenOnlyMode (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  long unsigned int _5;
  long unsigned int _6;
  _Bool _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_2(D);
  base_4 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_4
  # DEBUG BEGIN_STMT
  # DEBUG base => base_4
  # DEBUG INLINE_ENTRY FlexCAN_IsListenOnlyModeEnabled
  # DEBUG BEGIN_STMT
  _5 ={v} base_4->CTRL1;
  _6 = _5 & 8;
  _7 = _6 != 0;
  # DEBUG base => NULL
  return _7;

}


FlexCAN_Ip_SetListenOnlyMode_Privileged (uint8 instance, const boolean enable)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _20;
  signed int _21;
  _Bool x.0_22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_22 ={v} x;
  if (x.0_22 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _20 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _21 = (signed int) _20;
  # DEBUG pBase => NULL
  # DEBUG disabled => _21 < 0
  # DEBUG BEGIN_STMT
  if (_21 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _24 = _23 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _24 != 0
  # DEBUG BEGIN_STMT
  if (_24 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 26575]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10 ();
  # DEBUG BEGIN_STMT
  FlexCAN_SetListenOnlyMode (pBase_11, enable_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10 ();

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_21 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_19 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_19
  # DEBUG BEGIN_STMT
  if (status_19 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_19

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_19(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_SetRxMb15Mask_Privileged (uint8 instance, uint32 mask)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _18;
  signed int _19;
  _Bool x.0_20;
  long unsigned int _21;
  long unsigned int _22;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_20 ={v} x;
  if (x.0_20 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _18 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _19 = (signed int) _18;
  # DEBUG pBase => NULL
  # DEBUG disabled => _19 < 0
  # DEBUG BEGIN_STMT
  if (_19 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _21 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _22 = _21 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _22 != 0
  # DEBUG BEGIN_STMT
  if (_22 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 40265]:
  # DEBUG BEGIN_STMT
  pBase_11->RX15MASK ={v} mask_14(D);

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_19 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_17 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_17
  # DEBUG BEGIN_STMT
  if (status_17 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_17

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_17(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_SetRxMb14Mask_Privileged (uint8 instance, uint32 mask)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _18;
  signed int _19;
  _Bool x.0_20;
  long unsigned int _21;
  long unsigned int _22;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_20 ={v} x;
  if (x.0_20 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _18 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _19 = (signed int) _18;
  # DEBUG pBase => NULL
  # DEBUG disabled => _19 < 0
  # DEBUG BEGIN_STMT
  if (_19 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _21 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _22 = _21 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _22 != 0
  # DEBUG BEGIN_STMT
  if (_22 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 40265]:
  # DEBUG BEGIN_STMT
  pBase_11->RX14MASK ={v} mask_14(D);

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_19 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_17 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_17
  # DEBUG BEGIN_STMT
  if (status_17 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_17

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_17(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_AbortTransfer (uint8 u8Instance, uint8 mb_idx)
{
  volatile boolean x;
  volatile boolean x;
  Flexcan_Ip_StatusType result;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  _Bool _3;
  int _4;
  int _5;
  <unnamed type> _6;
  long unsigned int _7;
  _Bool _8;
  <unnamed type> _9;
  <unnamed type> _10;
  _Bool x.0_24;
  _Bool x.0_25;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = u8Instance_15(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_25 ={v} x;
  if (x.0_25 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = mb_idx_17(D) + 224;
  _3 = _2 > 222;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_24 ={v} x;
  if (x.0_24 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 = (int) u8Instance_15(D);
  pBase_18 = Flexcan_Ip_apxBase[_4];
  # DEBUG pBase => pBase_18
  # DEBUG BEGIN_STMT
  state_19 = Flexcan_Ip_apxState[_4];
  # DEBUG state => state_19
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  if (mb_idx_17(D) <= 31)
    goto <bb 7>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 7> [local count: 26844]:
  # DEBUG BEGIN_STMT
  _5 = (int) mb_idx_17(D);
  _6 ={v} state_19->mbs[_5].state;
  if (_6 == 0)
    goto <bb 12>; [52.23%]
  else
    goto <bb 8>; [47.77%]

  <bb 8> [local count: 12823]:
  # DEBUG BEGIN_STMT
  _7 = (long unsigned int) mb_idx_17(D);
  _8 = state_19->isIntActive;
  FLEXCAN_ClearMsgBuffIntCmd (pBase_18, u8Instance_15(D), _7, _8);
  # DEBUG BEGIN_STMT
  _9 ={v} state_19->mbs[_5].state;
  if (_9 == 2)
    goto <bb 9>; [20.24%]
  else
    goto <bb 10>; [79.76%]

  <bb 9> [local count: 2595]:
  # DEBUG BEGIN_STMT
  result_22 = FlexCAN_AbortTxTransfer (u8Instance_15(D), mb_idx_17(D));
  # DEBUG result => result_22

  <bb 10> [local count: 12823]:
  # result_11 = PHI <0(8), result_22(9)>
  # DEBUG result => result_11
  # DEBUG BEGIN_STMT
  _10 ={v} state_19->mbs[_5].state;
  if (_10 == 1)
    goto <bb 11>; [20.24%]
  else
    goto <bb 12>; [79.76%]

  <bb 11> [local count: 2595]:
  # DEBUG BEGIN_STMT
  FlexCAN_AbortRxTransfer (u8Instance_15(D), mb_idx_17(D));

  <bb 12> [local count: 53687]:
  # result_12 = PHI <0(6), 5(7), result_11(10), result_11(11)>
  # DEBUG result => result_12
  # DEBUG BEGIN_STMT
  return result_12;

}


FlexCAN_Ip_SetErrorInt_Privileged (uint8 u8Instance, Flexcan_Ip_ErrorIntType type, boolean enable)
{
  volatile boolean x;
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _23;
  signed int _24;
  _Bool x.0_25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  _Bool x.0_30;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = u8Instance_7(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_25 ={v} x;
  if (x.0_25 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 21> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 23> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) u8Instance_7(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _24 = (signed int) _23;
  # DEBUG pBase => NULL
  # DEBUG disabled => _24 < 0
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13
  # DEBUG BEGIN_STMT
  if (result_13 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 6> [local count: 93684]:
  # result_9 = PHI <result_13(5), 0(4)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  switch (type_14(D)) <default: <L14> [16.67%], case 0: <L22> [16.67%], case 1: <L23> [16.67%], case 2: <L4> [16.67%], case 3: <L5> [16.67%], case 4: <L3> [16.67%]>

  <bb 7> [local count: 15617]:
<L3>:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_11, 32768, enable_15(D));
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 15617]:
<L4>:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_11, 16384, enable_15(D));
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 9> [local count: 15617]:
<L5>:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_11, 16385, enable_15(D));
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 10> [local count: 15617]:
<L22>:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _26 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _27 = _26 & 16777216;
  # DEBUG base => NULL
  if (_27 == 0)
    goto <bb 16>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 11> [local count: 5154]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_11, 1024, enable_15(D));
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 15617]:
<L23>:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _28 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _29 = _28 & 16777216;
  # DEBUG base => NULL
  if (_29 == 0)
    goto <bb 16>; [67.00%]
  else
    goto <bb 13>; [33.00%]

  <bb 13> [local count: 5154]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_11, 2048, enable_15(D));
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 15617]:
<L14>:
  # DEBUG BEGIN_STMT
  x ={v} 0;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_30 ={v} x;
  if (x.0_30 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [local count: 7809]:

  <bb 15> [local count: 78085593]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 22> [local count: 78085593]:
  goto <bb 15>; [100.00%]

  <bb 16> [local count: 99584]:
  # result_3 = PHI <result_13(5), result_9(7), result_9(8), result_9(9), result_9(11), result_9(13), result_9(14), 1(10), 1(12)>
  # DEBUG x => NULL
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 17>; [25.50%]
  else
    goto <bb 19>; [74.50%]

  <bb 17> [local count: 25394]:
  # DEBUG BEGIN_STMT
  status_22 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_22
  # DEBUG BEGIN_STMT
  if (status_22 != 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 12697]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_22

  <bb 19> [local count: 99584]:
  # result_4 = PHI <result_3(16), result_3(17), status_22(18)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_DisableInterrupts_Privileged (uint8 u8Instance)
{
  volatile boolean x;
  struct Flexcan_Ip_StateType * state;
  Flexcan_Ip_StatusType result;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  long unsigned int _11;
  signed int _12;
  _Bool x.0_13;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  state_8 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_8
  # DEBUG BEGIN_STMT
  _2 = u8Instance_5(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_13 ={v} x;
  if (x.0_13 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_7
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _11 ={v} MEM[(const struct FLEXCAN_Type *)pBase_7].MCR;
  _12 = (signed int) _11;
  # DEBUG pBase => NULL
  if (_12 >= 0)
    goto <bb 5>; [41.48%]
  else
    goto <bb 6>; [58.52%]

  <bb 5> [local count: 44539]:
  # DEBUG BEGIN_STMT
  FlexCAN_DisableInterrupts (pBase_7);
  # DEBUG BEGIN_STMT
  state_8->isIntActive = 0;
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 6> [local count: 107374]:
  # result_3 = PHI <1(4), 0(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  return result_3;

}


FlexCAN_Ip_EnableInterrupts_Privileged (uint8 u8Instance)
{
  volatile boolean x;
  struct Flexcan_Ip_StateType * state;
  Flexcan_Ip_StatusType result;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  long unsigned int _11;
  signed int _12;
  _Bool x.0_13;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  state_8 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_8
  # DEBUG BEGIN_STMT
  _2 = u8Instance_5(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_13 ={v} x;
  if (x.0_13 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_7
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _11 ={v} MEM[(const struct FLEXCAN_Type *)pBase_7].MCR;
  _12 = (signed int) _11;
  # DEBUG pBase => NULL
  if (_12 >= 0)
    goto <bb 5>; [41.48%]
  else
    goto <bb 6>; [58.52%]

  <bb 5> [local count: 44539]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnableInterrupts (pBase_7, u8Instance_5(D));
  # DEBUG BEGIN_STMT
  state_8->isIntActive = 1;
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 6> [local count: 107374]:
  # result_3 = PHI <1(4), 0(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  return result_3;

}


FlexCAN_Ip_ClearBuffStatusFlag (uint8 instance, uint8 msgBuffIdx)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  int _2;
  long unsigned int _3;
  _Bool x.0_9;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_4(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_9 ={v} x;
  if (x.0_9 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) instance_4(D);
  pBase_6 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_6
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) msgBuffIdx_7(D);
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_6, _3);
  return;

}


FlexCAN_Ip_GetBuffStatusFlag (uint8 instance, uint8 msgBuffIdx)
{
  volatile boolean x;
  const struct FLEXCAN_Type * pBase;
  boolean returnResult;
  _Bool _1;
  int _2;
  long unsigned int _3;
  unsigned char _4;
  _Bool x.0_11;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG returnResult => 1
  # DEBUG BEGIN_STMT
  _1 = instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_11 ={v} x;
  if (x.0_11 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) msgBuffIdx_8(D);
  _4 = FlexCAN_GetBuffStatusFlag (pBase_7, _3);
  returnResult_10 = _4 == 1;
  # DEBUG returnResult => returnResult_10
  # DEBUG BEGIN_STMT
  return returnResult_10;

}


FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged (uint8 instance, uint8 value)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _20;
  signed int _21;
  _Bool x.0_22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_22 ={v} x;
  if (x.0_22 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _20 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _21 = (signed int) _20;
  # DEBUG pBase => NULL
  # DEBUG disabled => _21 < 0
  # DEBUG BEGIN_STMT
  if (_21 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _24 = _23 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _24 != 0
  # DEBUG BEGIN_STMT
  if (_24 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 26575]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17 ();
  # DEBUG BEGIN_STMT
  FlexCAN_SetTxArbitrationStartDelay (pBase_11, value_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17 ();

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_21 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_19 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_19
  # DEBUG BEGIN_STMT
  if (status_19 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_19

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_19(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_SetTDCOffset_Privileged (uint8 instance, boolean enable, uint8 offset)
{
  volatile boolean x;
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  _Bool _3;
  long unsigned int _23;
  signed int _24;
  _Bool x.0_25;
  long unsigned int _26;
  long unsigned int _27;
  _Bool x.0_28;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_25 ={v} x;
  if (x.0_25 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 17> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 19> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_9(D);
  pBase_12 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_12
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_12].MCR;
  _24 = (signed int) _23;
  # DEBUG pBase => NULL
  # DEBUG disabled => _24 < 0
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_14 = FlexCAN_Enable (pBase_12);
  # DEBUG result => result_14

  <bb 6> [local count: 107374]:
  # result_4 = PHI <0(4), result_14(5)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  _3 = FlexCAN_IsFDAvailable (pBase_12);
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_28 ={v} x;
  if (x.0_28 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 53687]:

  <bb 7> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 18> [local count: 536870913]:
  goto <bb 7>; [100.00%]

  <bb 8> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _26 ={v} MEM[(const struct FLEXCAN_Type *)pBase_12].MCR;
  _27 = _26 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _27 != 0
  # DEBUG BEGIN_STMT
  if (_27 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 26844]:
  if (result_4 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 40265]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 11> [local count: 13288]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16 ();
  # DEBUG BEGIN_STMT
  FlexCAN_SetTDCOffset (pBase_12, enable_17(D), offset_18(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16 ();

  <bb 12> [local count: 53687]:
  # result_11 = PHI <result_4(10), 0(11), 1(9)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 13>; [25.50%]
  else
    goto <bb 15>; [74.50%]

  <bb 13> [local count: 13690]:
  # DEBUG BEGIN_STMT
  status_22 = FlexCAN_Disable (pBase_12);
  # DEBUG status => status_22
  # DEBUG BEGIN_STMT
  if (status_22 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 6845]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_22

  <bb 15> [local count: 53687]:
  # result_5 = PHI <result_11(12), result_11(13), status_22(14)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}


FlexCAN_Ip_GetBitrateFD (uint8 instance, struct Flexcan_Ip_TimeSegmentType * bitrate)
{
  volatile boolean x;
  volatile boolean x;
  const struct FLEXCAN_Type * pBase;
  _Bool _1;
  _Bool _2;
  int _3;
  _Bool x.0_9;
  _Bool x.0_10;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_4(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_10 ={v} x;
  if (x.0_10 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = bitrate_6(D) != 0B;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_9 ={v} x;
  if (x.0_9 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 9> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = (int) instance_4(D);
  pBase_7 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  # DEBUG enhCbt => 0
  # DEBUG BEGIN_STMT
  FlexCAN_GetFDTimeSegments (pBase_7, bitrate_6(D));
  # DEBUG BEGIN_STMT
  return 0;

}


FlexCAN_Ip_SetBitrateCbt_Privileged (uint8 instance, const struct Flexcan_Ip_TimeSegmentType * bitrate, boolean bitRateSwitch)
{
  volatile boolean x;
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  _Bool _2;
  int _3;
  long unsigned int _23;
  long unsigned int _24;
  _Bool _25;
  long unsigned int _26;
  signed int _27;
  _Bool x.0_28;
  _Bool x.0_29;
  long unsigned int _30;
  long unsigned int _31;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_10(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_29 ={v} x;
  if (x.0_29 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 20> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = bitrate_12(D) != 0B;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_28 ={v} x;
  if (x.0_28 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 17> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 19> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_10(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _26 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _27 = (signed int) _26;
  # DEBUG pBase => NULL
  # DEBUG disabled => _27 < 0
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsFDEnabled
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _24 = _23 & 2048;
  _25 = _24 != 0;
  # DEBUG base => NULL
  # DEBUG fd_enable => _25
  # DEBUG BEGIN_STMT
  if (_27 < 0)
    goto <bb 7>; [25.50%]
  else
    goto <bb 8>; [74.50%]

  <bb 7> [local count: 13690]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 8> [local count: 53687]:
  # result_5 = PHI <0(6), result_15(7)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _30 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _31 = _30 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _31 != 0
  # DEBUG BEGIN_STMT
  if (_24 == 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 26844]:
  if (_31 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 13422]:
  if (result_5 == 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 20133]:
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  if (result_5 == 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 12> [local count: 6644]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15 ();
  # DEBUG BEGIN_STMT
  FlexCAN_SetFDEnabled (pBase_13, _25, bitRateSwitch_17(D));
  # DEBUG BEGIN_STMT
  FlexCAN_SetFDTimeSegments (pBase_13, bitrate_12(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15 ();

  <bb 13> [local count: 53687]:
  # result_4 = PHI <result_5(11), 0(12), 1(8), 1(10)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_27 < 0)
    goto <bb 14>; [25.50%]
  else
    goto <bb 16>; [74.50%]

  <bb 14> [local count: 13690]:
  # DEBUG BEGIN_STMT
  status_22 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_22
  # DEBUG BEGIN_STMT
  if (status_22 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [local count: 6845]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_22

  <bb 16> [local count: 53687]:
  # result_6 = PHI <result_4(13), result_4(14), status_22(15)>
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  return result_6;

}


FlexCAN_Ip_GetTDCValue (uint8 u8Instance)
{
  volatile boolean x;
  const struct FLEXCAN_Type * pBase;
  uint8 value;
  _Bool _1;
  int _2;
  long unsigned int _3;
  unsigned char _4;
  _Bool x.0_9;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = u8Instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_9 ={v} x;
  if (x.0_9 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) u8Instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  _3 ={v} pBase_7->FDCTRL;
  _4 = (unsigned char) _3;
  value_8 = _4 & 63;
  # DEBUG value => value_8
  # DEBUG BEGIN_STMT
  return value_8;

}


FlexCAN_Ip_GetTDCFail (uint8 u8Instance)
{
  volatile boolean x;
  const struct FLEXCAN_Type * pBase;
  boolean value;
  _Bool _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  _Bool x.0_9;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = u8Instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_9 ={v} x;
  if (x.0_9 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) u8Instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  _3 ={v} pBase_7->FDCTRL;
  _4 = _3 & 16384;
  value_8 = _4 != 0;
  # DEBUG value => value_8
  # DEBUG BEGIN_STMT
  return value_8;

}


FlexCAN_Ip_ClearTDCFail (uint8 u8Instance)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  _Bool x.0_11;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = u8Instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_11 ={v} x;
  if (x.0_11 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) u8Instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09 ();
  # DEBUG BEGIN_STMT
  _3 ={v} pBase_7->FDCTRL;
  _4 = _3 | 16384;
  pBase_7->FDCTRL ={v} _4;
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09 ();
  return;

}


FlexCAN_Ip_GetBitrate (uint8 instance, struct Flexcan_Ip_TimeSegmentType * bitrate)
{
  volatile boolean x;
  volatile boolean x;
  const struct FLEXCAN_Type * pBase;
  _Bool _1;
  _Bool _2;
  int _3;
  long unsigned int _11;
  signed int _12;
  _Bool x.0_13;
  _Bool x.0_14;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_14 ={v} x;
  if (x.0_14 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = bitrate_7(D) != 0B;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_13 ={v} x;
  if (x.0_13 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = (int) instance_5(D);
  pBase_8 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_8
  # DEBUG BEGIN_STMT
  # DEBUG enhCbt => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_8
  # DEBUG INLINE_ENTRY FlexCAN_IsExCbtEnabled
  # DEBUG BEGIN_STMT
  _11 ={v} pBase_8->CBT;
  _12 = (signed int) _11;
  # DEBUG pBase => NULL
  if (_12 < 0)
    goto <bb 7>; [41.00%]
  else
    goto <bb 8>; [59.00%]

  <bb 7> [local count: 22012]:
  # DEBUG BEGIN_STMT
  FlexCAN_GetExtendedTimeSegments (pBase_8, bitrate_7(D));
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 31675]:
  # DEBUG BEGIN_STMT
  FlexCAN_GetTimeSegments (pBase_8, bitrate_7(D));

  <bb 9> [local count: 53687]:
  # DEBUG BEGIN_STMT
  return 0;

}


FlexCAN_Ip_SetBitrate_Privileged (uint8 instance, const struct Flexcan_Ip_TimeSegmentType * bitrate, boolean enhExt)
{
  volatile boolean x;
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  _Bool _2;
  int _3;
  long unsigned int _23;
  signed int _24;
  _Bool x.0_25;
  _Bool x.0_26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  signed int _30;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_11(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_26 ={v} x;
  if (x.0_26 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 22> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = bitrate_13(D) != 0B;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_25 ={v} x;
  if (x.0_25 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_11(D);
  pBase_14 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_14
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_14
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_14].MCR;
  _24 = (signed int) _23;
  # DEBUG pBase => NULL
  # DEBUG disabled => _24 < 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 7>; [25.50%]
  else
    goto <bb 8>; [74.50%]

  <bb 7> [local count: 13690]:
  # DEBUG BEGIN_STMT
  result_16 = FlexCAN_Enable (pBase_14);
  # DEBUG result => result_16

  <bb 8> [local count: 53687]:
  # result_5 = PHI <0(6), result_16(7)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_14
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _27 ={v} MEM[(const struct FLEXCAN_Type *)pBase_14].MCR;
  _28 = _27 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _28 != 0
  # DEBUG BEGIN_STMT
  if (_28 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 26844]:
  if (result_5 == 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 40265]:
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  if (result_5 == 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 11> [local count: 13288]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14 ();
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_14
  # DEBUG INLINE_ENTRY FlexCAN_IsExCbtEnabled
  # DEBUG BEGIN_STMT
  _29 ={v} MEM[(const struct FLEXCAN_Type *)pBase_14].CBT;
  _30 = (signed int) _29;
  # DEBUG pBase => NULL
  if (_30 < 0)
    goto <bb 12>; [41.00%]
  else
    goto <bb 13>; [59.00%]

  <bb 12> [local count: 5448]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetExtendedTimeSegments (pBase_14, bitrate_13(D));
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 7840]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetTimeSegments (pBase_14, bitrate_13(D));

  <bb 14> [local count: 13288]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14 ();

  <bb 15> [local count: 53687]:
  # result_4 = PHI <result_5(10), 0(14), 1(9)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 16>; [25.50%]
  else
    goto <bb 18>; [74.50%]

  <bb 16> [local count: 13690]:
  # DEBUG BEGIN_STMT
  status_22 = FlexCAN_Disable (pBase_14);
  # DEBUG status => status_22
  # DEBUG BEGIN_STMT
  if (status_22 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 6845]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_22

  <bb 18> [local count: 53687]:
  # result_6 = PHI <result_4(15), result_4(16), status_22(17)>
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  return result_6;

}


FlexCAN_Ip_SetRxMaskType_Privileged (uint8 instance, Flexcan_Ip_RxMaskType type)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _20;
  signed int _21;
  _Bool x.0_22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_22 ={v} x;
  if (x.0_22 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _20 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _21 = (signed int) _20;
  # DEBUG pBase => NULL
  # DEBUG disabled => _21 < 0
  # DEBUG BEGIN_STMT
  if (_21 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _24 = _23 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _24 != 0
  # DEBUG BEGIN_STMT
  if (_24 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 26575]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08 ();
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMaskType (pBase_11, type_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08 ();

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_21 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_19 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_19
  # DEBUG BEGIN_STMT
  if (status_19 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_19

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_19(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_SetStopMode_Privileged (uint8 instance)
{
  volatile boolean x;
  Flexcan_Ip_StatusType status;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  int _2;
  _Bool x.0_12;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_12 ={v} x;
  if (x.0_12 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  status_9 = FlexCAN_EnterFreezeMode (pBase_7);
  # DEBUG status => status_9
  # DEBUG BEGIN_STMT
  if (status_9 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 35433]:
  # DEBUG BEGIN_STMT
  status_11 = FlexCAN_Disable (pBase_7);
  # DEBUG status => status_11

  <bb 6> [local count: 107374]:
  # status_3 = PHI <status_9(4), status_11(5)>
  # DEBUG status => status_3
  # DEBUG BEGIN_STMT
  return status_3;

}


FlexCAN_Ip_SetStartMode_Privileged (uint8 instance)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  Flexcan_Ip_StatusType _12;
  _Bool x.0_13;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_5(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_13 ={v} x;
  if (x.0_13 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _2 = (int) instance_5(D);
  pBase_7 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_7
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07 ();
  # DEBUG BEGIN_STMT
  _3 ={v} pBase_7->MCR;
  _4 = _3 & 2147483647;
  pBase_7->MCR ={v} _4;
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07 ();
  # DEBUG BEGIN_STMT
  _12 = FlexCAN_ExitFreezeMode (pBase_7);
  return _12;

}


FlexCAN_Ip_GetStartMode_Privileged (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  base_6 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_6
  # DEBUG BEGIN_STMT
  _2 ={v} base_6->MCR;
  _3 = _2 & 17825792;
  _7 = _3 == 0;
  return _7;

}


FlexCAN_Ip_GetStopMode_Privileged (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  base_6 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_6
  # DEBUG BEGIN_STMT
  _2 ={v} base_6->MCR;
  _3 = _2 & 1048576;
  _7 = _3 != 0;
  return _7;

}


FlexCAN_Ip_MainFunctionWrite (uint8 instance, uint8 mb_idx)
{
  volatile boolean x;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  long unsigned int _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  _Bool x.0_18;
  long unsigned int vol.6_19;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_8(D);
  base_10 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_10
  # DEBUG BEGIN_STMT
  state_11 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_11
  # DEBUG BEGIN_STMT
  _2 = instance_8(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_18 ={v} x;
  if (x.0_18 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) mb_idx_12(D);
  _4 = FlexCAN_GetBuffStatusFlag (base_10, _3);
  if (_4 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 35433]:
  # DEBUG BEGIN_STMT
  _5 = (int) mb_idx_12(D);
  _6 = FlexCAN_GetMsgBuffTimestamp (base_10, _3);
  state_11->mbs[_5].time_stamp = _6;
  # DEBUG BEGIN_STMT
  # DEBUG base => base_10
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_19 ={v} MEM[(const struct FLEXCAN_Type *)base_10].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_10, _3);
  # DEBUG BEGIN_STMT
  state_11->mbs[_5].state ={v} 0;

  <bb 6> [local count: 107374]:
  return;

}


FlexCAN_Ip_MainFunctionBusOff_Privileged (uint8 instance)
{
  volatile boolean x;
  uint32 u32ErrStatus;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType eRetVal;
  int _1;
  _Bool _2;
  long unsigned int _3;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _4;
  _Bool x.0_15;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG eRetVal => 1
  # DEBUG BEGIN_STMT
  _1 = (int) instance_8(D);
  base_10 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_10
  # DEBUG BEGIN_STMT
  state_11 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_11
  # DEBUG BEGIN_STMT
  # DEBUG u32ErrStatus => 0
  # DEBUG BEGIN_STMT
  _2 = instance_8(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_15 ={v} x;
  if (x.0_15 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  u32ErrStatus_12 ={v} base_10->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_12
  # DEBUG BEGIN_STMT
  _3 = u32ErrStatus_12 & 4;
  if (_3 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 53687]:
  # DEBUG BEGIN_STMT
  _4 = state_11->error_callback;
  if (_4 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [local count: 37581]:
  # DEBUG BEGIN_STMT
  _4 (instance_8(D), 7, u32ErrStatus_12, state_11);

  <bb 7> [local count: 53687]:
  # DEBUG BEGIN_STMT
  base_10->ESR1 ={v} 4;
  # DEBUG BEGIN_STMT
  # DEBUG eRetVal => 0

  <bb 8> [local count: 107374]:
  # eRetVal_5 = PHI <1(4), 0(7)>
  # DEBUG eRetVal => eRetVal_5
  # DEBUG BEGIN_STMT
  return eRetVal_5;

}


FlexCAN_Ip_MainFunctionRead (uint8 instance, uint8 mb_idx)
{
  uint32 flag;
  volatile boolean x;
  volatile boolean x;
  const struct Flexcan_Ip_StateType * state;
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  unsigned char _6;
  int _7;
  <unnamed type> _8;
  _Bool x.0_18;
  _Bool x.0_19;
  long unsigned int _20;
  long unsigned int _22;
  unsigned char _23;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_10(D);
  base_12 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_12
  # DEBUG BEGIN_STMT
  state_13 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_13
  # DEBUG BEGIN_STMT
  _2 = instance_10(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_19 ={v} x;
  if (x.0_19 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 18> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = mb_idx_14(D) <= 31;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_18 ={v} x;
  if (x.0_18 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 17> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 = state_13->bIsLegacyFifoEn;
  if (_4 != 0)
    goto <bb 7>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 7> [local count: 35970]:
  if (mb_idx_14(D) <= 7)
    goto <bb 8>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 8> [local count: 17985]:
  # DEBUG BEGIN_STMT
  if (mb_idx_14(D) == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 9> [local count: 8993]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_12
  # DEBUG msgBuffIdx => 5
  # DEBUG INLINE_ENTRY FlexCAN_GetBuffStatusFlag
  # DEBUG BEGIN_STMT
  # DEBUG flag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 ={v} base_12->IFLAG1;
  _22 = _20 >> 5;
  flag_21 = _22 & 1;
  # DEBUG flag => flag_21
  # DEBUG BEGIN_STMT
  _23 = (unsigned char) flag_21;
  # DEBUG base => NULL
  # DEBUG msgBuffIdx => NULL
  # DEBUG flag => NULL
  if (_23 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 10> [local count: 2968]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxFIFO (instance_10(D), 5);
  goto <bb 14>; [100.00%]

  <bb 11> [local count: 35702]:
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) mb_idx_14(D);
  _6 = FlexCAN_GetBuffStatusFlag (base_12, _5);
  if (_6 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 12> [local count: 17851]:
  # DEBUG BEGIN_STMT
  _7 = (int) mb_idx_14(D);
  _8 ={v} state_13->mbs[_7].state;
  if (_8 == 1)
    goto <bb 13>; [20.24%]
  else
    goto <bb 14>; [79.76%]

  <bb 13> [local count: 3613]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxMB (instance_10(D), _5);

  <bb 14> [local count: 53687]:
  return;

}


FlexCAN_Ip_Deinit_Privileged (uint8 instance)
{
  volatile boolean x;
  Flexcan_Ip_StatusType result;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  _Bool x.0_12;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  base_6 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_6
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  _2 = instance_4(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_12 ={v} x;
  if (x.0_12 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  result_8 = FlexCAN_EnterFreezeMode (base_6);
  # DEBUG result => result_8
  # DEBUG BEGIN_STMT
  if (result_8 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 35433]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetRegDefaultVal (base_6);
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (base_6);
  # DEBUG BEGIN_STMT
  Flexcan_Ip_apxState[_1] = 0B;

  <bb 6> [local count: 107374]:
  # DEBUG BEGIN_STMT
  return result_8;

}


FlexCAN_Ip_SetRxFifoGlobalMask_Privileged (uint8 instance, uint32 mask)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _17;
  signed int _18;
  _Bool x.0_19;
  long unsigned int _20;
  long unsigned int _21;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_19 ={v} x;
  if (x.0_19 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _18 = (signed int) _17;
  # DEBUG pBase => NULL
  # DEBUG disabled => _18 < 0
  # DEBUG BEGIN_STMT
  if (_18 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _20 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _21 = _20 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _21 != 0
  # DEBUG BEGIN_STMT
  if (_21 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 40265]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG Mask => mask_14(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxFifoGlobalMask
  # DEBUG BEGIN_STMT
  pBase_11->RXFGMASK ={v} mask_14(D);

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG base => NULL
  # DEBUG Mask => NULL
  # DEBUG BEGIN_STMT
  if (_18 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_16 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_16
  # DEBUG BEGIN_STMT
  if (status_16 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_16

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_16(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_SetRxIndividualMask_Privileged (uint8 instance, uint8 mb_idx, uint32 mask)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  _Bool x.0_21;
  long unsigned int _22;
  signed int _23;
  long unsigned int _24;
  long unsigned int _25;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_12(D);
  pBase_14 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_14
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  _2 = instance_12(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_21 ={v} x;
  if (x.0_21 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 17> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) mb_idx_15(D);
  _4 ={v} pBase_14->MCR;
  _5 = _4 & 127;
  if (_3 > _5)
    goto <bb 15>; [35.00%]
  else
    goto <bb 5>; [65.00%]

  <bb 5> [local count: 69793]:
  if (mb_idx_15(D) > 31)
    goto <bb 15>; [35.00%]
  else
    goto <bb 6>; [65.00%]

  <bb 6> [local count: 45366]:
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_14
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _22 ={v} MEM[(const struct FLEXCAN_Type *)pBase_14].MCR;
  _23 = (signed int) _22;
  # DEBUG pBase => NULL
  # DEBUG disabled => _23 < 0
  # DEBUG BEGIN_STMT
  if (_23 < 0)
    goto <bb 7>; [25.50%]
  else
    goto <bb 8>; [74.50%]

  <bb 7> [local count: 11568]:
  # DEBUG BEGIN_STMT
  result_17 = FlexCAN_Enable (pBase_14);
  # DEBUG result => result_17

  <bb 8> [local count: 45366]:
  # result_6 = PHI <0(6), result_17(7)>
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_14
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _24 ={v} MEM[(const struct FLEXCAN_Type *)pBase_14].MCR;
  _25 = _24 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _25 != 0
  # DEBUG BEGIN_STMT
  if (_25 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 22683]:
  if (result_6 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 34024]:
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  if (result_6 == 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 17012]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_14
  # DEBUG msgBuffIdx => _3
  # DEBUG mask => mask_18(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxIndividualMask
  # DEBUG BEGIN_STMT
  pBase_14->RXIMR[_3] ={v} mask_18(D);

  <bb 12> [local count: 45366]:
  # result_11 = PHI <result_6(10), 0(11), 1(9)>
  # DEBUG result => NULL
  # DEBUG base => NULL
  # DEBUG msgBuffIdx => NULL
  # DEBUG mask => NULL
  # DEBUG BEGIN_STMT
  if (_23 < 0)
    goto <bb 13>; [25.50%]
  else
    goto <bb 15>; [74.50%]

  <bb 13> [local count: 11568]:
  # DEBUG BEGIN_STMT
  status_20 = FlexCAN_Disable (pBase_14);
  # DEBUG status => status_20
  # DEBUG BEGIN_STMT
  if (status_20 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 5784]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_20

  <bb 15> [local count: 107374]:
  # result_7 = PHI <4(5), result_11(12), result_11(13), status_20(14), 4(4)>
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  return result_7;

}


FlexCAN_Ip_ExitFreezeMode_Privileged (uint8 instance)
{
  struct FLEXCAN_Type * base;
  int _1;
  Flexcan_Ip_StatusType _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_2(D);
  base_4 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_4
  # DEBUG BEGIN_STMT
  _6 = FlexCAN_ExitFreezeMode (base_4);
  return _6;

}


FlexCAN_Ip_EnterFreezeMode_Privileged (uint8 instance)
{
  struct FLEXCAN_Type * base;
  int _1;
  Flexcan_Ip_StatusType _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_2(D);
  base_4 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_4
  # DEBUG BEGIN_STMT
  _6 = FlexCAN_EnterFreezeMode (base_4);
  return _6;

}


FlexCAN_Ip_SetRxMbGlobalMask_Privileged (uint8 instance, uint32 mask)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  long unsigned int _17;
  signed int _18;
  _Bool x.0_19;
  long unsigned int _20;
  long unsigned int _21;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_9(D);
  pBase_11 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  _2 = instance_9(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_19 ={v} x;
  if (x.0_19 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _18 = (signed int) _17;
  # DEBUG pBase => NULL
  # DEBUG disabled => _18 < 0
  # DEBUG BEGIN_STMT
  if (_18 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _20 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _21 = _20 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _21 != 0
  # DEBUG BEGIN_STMT
  if (_21 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 40265]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG Mask => mask_14(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxMsgBuffGlobalMask
  # DEBUG BEGIN_STMT
  pBase_11->RXMGMASK ={v} mask_14(D);

  <bb 10> [local count: 107374]:
  # result_8 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG base => NULL
  # DEBUG Mask => NULL
  # DEBUG BEGIN_STMT
  if (_18 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_16 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_16
  # DEBUG BEGIN_STMT
  if (status_16 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_16

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_8(10), result_8(11), status_16(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_SendBlocking (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data, uint32 timeout_ms)
{
  volatile boolean x;
  volatile boolean x;
  volatile uint32 * flexcan_mb;
  uint32 flexcan_mb_config;
  uint32 uS2Ticks;
  uint32 mS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  _Bool _4;
  _Bool _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  int _9;
  <unnamed type> _10;
  long unsigned int _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  int _15;
  long unsigned int _46;
  long unsigned int _61;
  _Bool x.0_67;
  _Bool x.0_68;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_28(D);
  base_30 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_30
  # DEBUG BEGIN_STMT
  state_31 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_31
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _3 = timeout_ms_33(D) * 1000;
  mS2Ticks_35 = OsIf_MicrosToTicks (_3, 0);
  # DEBUG mS2Ticks => mS2Ticks_35
  # DEBUG BEGIN_STMT
  # DEBUG uS2Ticks => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb => 0B
  # DEBUG BEGIN_STMT
  _4 = instance_28(D) <= 2;
  x ={v} _4;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_68 ={v} x;
  if (x.0_68 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 26> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _5 = tx_info_36(D) != 0B;
  x ={v} _5;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_67 ={v} x;
  if (x.0_67 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 21> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 25> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  result_41 = FlexCAN_StartSendData (instance_28(D), mb_idx_37(D), tx_info_36(D), msg_id_38(D), mb_data_39(D));
  # DEBUG result => result_41
  # DEBUG BEGIN_STMT
  if (result_41 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 20>; [67.00%]

  <bb 7> [local count: 17717]:
  # DEBUG BEGIN_STMT
  _6 = OsIf_GetCounter (0);
  timeStart = _6;
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 156507]:
  # DEBUG BEGIN_STMT
  _46 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_47 = timeElapsed_20 + _46;
  # DEBUG timeElapsed => timeElapsed_47
  # DEBUG BEGIN_STMT
  if (mS2Ticks_35 <= timeElapsed_47)
    goto <bb 10>; [5.50%]
  else
    goto <bb 24>; [94.50%]

  <bb 24> [local count: 147899]:

  <bb 9> [local count: 165615]:
  # timeElapsed_20 = PHI <0(7), timeElapsed_47(24)>
  # DEBUG timeElapsed => timeElapsed_20
  # DEBUG BEGIN_STMT
  _7 = (long unsigned int) mb_idx_37(D);
  _8 = FlexCAN_GetBuffStatusFlag (base_30, _7);
  if (_8 != 1)
    goto <bb 8>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 10> [local count: 17717]:
  # result_16 = PHI <3(8), 0(9)>
  # _2 = PHI <_7(8), _7(9)>
  # DEBUG result => result_16
  # DEBUG BEGIN_STMT
  if (result_16 == 3)
    goto <bb 11>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 11> [local count: 6024]:
  _9 = (int) mb_idx_37(D);
  _10 ={v} state_31->mbs[_9].state;
  if (_10 != 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 19>; [67.00%]

  <bb 12> [local count: 1988]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_30, _2);
  # DEBUG BEGIN_STMT
  flexcan_mb_50 = FlexCAN_GetMsgBuffRegion (base_30, _2);
  # DEBUG flexcan_mb => flexcan_mb_50
  # DEBUG BEGIN_STMT
  flexcan_mb_config_51 ={v} *flexcan_mb_50;
  # DEBUG flexcan_mb_config => flexcan_mb_config_51
  # DEBUG BEGIN_STMT
  flexcan_mb_config_52 = flexcan_mb_config_51 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_52
  # DEBUG BEGIN_STMT
  flexcan_mb_config_53 = flexcan_mb_config_52 | 150994944;
  # DEBUG flexcan_mb_config => flexcan_mb_config_53
  # DEBUG BEGIN_STMT
  *flexcan_mb_50 ={v} flexcan_mb_config_53;
  # DEBUG BEGIN_STMT
  uS2Ticks_56 = OsIf_MicrosToTicks (10000, 0);
  # DEBUG uS2Ticks => uS2Ticks_56
  # DEBUG BEGIN_STMT
  _11 = OsIf_GetCounter (0);
  timeStart = _11;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 17560]:
  # DEBUG BEGIN_STMT
  _61 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_62 = timeElapsed_21 + _61;
  # DEBUG timeElapsed => timeElapsed_62
  # DEBUG BEGIN_STMT
  if (uS2Ticks_56 <= timeElapsed_62)
    goto <bb 15>; [5.50%]
  else
    goto <bb 23>; [94.50%]

  <bb 23> [local count: 16594]:

  <bb 14> [local count: 18582]:
  # timeElapsed_21 = PHI <0(12), timeElapsed_62(23)>
  # DEBUG timeElapsed => timeElapsed_21
  # DEBUG BEGIN_STMT
  _12 = FlexCAN_GetBuffStatusFlag (base_30, _2);
  if (_12 == 0)
    goto <bb 13>; [94.50%]
  else
    goto <bb 15>; [5.50%]

  <bb 15> [local count: 1988]:
  # DEBUG result => 3
  # DEBUG BEGIN_STMT
  flexcan_mb_config_63 ={v} *flexcan_mb_50;
  # DEBUG flexcan_mb_config => flexcan_mb_config_63
  # DEBUG BEGIN_STMT
  _13 = flexcan_mb_config_63 >> 24;
  _14 = _13 & 15;
  if (_14 == 8)
    goto <bb 16>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 16> [local count: 676]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 17> [local count: 1988]:
  # result_17 = PHI <3(15), 0(16)>
  # DEBUG result => result_17
  # DEBUG BEGIN_STMT
  if (_14 == 9)
    goto <bb 18>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 18> [local count: 676]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 3

  <bb 19> [local count: 17717]:
  # result_18 = PHI <result_16(10), 3(11), result_17(17), 3(18)>
  # DEBUG result => result_18
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_30, _2);
  # DEBUG BEGIN_STMT
  _15 = (int) mb_idx_37(D);
  state_31->mbs[_15].state ={v} 0;

  <bb 20> [local count: 53687]:
  # result_19 = PHI <result_41(6), result_18(19)>
  # DEBUG result => result_19
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return result_19;

}


FlexCAN_BusOff_IRQHandler (uint8 instance)
{
  volatile boolean x;
  boolean isSpuriousInt;
  uint32 u32ErrStatus;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _14;
  _Bool x.0_37;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_22(D);
  base_24 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_24
  # DEBUG BEGIN_STMT
  state_25 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_25
  # DEBUG BEGIN_STMT
  # DEBUG u32ErrStatus => 0
  # DEBUG BEGIN_STMT
  # DEBUG isSpuriousInt => 1
  # DEBUG BEGIN_STMT
  _2 = instance_22(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_37 ={v} x;
  if (x.0_37 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  if (state_25 != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 18>; [30.00%]

  <bb 5> [local count: 75162]:
  # DEBUG BEGIN_STMT
  u32ErrStatus_26 ={v} base_24->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_26
  # DEBUG BEGIN_STMT
  _3 = u32ErrStatus_26 & 131072;
  if (_3 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 37581]:
  _4 ={v} base_24->CTRL1;
  _5 = _4 & 2048;
  if (_5 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 18790]:
  # DEBUG BEGIN_STMT
  base_24->ESR1 ={v} 131072;
  # DEBUG BEGIN_STMT
  _6 = state_25->error_callback;
  if (_6 != 0B)
    goto <bb 8>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 8> [local count: 13153]:
  # DEBUG BEGIN_STMT
  _6 (instance_22(D), 9, u32ErrStatus_26, state_25);
  # DEBUG BEGIN_STMT
  u32ErrStatus_29 ={v} base_24->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_29

  <bb 9> [local count: 75162]:
  # u32ErrStatus_15 = PHI <u32ErrStatus_26(5), u32ErrStatus_26(6), u32ErrStatus_29(8), u32ErrStatus_26(7)>
  # isSpuriousInt_17 = PHI <1(5), 1(6), 0(8), 0(7)>
  # DEBUG isSpuriousInt => isSpuriousInt_17
  # DEBUG u32ErrStatus => u32ErrStatus_15
  # DEBUG BEGIN_STMT
  _7 = u32ErrStatus_15 & 65536;
  if (_7 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 10> [local count: 37581]:
  _8 ={v} base_24->CTRL1;
  _9 = _8 & 1024;
  if (_9 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 11> [local count: 18790]:
  # DEBUG BEGIN_STMT
  base_24->ESR1 ={v} 65536;
  # DEBUG BEGIN_STMT
  _10 = state_25->error_callback;
  if (_10 != 0B)
    goto <bb 12>; [70.00%]
  else
    goto <bb 13>; [30.00%]

  <bb 12> [local count: 13153]:
  # DEBUG BEGIN_STMT
  _10 (instance_22(D), 8, u32ErrStatus_15, state_25);
  # DEBUG BEGIN_STMT
  u32ErrStatus_32 ={v} base_24->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_32

  <bb 13> [local count: 75162]:
  # u32ErrStatus_16 = PHI <u32ErrStatus_15(9), u32ErrStatus_15(10), u32ErrStatus_32(12), u32ErrStatus_15(11)>
  # isSpuriousInt_18 = PHI <isSpuriousInt_17(9), isSpuriousInt_17(10), 0(12), 0(11)>
  # DEBUG isSpuriousInt => isSpuriousInt_18
  # DEBUG u32ErrStatus => u32ErrStatus_16
  # DEBUG BEGIN_STMT
  _11 = u32ErrStatus_16 & 4;
  if (_11 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 14> [local count: 37581]:
  _12 ={v} base_24->CTRL1;
  _13 = _12 & 32768;
  if (_13 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 15> [local count: 18790]:
  # DEBUG BEGIN_STMT
  base_24->ESR1 ={v} 4;
  # DEBUG BEGIN_STMT
  _14 = state_25->error_callback;
  if (_14 != 0B)
    goto <bb 16>; [70.00%]
  else
    goto <bb 19>; [30.00%]

  <bb 16> [local count: 13153]:
  # DEBUG BEGIN_STMT
  _14 (instance_22(D), 7, u32ErrStatus_16, state_25);
  goto <bb 19>; [100.00%]

  <bb 17> [local count: 56371]:
  # DEBUG isSpuriousInt => isSpuriousInt_18
  # DEBUG BEGIN_STMT
  if (isSpuriousInt_18 != 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 60398]:
  # DEBUG isSpuriousInt => NULL
  # DEBUG BEGIN_STMT
  base_24->ESR1 ={v} 720900;

  <bb 19> [local count: 107374]:
  # DEBUG isSpuriousInt => NULL
  return;

}


FlexCAN_Error_IRQHandler (uint8 instance)
{
  volatile boolean x;
  boolean isSpuriousInt;
  uint32 u32ErrStatus;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _6;
  long unsigned int _7;
  long unsigned int _8;
  signed int _9;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _10;
  _Bool x.0_27;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_15(D);
  pBase_17 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_17
  # DEBUG BEGIN_STMT
  state_18 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_18
  # DEBUG BEGIN_STMT
  # DEBUG u32ErrStatus => 0
  # DEBUG BEGIN_STMT
  # DEBUG isSpuriousInt => 1
  # DEBUG BEGIN_STMT
  _2 = instance_15(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_27 ={v} x;
  if (x.0_27 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 17> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  if (state_18 != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 5> [local count: 75162]:
  # DEBUG BEGIN_STMT
  u32ErrStatus_20 ={v} pBase_17->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_20
  # DEBUG BEGIN_STMT
  _3 = u32ErrStatus_20 & 2;
  if (_3 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 37581]:
  _4 ={v} pBase_17->CTRL1;
  _5 = _4 & 16384;
  if (_5 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 18790]:
  # DEBUG BEGIN_STMT
  pBase_17->ESR1 ={v} 2;
  # DEBUG BEGIN_STMT
  _6 = state_18->error_callback;
  if (_6 != 0B)
    goto <bb 8>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 8> [local count: 13153]:
  # DEBUG BEGIN_STMT
  _6 (instance_15(D), 5, u32ErrStatus_20, state_18);
  # DEBUG BEGIN_STMT
  u32ErrStatus_23 ={v} pBase_17->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_23

  <bb 9> [local count: 75162]:
  # u32ErrStatus_11 = PHI <u32ErrStatus_20(5), u32ErrStatus_20(6), u32ErrStatus_23(8), u32ErrStatus_20(7)>
  # isSpuriousInt_12 = PHI <1(5), 1(6), 0(8), 0(7)>
  # DEBUG isSpuriousInt => isSpuriousInt_12
  # DEBUG u32ErrStatus => u32ErrStatus_11
  # DEBUG BEGIN_STMT
  _7 = u32ErrStatus_11 & 1048576;
  if (_7 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 10> [local count: 37581]:
  _8 ={v} pBase_17->CTRL2;
  _9 = (signed int) _8;
  if (_9 < 0)
    goto <bb 11>; [41.00%]
  else
    goto <bb 13>; [59.00%]

  <bb 11> [local count: 15408]:
  # DEBUG BEGIN_STMT
  pBase_17->ESR1 ={v} 1048576;
  # DEBUG BEGIN_STMT
  _10 = state_18->error_callback;
  if (_10 != 0B)
    goto <bb 12>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 12> [local count: 10786]:
  # DEBUG BEGIN_STMT
  _10 (instance_15(D), 6, u32ErrStatus_11, state_18);
  goto <bb 15>; [100.00%]

  <bb 13> [local count: 59754]:
  # DEBUG isSpuriousInt => isSpuriousInt_12
  # DEBUG BEGIN_STMT
  if (isSpuriousInt_12 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 62089]:
  # DEBUG isSpuriousInt => NULL
  # DEBUG BEGIN_STMT
  pBase_17->ESR1 ={v} 3145730;

  <bb 15> [local count: 107374]:
  # DEBUG isSpuriousInt => NULL
  return;

}


FlexCAN_Ip_GetControllerRxErrorCounter (uint8 instance)
{
  volatile boolean x;
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  uint8 _8;
  _Bool x.0_9;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_5(D);
  base_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_7
  # DEBUG BEGIN_STMT
  _2 = instance_5(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_9 ={v} x;
  if (x.0_9 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 ={v} base_7->ECR;
  _4 = _3 >> 8;
  _8 = (uint8) _4;
  return _8;

}


FlexCAN_Ip_GetControllerTxErrorCounter (uint8 instance)
{
  volatile boolean x;
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  long unsigned int _3;
  uint8 _7;
  _Bool x.0_8;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  base_6 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_6
  # DEBUG BEGIN_STMT
  _2 = instance_4(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_8 ={v} x;
  if (x.0_8 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 ={v} base_6->ECR;
  _7 = (uint8) _3;
  return _7;

}


FlexCAN_Ip_GetErrorStatus (uint8 instance)
{
  volatile boolean x;
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  uint32 _6;
  _Bool x.0_7;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_3(D);
  base_5 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_5
  # DEBUG BEGIN_STMT
  _2 = instance_3(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_7 ={v} x;
  if (x.0_7 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _6 ={v} base_5->ESR1;
  return _6;

}


FlexCAN_Ip_ClearErrorStatus (uint8 instance, uint32 error)
{
  volatile boolean x;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  _Bool x.0_8;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_3(D);
  base_5 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_5
  # DEBUG BEGIN_STMT
  _2 = instance_3(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_8 ={v} x;
  if (x.0_8 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  base_5->ESR1 ={v} error_6(D);
  return;

}


FlexCAN_IRQHandler (uint8 instance, uint32 startMbIdx, uint32 endMbIdx)
{
  volatile boolean x;
  volatile boolean x;
  uint32 mb_idx;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  uint32 flag_reg;
  uint32 u32MbHandle;
  int _1;
  _Bool _3;
  _Bool _4;
  unsigned char _5;
  unsigned char _6;
  _Bool _7;
  <unnamed type> _8;
  <unnamed type> _9;
  unsigned char _10;
  <unnamed type> _11;
  _Bool x.0_41;
  _Bool x.0_42;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0
  # DEBUG BEGIN_STMT
  # DEBUG flag_reg => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_22(D);
  base_24 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_24
  # DEBUG BEGIN_STMT
  state_25 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_25
  # DEBUG BEGIN_STMT
  # DEBUG bIsSpuriousInt => 1
  # DEBUG BEGIN_STMT
  # DEBUG mb_idx => endMbIdx_26(D)
  # DEBUG BEGIN_STMT
  _3 = instance_22(D) <= 2;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_42 ={v} x;
  if (x.0_42 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 28> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 30> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 = endMbIdx_26(D) <= 31;
  x ={v} _4;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_41 ={v} x;
  if (x.0_41 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 27> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 29> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  if (state_25 != 0B)
    goto <bb 7>; [53.47%]
  else
    goto <bb 26>; [46.53%]

  <bb 26> [local count: 24981]:
  goto <bb 24>; [100.00%]

  <bb 7> [local count: 28706]:
  # DEBUG BEGIN_STMT
  _5 = FlexCAN_GetMsgBuffIntStatusFlag (base_24, endMbIdx_26(D));
  flag_reg_31 = (uint32) _5;
  # DEBUG flag_reg => flag_reg_31
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 239641]:
  # DEBUG BEGIN_STMT
  mb_idx_32 = mb_idx_14 + 4294967295;
  # DEBUG mb_idx => mb_idx_32
  # DEBUG BEGIN_STMT
  _6 = FlexCAN_GetMsgBuffIntStatusFlag (base_24, mb_idx_32);
  flag_reg_34 = (uint32) _6;
  # DEBUG flag_reg => flag_reg_34

  <bb 9> [local count: 268347]:
  # flag_reg_13 = PHI <flag_reg_31(7), flag_reg_34(8)>
  # mb_idx_14 = PHI <endMbIdx_26(D)(7), mb_idx_32(8)>
  # DEBUG mb_idx => mb_idx_14
  # DEBUG flag_reg => flag_reg_13
  # DEBUG BEGIN_STMT
  if (flag_reg_13 == 0)
    goto <bb 10>; [94.50%]
  else
    goto <bb 11>; [5.50%]

  <bb 10> [local count: 253588]:
  if (mb_idx_14 > startMbIdx_27(D))
    goto <bb 8>; [94.50%]
  else
    goto <bb 11>; [5.50%]

  <bb 11> [local count: 28706]:
  # flag_reg_2 = PHI <flag_reg_13(9), 0(10)>
  # mb_idx_21 = PHI <mb_idx_14(9), mb_idx_14(10)>
  # DEBUG BEGIN_STMT
  if (flag_reg_2 != 0)
    goto <bb 13>; [67.00%]
  else
    goto <bb 12>; [33.00%]

  <bb 12> [local count: 9473]:
  # DEBUG bIsSpuriousInt => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FlexCAN_ProcessSpuriousInterruptMB (instance_22(D), startMbIdx_27(D), endMbIdx_26(D));
  goto <bb 25>; [100.00%]

  <bb 13> [local count: 19233]:
  # DEBUG BEGIN_STMT
  # DEBUG bIsSpuriousInt => 0
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => mb_idx_21
  # DEBUG BEGIN_STMT
  _7 = state_25->bIsLegacyFifoEn;
  if (_7 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 14> [local count: 9617]:
  if (mb_idx_21 <= 7)
    goto <bb 15>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 15> [local count: 3173]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxFIFO (instance_22(D), mb_idx_21);
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0
  goto <bb 18>; [100.00%]

  <bb 16> [local count: 16060]:
  # DEBUG BEGIN_STMT
  _8 ={v} state_25->mbs[mb_idx_21].state;
  if (_8 == 1)
    goto <bb 17>; [20.24%]
  else
    goto <bb 18>; [79.76%]

  <bb 17> [local count: 3251]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxMB (instance_22(D), mb_idx_21);

  <bb 18> [local count: 19233]:
  # u32MbHandle_12 = PHI <0(15), mb_idx_21(16), mb_idx_21(17)>
  # DEBUG u32MbHandle => u32MbHandle_12
  # DEBUG BEGIN_STMT
  _9 ={v} state_25->mbs[u32MbHandle_12].state;
  if (_9 == 2)
    goto <bb 19>; [20.24%]
  else
    goto <bb 20>; [79.76%]

  <bb 19> [local count: 3893]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerTxMB (instance_22(D), mb_idx_21);

  <bb 20> [local count: 19233]:
  # DEBUG BEGIN_STMT
  _10 = FlexCAN_GetMsgBuffIntStatusFlag (base_24, mb_idx_21);
  if (_10 != 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 21> [local count: 9617]:
  # DEBUG BEGIN_STMT
  _11 ={v} state_25->mbs[u32MbHandle_12].state;
  if (_11 == 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 25>; [67.00%]

  <bb 22> [local count: 3173]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_24, mb_idx_21);
  # DEBUG bIsSpuriousInt => 0
  # DEBUG BEGIN_STMT
  goto <bb 25>; [100.00%]

  <bb 23> [local count: 202115]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_24, mb_idx_15);
  # DEBUG BEGIN_STMT
  mb_idx_29 = mb_idx_15 + 1;
  # DEBUG mb_idx => mb_idx_29

  <bb 24> [local count: 227096]:
  # mb_idx_15 = PHI <mb_idx_29(23), startMbIdx_27(D)(26)>
  # DEBUG mb_idx => mb_idx_15
  # DEBUG BEGIN_STMT
  if (mb_idx_15 <= endMbIdx_26(D))
    goto <bb 23>; [89.00%]
  else
    goto <bb 25>; [11.00%]

  <bb 25> [local count: 53687]:
  # DEBUG bIsSpuriousInt => NULL
  return;

}


FlexCAN_CompleteRxMessageFifoData (uint8 instance)
{
  volatile boolean x;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  <unnamed type> _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  _Bool x.0_17;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_8(D);
  base_10 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_10
  # DEBUG BEGIN_STMT
  state_11 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_11
  # DEBUG BEGIN_STMT
  _2 = instance_8(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_17 ={v} x;
  if (x.0_17 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = state_11->transferType;
  if (_3 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 35433]:
  # DEBUG BEGIN_STMT
  _4 = state_11->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_10, instance_8(D), 5, 0, _4);
  # DEBUG BEGIN_STMT
  _5 = state_11->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_10, instance_8(D), 6, 0, _5);
  # DEBUG BEGIN_STMT
  _6 = state_11->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_10, instance_8(D), 7, 0, _6);

  <bb 6> [local count: 107374]:
  # DEBUG BEGIN_STMT
  state_11->mbs[0].pMBmessage = 0B;
  # DEBUG BEGIN_STMT
  state_11->mbs[0].state ={v} 0;
  return;

}


FlexCAN_Ip_GetTransferStatus (uint8 instance, uint8 mb_idx)
{
  volatile boolean x;
  volatile boolean x;
  Flexcan_Ip_StatusType status;
  const struct Flexcan_Ip_StateType * state;
  int _1;
  _Bool _2;
  unsigned char _3;
  _Bool _4;
  int _5;
  <unnamed type> _6;
  _Bool x.0_12;
  _Bool x.0_13;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_8(D);
  state_10 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_10
  # DEBUG BEGIN_STMT
  # DEBUG status => 1
  # DEBUG BEGIN_STMT
  _2 = instance_8(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_13 ={v} x;
  if (x.0_13 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = mb_idx_11(D) + 224;
  _4 = _3 > 222;
  x ={v} _4;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_12 ={v} x;
  if (x.0_12 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  if (mb_idx_11(D) <= 31)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 26844]:
  # DEBUG BEGIN_STMT
  _5 = (int) mb_idx_11(D);
  _6 ={v} state_10->mbs[_5].state;
  if (_6 == 0)
    goto <bb 9>; [65.00%]
  else
    goto <bb 8>; [35.00%]

  <bb 8> [local count: 9395]:
  # DEBUG BEGIN_STMT
  # DEBUG status => 2

  <bb 9> [local count: 53687]:
  # status_7 = PHI <1(6), 0(7), 2(8)>
  # DEBUG status => status_7
  # DEBUG BEGIN_STMT
  return status_7;

}


FlexCAN_Ip_ConfigRemoteResponseMb (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data)
{
  volatile boolean x;
  volatile boolean x;
  volatile boolean x;
  volatile boolean x;
  volatile uint32 * pMbAddr;
  const struct Flexcan_Ip_StateType * const state;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_MsbuffCodeStatusType cs;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  _Bool _3;
  long unsigned int _4;
  long unsigned int _5;
  _Bool _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  unsigned char _10;
  _Bool _11;
  _Bool _12;
  long unsigned int _13;
  _Bool _14;
  long unsigned int _15;
  <unnamed type> _16;
  _Bool _17;
  _Bool _18;
  _Bool _19;
  _Bool x.0_45;
  _Bool x.0_46;
  _Bool x.0_47;
  _Bool x.0_48;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_22(D);
  pBase_24 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_24
  # DEBUG BEGIN_STMT
  state_25 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_25
  # DEBUG BEGIN_STMT
  # DEBUG pMbAddr => 0B
  # DEBUG BEGIN_STMT
  _2 = instance_22(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_48 ={v} x;
  if (x.0_48 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 17> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = tx_info_26(D) != 0B;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_47 ={v} x;
  if (x.0_47 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 20> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_24->CTRL2;
  _5 = _4 & 131072;
  _6 = _5 == 0;
  x ={v} _6;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_46 ={v} x;
  if (x.0_46 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 26844]:

  <bb 7> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 19> [local count: 268435456]:
  goto <bb 7>; [100.00%]

  <bb 8> [local count: 26844]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _7 = tx_info_26(D)->data_length;
  _8 = (unsigned char) _7;
  _9 = (long unsigned int) mb_idx_27(D);
  _10 = FlexCAN_GetMbPayloadSize (pBase_24, _9);
  _11 = _8 <= _10;
  x ={v} _11;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_45 ={v} x;
  if (x.0_45 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 13422]:

  <bb 9> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 18> [local count: 134217728]:
  goto <bb 9>; [100.00%]

  <bb 10> [local count: 13422]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _12 = state_25->bIsLegacyFifoEn;
  _13 = state_25->u32MaxMbNum;
  _14 = FlexCAN_IsMbOutOfRange (pBase_24, mb_idx_27(D), _12, _13);
  if (_14 != 0)
    goto <bb 13>; [52.23%]
  else
    goto <bb 11>; [47.77%]

  <bb 11> [local count: 6412]:
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = tx_info_26(D)->data_length;
  cs.dataLen = _15;
  # DEBUG BEGIN_STMT
  _16 = tx_info_26(D)->msg_id_type;
  cs.msgIdType = _16;
  # DEBUG BEGIN_STMT
  cs.code = 10;
  # DEBUG BEGIN_STMT
  cs.fd_enable = 0;
  # DEBUG BEGIN_STMT
  cs.enable_brs = 0;
  # DEBUG BEGIN_STMT
  cs.fd_padding = 0;
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_24, _9);
  # DEBUG BEGIN_STMT
  pMbAddr_38 = FlexCAN_GetMsgBuffRegion (pBase_24, _9);
  # DEBUG pMbAddr => pMbAddr_38
  # DEBUG BEGIN_STMT
  _17 = tx_info_26(D)->is_remote;
  FlexCAN_SetTxMsgBuff (pMbAddr_38, &cs, msg_id_39(D), mb_data_40(D), _17);
  # DEBUG BEGIN_STMT
  _18 = tx_info_26(D)->is_polling;
  if (_18 != 0)
    goto <bb 13>; [67.00%]
  else
    goto <bb 12>; [33.00%]

  <bb 12> [local count: 2116]:
  # DEBUG BEGIN_STMT
  _19 = state_25->isIntActive;
  result_43 = FlexCAN_SetMsgBuffIntCmd (pBase_24, instance_22(D), _9, 1, _19);
  # DEBUG result => result_43

  <bb 13> [local count: 13422]:
  # result_20 = PHI <4(10), 0(11), result_43(12)>
  # DEBUG result => result_20
  # DEBUG BEGIN_STMT
  cs ={v} {CLOBBER};
  return result_20;

}


FlexCAN_Ip_ConfigRxFifo_Privileged (uint8 instance, Flexcan_Ip_RxFifoIdElementFormatType id_format, const struct Flexcan_Ip_IdTableType * id_filter_table)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  int _2;
  long unsigned int _19;
  signed int _20;
  _Bool x.0_21;
  long unsigned int _22;
  long unsigned int _23;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_21 ={v} x;
  if (x.0_21 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _2 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_2];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _19 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _20 = (signed int) _19;
  # DEBUG pBase => NULL
  # DEBUG disabled => _20 < 0
  # DEBUG BEGIN_STMT
  if (_20 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 27380]:
  # DEBUG BEGIN_STMT
  result_13 = FlexCAN_Enable (pBase_11);
  # DEBUG result => result_13

  <bb 6> [local count: 107374]:
  # result_3 = PHI <0(4), result_13(5)>
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsFreezeMode
  # DEBUG BEGIN_STMT
  _22 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _23 = _22 & 16777216;
  # DEBUG base => NULL
  # DEBUG freeze => _23 != 0
  # DEBUG BEGIN_STMT
  if (_23 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 53687]:
  if (result_3 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 80531]:
  # DEBUG result => result_3
  # DEBUG BEGIN_STMT
  if (result_3 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 26575]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxFifoFilter (pBase_11, id_format_14(D), id_filter_table_15(D));

  <bb 10> [local count: 107374]:
  # result_10 = PHI <result_3(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_20 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 27380]:
  # DEBUG BEGIN_STMT
  status_18 = FlexCAN_Disable (pBase_11);
  # DEBUG status => status_18
  # DEBUG BEGIN_STMT
  if (status_18 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 13690]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_18

  <bb 13> [local count: 107374]:
  # result_4 = PHI <result_10(10), result_10(11), status_18(12)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  return result_4;

}


FlexCAN_Ip_RxFifoBlocking (uint8 instance, struct Flexcan_Ip_MsgBuffType * data, uint32 timeout)
{
  volatile boolean x;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  _Bool x.0_12;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  _1 = instance_4(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_12 ={v} x;
  if (x.0_12 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  result_8 = FlexCAN_StartRxMessageFifoData (instance_4(D), data_6(D));
  # DEBUG result => result_8
  # DEBUG BEGIN_STMT
  if (result_8 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 35433]:
  # DEBUG BEGIN_STMT
  result_11 = FlexCAN_ProccessLegacyRxFIFO (instance_4(D), timeout_9(D));
  # DEBUG result => result_11

  <bb 6> [local count: 107374]:
  # result_2 = PHI <result_8(4), result_11(5)>
  # DEBUG result => result_2
  # DEBUG BEGIN_STMT
  return result_2;

}


FlexCAN_Ip_RxFifo (uint8 instance, struct Flexcan_Ip_MsgBuffType * data)
{
  volatile boolean x;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  _Bool x.0_7;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  _1 = instance_2(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_7 ={v} x;
  if (x.0_7 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  result_6 = FlexCAN_StartRxMessageFifoData (instance_2(D), data_4(D));
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  return result_6;

}


FlexCAN_Ip_ReceiveBlocking (uint8 instance, uint8 mb_idx, struct Flexcan_Ip_MsgBuffType * data, boolean isPolling, uint32 u32TimeoutMs)
{
  volatile boolean x;
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  uint32 mS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  Flexcan_Ip_StatusType result;
  long unsigned int _1;
  _Bool _2;
  int _3;
  long unsigned int _4;
  _Bool _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  int _9;
  <unnamed type> _10;
  long unsigned int _11;
  _Bool _12;
  int _13;
  <unnamed type> _14;
  long unsigned int _45;
  _Bool x.0_50;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _1 = u32TimeoutMs_27(D) * 1000;
  mS2Ticks_29 = OsIf_MicrosToTicks (_1, 0);
  # DEBUG mS2Ticks => mS2Ticks_29
  # DEBUG BEGIN_STMT
  _2 = instance_30(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_50 ={v} x;
  if (x.0_50 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 24> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = (int) instance_30(D);
  state_31 = Flexcan_Ip_apxState[_3];
  # DEBUG state => state_31
  # DEBUG BEGIN_STMT
  base_32 = Flexcan_Ip_apxBase[_3];
  # DEBUG base => base_32
  # DEBUG BEGIN_STMT
  result_37 = FlexCAN_StartRxMessageBufferData (instance_30(D), mb_idx_33(D), data_34(D), isPolling_35(D));
  # DEBUG result => result_37
  # DEBUG BEGIN_STMT
  if (result_37 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 53687]:
  if (isPolling_35(D) != 0)
    goto <bb 7>; [67.00%]
  else
    goto <bb 6>; [33.00%]

  <bb 6> [local count: 17717]:
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) mb_idx_33(D);
  _5 = state_31->isIntActive;
  result_39 = FlexCAN_SetMsgBuffIntCmd (base_32, instance_30(D), _4, 1, _5);
  # DEBUG result => result_39

  <bb 7> [local count: 107374]:
  # result_15 = PHI <result_37(4), 0(5), result_39(6)>
  # DEBUG result => result_15
  # DEBUG BEGIN_STMT
  if (result_15 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 8> [local count: 35433]:
  # DEBUG BEGIN_STMT
  _6 = OsIf_GetCounter (0);
  timeStart = _6;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 313013]:
  # DEBUG BEGIN_STMT
  if (isPolling_35(D) != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 10> [local count: 103294]:
  # DEBUG BEGIN_STMT
  _7 = (long unsigned int) mb_idx_33(D);
  _8 = FlexCAN_GetBuffStatusFlag (base_32, _7);
  if (_8 != 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 11> [local count: 34087]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxMB (instance_30(D), _7);

  <bb 12> [local count: 313013]:
  # DEBUG BEGIN_STMT
  _45 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_46 = timeElapsed_18 + _45;
  # DEBUG timeElapsed => timeElapsed_46
  # DEBUG BEGIN_STMT
  if (mS2Ticks_29 <= timeElapsed_46)
    goto <bb 14>; [5.50%]
  else
    goto <bb 23>; [94.50%]

  <bb 23> [local count: 295797]:

  <bb 13> [local count: 331231]:
  # timeElapsed_18 = PHI <0(8), timeElapsed_46(23)>
  # DEBUG timeElapsed => timeElapsed_18
  # DEBUG BEGIN_STMT
  _9 = (int) mb_idx_33(D);
  _10 ={v} state_31->mbs[_9].state;
  if (_10 == 1)
    goto <bb 9>; [94.50%]
  else
    goto <bb 14>; [5.50%]

  <bb 14> [local count: 107374]:
  # result_16 = PHI <result_15(7), 3(12), 0(13)>
  # DEBUG result => result_16
  # DEBUG BEGIN_STMT
  if (result_16 == 3)
    goto <bb 15>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 15> [local count: 36507]:
  if (isPolling_35(D) != 0)
    goto <bb 17>; [67.00%]
  else
    goto <bb 16>; [33.00%]

  <bb 16> [local count: 12047]:
  # DEBUG BEGIN_STMT
  _11 = (long unsigned int) mb_idx_33(D);
  _12 = state_31->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_32, instance_30(D), _11, 0, _12);

  <bb 17> [local count: 107374]:
  # DEBUG BEGIN_STMT
  if (result_16 != 4)
    goto <bb 18>; [66.00%]
  else
    goto <bb 21>; [34.00%]

  <bb 18> [local count: 70867]:
  if (result_16 != 2)
    goto <bb 19>; [66.00%]
  else
    goto <bb 21>; [34.00%]

  <bb 19> [local count: 46772]:
  # DEBUG BEGIN_STMT
  _13 = (int) mb_idx_33(D);
  _14 ={v} state_31->mbs[_13].state;
  if (_14 == 0)
    goto <bb 21>; [65.00%]
  else
    goto <bb 20>; [35.00%]

  <bb 20> [local count: 16370]:
  # DEBUG BEGIN_STMT
  state_31->mbs[_13].state ={v} 0;
  # DEBUG BEGIN_STMT
  # DEBUG result => 3

  <bb 21> [local count: 107374]:
  # result_17 = PHI <result_16(17), result_16(18), 0(19), 3(20)>
  # DEBUG result => result_17
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return result_17;

}


FlexCAN_Ip_Receive (uint8 instance, uint8 mb_idx, struct Flexcan_Ip_MsgBuffType * data, boolean isPolling)
{
  volatile boolean x;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  long unsigned int _3;
  _Bool _4;
  _Bool x.0_18;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_7(D);
  base_9 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_9
  # DEBUG BEGIN_STMT
  state_10 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_10
  # DEBUG BEGIN_STMT
  _2 = instance_7(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_18 ={v} x;
  if (x.0_18 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 9> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_StartRxMessageBufferData (instance_7(D), mb_idx_11(D), data_12(D), isPolling_13(D));
  # DEBUG result => result_15
  # DEBUG BEGIN_STMT
  if (result_15 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 53687]:
  if (isPolling_13(D) != 0)
    goto <bb 7>; [67.00%]
  else
    goto <bb 6>; [33.00%]

  <bb 6> [local count: 17717]:
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) mb_idx_11(D);
  _4 = state_10->isIntActive;
  result_17 = FlexCAN_SetMsgBuffIntCmd (base_9, instance_7(D), _3, 1, _4);
  # DEBUG result => result_17

  <bb 7> [local count: 107374]:
  # result_5 = PHI <result_15(4), 0(5), result_17(6)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}


FlexCAN_Ip_ConfigRxMb (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * rx_info, uint32 msg_id)
{
  volatile boolean x;
  volatile boolean x;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_MsbuffCodeStatusType cs;
  Flexcan_Ip_StatusType eResult;
  int _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  _Bool _6;
  long unsigned int _7;
  long unsigned int _8;
  <unnamed type> _9;
  _Bool _10;
  _Bool x.0_32;
  _Bool x.0_33;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_13(D);
  base_15 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_15
  # DEBUG BEGIN_STMT
  state_16 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_16
  # DEBUG BEGIN_STMT
  _2 = instance_13(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_33 ={v} x;
  if (x.0_33 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = rx_info_17(D) != 0B;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_32 ={v} x;
  if (x.0_32 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 11> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 = state_16->bIsLegacyFifoEn;
  _5 = state_16->u32MaxMbNum;
  _6 = FlexCAN_IsMbOutOfRange (base_15, mb_idx_18(D), _4, _5);
  if (_6 != 0)
    goto <bb 8>; [52.23%]
  else
    goto <bb 7>; [47.77%]

  <bb 7> [local count: 25646]:
  # DEBUG BEGIN_STMT
  _7 = (long unsigned int) mb_idx_18(D);
  FlexCAN_ClearMsgBuffIntStatusFlag (base_15, _7);
  # DEBUG BEGIN_STMT
  _8 = rx_info_17(D)->data_length;
  cs.dataLen = _8;
  # DEBUG BEGIN_STMT
  _9 = rx_info_17(D)->msg_id_type;
  cs.msgIdType = _9;
  # DEBUG BEGIN_STMT
  _10 = rx_info_17(D)->fd_enable;
  cs.fd_enable = _10;
  # DEBUG BEGIN_STMT
  cs.code = 15;
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMsgBuff (base_15, _7, &cs, msg_id_25(D));
  # DEBUG BEGIN_STMT
  cs.code = 0;
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMsgBuff (base_15, _7, &cs, msg_id_25(D));
  # DEBUG BEGIN_STMT
  cs.code = 4;
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMsgBuff (base_15, _7, &cs, msg_id_25(D));

  <bb 8> [local count: 53687]:
  # eResult_11 = PHI <4(6), 0(7)>
  # DEBUG eResult => eResult_11
  # DEBUG BEGIN_STMT
  cs ={v} {CLOBBER};
  return eResult_11;

}


FlexCAN_Ip_Send (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data)
{
  volatile boolean x;
  volatile boolean x;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  _Bool _6;
  long unsigned int _21;
  long unsigned int _22;
  _Bool x.0_23;
  _Bool x.0_24;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  _1 = (int) instance_9(D);
  base_11 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_11
  # DEBUG BEGIN_STMT
  state_12 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_12
  # DEBUG BEGIN_STMT
  _2 = instance_9(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_24 ={v} x;
  if (x.0_24 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 14> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = tx_info_13(D) != 0B;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_23 ={v} x;
  if (x.0_23 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_11
  # DEBUG INLINE_ENTRY FlexCAN_IsListenOnlyModeEnabled
  # DEBUG BEGIN_STMT
  _21 ={v} MEM[(const struct FLEXCAN_Type *)base_11].CTRL1;
  _22 = _21 & 8;
  # DEBUG base => NULL
  if (_22 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 7> [local count: 17717]:
  # DEBUG BEGIN_STMT
  result_18 = FlexCAN_StartSendData (instance_9(D), mb_idx_14(D), tx_info_13(D), msg_id_15(D), mb_data_16(D));
  # DEBUG result => result_18
  # DEBUG BEGIN_STMT
  if (result_18 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 8858]:
  _4 = tx_info_13(D)->is_polling;
  if (_4 != 0)
    goto <bb 10>; [67.00%]
  else
    goto <bb 9>; [33.00%]

  <bb 9> [local count: 2923]:
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) mb_idx_14(D);
  _6 = state_12->isIntActive;
  result_20 = FlexCAN_SetMsgBuffIntCmd (base_11, instance_9(D), _5, 1, _6);
  # DEBUG result => result_20

  <bb 10> [local count: 53687]:
  # result_7 = PHI <1(6), result_18(7), 0(8), result_20(9)>
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  return result_7;

}


FlexCAN_Ip_Init_Privileged (uint8 Flexcan_Ip_u8Instance, struct Flexcan_Ip_StateType * Flexcan_Ip_pState, const struct Flexcan_Ip_ConfigType * Flexcan_Ip_pData)
{
  volatile boolean x;
  volatile boolean x;
  volatile boolean x;
  uint32 i;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType eResult;
  int _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  _Bool _7;
  _Bool _8;
  _Bool _9;
  const struct Flexcan_Ip_TimeSegmentType * _10;
  const struct Flexcan_Ip_TimeSegmentType * _11;
  const struct Flexcan_Ip_TimeSegmentType * _12;
  <unnamed type> _13;
  <unnamed type> _14;
  void (*<T626>) (uint8, Flexcan_Ip_EventType, uint32, const struct Flexcan_Ip_StateType *) _15;
  void (*<T626>) (uint8, Flexcan_Ip_EventType, uint32, const struct Flexcan_Ip_StateType *) _16;
  _Bool _17;
  long unsigned int _18;
  _Bool x.0_51;
  _Bool x.0_52;
  _Bool x.0_53;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = (int) Flexcan_Ip_u8Instance_24(D);
  pBase_26 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_26
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Flexcan_Ip_u8Instance_24(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_52 ={v} x;
  if (x.0_52 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 23> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = Flexcan_Ip_pData_27(D) != 0B;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_51 ={v} x;
  if (x.0_51 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 22> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 = Flexcan_Ip_pData_27(D)->fd_enable;
  if (_4 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 26844]:
  # DEBUG BEGIN_STMT
  _5 = FlexCAN_IsFDAvailable (pBase_26);
  _6 = Flexcan_Ip_pData_27(D)->fd_enable;
  _7 = _5 == _6;
  x ={v} _7;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_53 ={v} x;
  if (x.0_53 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [local count: 13422]:

  <bb 8> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 134217728]:
  goto <bb 8>; [100.00%]

  <bb 9> [local count: 40265]:
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  eResult_30 = FlexCAN_InitController (pBase_26, Flexcan_Ip_pData_27(D));
  # DEBUG eResult => eResult_30
  # DEBUG BEGIN_STMT
  if (eResult_30 == 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 17>; [67.00%]

  <bb 10> [local count: 13288]:
  # DEBUG BEGIN_STMT
  _8 = Flexcan_Ip_pData_27(D)->fd_enable;
  FlexCAN_EnableExtCbt (pBase_26, _8);
  # DEBUG BEGIN_STMT
  _9 = Flexcan_Ip_pData_27(D)->fd_enable;
  if (_9 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 6644]:
  # DEBUG BEGIN_STMT
  _10 = &Flexcan_Ip_pData_27(D)->bitrate;
  FlexCAN_SetExtendedTimeSegments (pBase_26, _10);
  # DEBUG BEGIN_STMT
  _11 = &Flexcan_Ip_pData_27(D)->bitrate_cbt;
  FlexCAN_SetFDTimeSegments (pBase_26, _11);
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 6644]:
  # DEBUG BEGIN_STMT
  _12 = &Flexcan_Ip_pData_27(D)->bitrate;
  FlexCAN_SetTimeSegments (pBase_26, _12);

  <bb 13> [local count: 13288]:
  # DEBUG BEGIN_STMT
  _13 = Flexcan_Ip_pData_27(D)->flexcanMode;
  FlexCAN_SetOperationMode (pBase_26, _13);
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 425245]:
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->mbs[i_19].isPolling = 1;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->mbs[i_19].pMBmessage = 0B;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->mbs[i_19].state ={v} 0;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->mbs[i_19].time_stamp = 0;
  # DEBUG BEGIN_STMT
  i_50 = i_19 + 1;
  # DEBUG i => i_50

  <bb 15> [local count: 438532]:
  # i_19 = PHI <0(13), i_50(14)>
  # DEBUG i => i_19
  # DEBUG BEGIN_STMT
  if (i_19 != 32)
    goto <bb 14>; [96.97%]
  else
    goto <bb 16>; [3.03%]

  <bb 16> [local count: 13288]:
  # DEBUG BEGIN_STMT
  _14 = Flexcan_Ip_pData_27(D)->transfer_type;
  Flexcan_Ip_pState_36(D)->transferType = _14;
  # DEBUG BEGIN_STMT
  _15 = Flexcan_Ip_pData_27(D)->Callback;
  Flexcan_Ip_pState_36(D)->callback = _15;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->callbackParam = 0B;
  # DEBUG BEGIN_STMT
  _16 = Flexcan_Ip_pData_27(D)->ErrorCallback;
  Flexcan_Ip_pState_36(D)->error_callback = _16;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->errorCallbackParam = 0B;
  # DEBUG BEGIN_STMT
  _17 = Flexcan_Ip_pData_27(D)->is_rx_fifo_needed;
  Flexcan_Ip_pState_36(D)->bIsLegacyFifoEn = _17;
  # DEBUG BEGIN_STMT
  _18 = Flexcan_Ip_pData_27(D)->max_num_mb;
  Flexcan_Ip_pState_36(D)->u32MaxMbNum = _18;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_36(D)->isIntActive = 1;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_apxState[_1] = Flexcan_Ip_pState_36(D);

  <bb 17> [local count: 40265]:
  # DEBUG BEGIN_STMT
  return eResult_30;

}


FlexCAN_AbortRxTransfer (uint8 u8Instance, uint8 mb_idx)
{
  volatile uint32 * flexcan_mb;
  uint32 flexcan_mb_config;
  uint32 val2;
  uint32 val1;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * pBase;
  int _1;
  int _2;
  _Bool _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  _Bool _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_12(D);
  pBase_14 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_14
  # DEBUG BEGIN_STMT
  state_15 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_15
  # DEBUG BEGIN_STMT
  # DEBUG val1 => 0
  # DEBUG BEGIN_STMT
  # DEBUG val2 => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb => 0B
  # DEBUG BEGIN_STMT
  _2 = (int) mb_idx_16(D);
  state_15->mbs[_2].state ={v} 0;
  # DEBUG BEGIN_STMT
  _3 = state_15->bIsLegacyFifoEn;
  if (_3 != 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 7>; [33.00%]

  <bb 3> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_14->CTRL2;
  _5 = _4 >> 24;
  val1_25 = _5 & 15;
  # DEBUG val1 => val1_25
  # DEBUG BEGIN_STMT
  val2_26 = RxFifoOcuppiedLastMsgBuff (val1_25);
  # DEBUG val2 => val2_26
  # DEBUG BEGIN_STMT
  _6 = (long unsigned int) mb_idx_16(D);
  if (_6 > val2_26)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  flexcan_mb_28 = FlexCAN_GetMsgBuffRegion (pBase_14, _6);
  # DEBUG flexcan_mb => flexcan_mb_28
  # DEBUG BEGIN_STMT
  flexcan_mb_config_29 ={v} *flexcan_mb_28;
  # DEBUG flexcan_mb_config => flexcan_mb_config_29
  # DEBUG BEGIN_STMT
  flexcan_mb_config_30 = flexcan_mb_config_29 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_30
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_30
  # DEBUG BEGIN_STMT
  *flexcan_mb_28 ={v} flexcan_mb_config_30;
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_30
  # DEBUG BEGIN_STMT
  flexcan_mb_config_32 = flexcan_mb_config_30 | 67108864;
  # DEBUG flexcan_mb_config => flexcan_mb_config_32
  # DEBUG BEGIN_STMT
  *flexcan_mb_28 ={v} flexcan_mb_config_32;

  <bb 5> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  if (mb_idx_16(D) == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 6> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  _7 = state_15->isIntActive;
  FLEXCAN_ClearMsgBuffIntCmd (pBase_14, u8Instance_12(D), 5, _7);
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) mb_idx_16(D);
  flexcan_mb_19 = FlexCAN_GetMsgBuffRegion (pBase_14, _8);
  # DEBUG flexcan_mb => flexcan_mb_19
  # DEBUG BEGIN_STMT
  flexcan_mb_config_20 ={v} *flexcan_mb_19;
  # DEBUG flexcan_mb_config => flexcan_mb_config_20
  # DEBUG BEGIN_STMT
  flexcan_mb_config_21 = flexcan_mb_config_20 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_21
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_21
  # DEBUG BEGIN_STMT
  *flexcan_mb_19 ={v} flexcan_mb_config_21;
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_21
  # DEBUG BEGIN_STMT
  flexcan_mb_config_23 = flexcan_mb_config_21 | 67108864;
  # DEBUG flexcan_mb_config => flexcan_mb_config_23
  # DEBUG BEGIN_STMT
  *flexcan_mb_19 ={v} flexcan_mb_config_23;

  <bb 8> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) mb_idx_16(D);
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_14, _9);
  return;

}


FlexCAN_AbortTxTransfer (uint8 u8Instance, uint8 mb_idx)
{
  volatile uint32 * flexcan_mb;
  uint32 uS2Ticks;
  uint32 flexcan_mb_config;
  uint32 timeElapsed;
  uint32 timeStart;
  Flexcan_Ip_StatusType result;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * pBase;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  long unsigned int _6;
  int _7;
  long unsigned int _32;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_14(D);
  pBase_16 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_16
  # DEBUG BEGIN_STMT
  state_17 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_17
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => 0
  # DEBUG BEGIN_STMT
  # DEBUG uS2Ticks => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb => 0B
  # DEBUG BEGIN_STMT
  _2 = (long unsigned int) mb_idx_19(D);
  flexcan_mb_21 = FlexCAN_GetMsgBuffRegion (pBase_16, _2);
  # DEBUG flexcan_mb => flexcan_mb_21
  # DEBUG BEGIN_STMT
  flexcan_mb_config_22 ={v} *flexcan_mb_21;
  # DEBUG flexcan_mb_config => flexcan_mb_config_22
  # DEBUG BEGIN_STMT
  flexcan_mb_config_23 = flexcan_mb_config_22 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_23
  # DEBUG BEGIN_STMT
  flexcan_mb_config_24 = flexcan_mb_config_23 | 150994944;
  # DEBUG flexcan_mb_config => flexcan_mb_config_24
  # DEBUG BEGIN_STMT
  *flexcan_mb_21 ={v} flexcan_mb_config_24;
  # DEBUG BEGIN_STMT
  uS2Ticks_27 = OsIf_MicrosToTicks (10000, 0);
  # DEBUG uS2Ticks => uS2Ticks_27
  # DEBUG BEGIN_STMT
  _3 = OsIf_GetCounter (0);
  timeStart = _3;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _32 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_33 = timeElapsed_11 + _32;
  # DEBUG timeElapsed => timeElapsed_33
  # DEBUG BEGIN_STMT
  if (uS2Ticks_27 <= timeElapsed_33)
    goto <bb 5>; [5.50%]
  else
    goto <bb 11>; [94.50%]

  <bb 11> [local count: 958878293]:

  <bb 4> [local count: 1073741824]:
  # timeElapsed_11 = PHI <0(2), timeElapsed_33(11)>
  # DEBUG timeElapsed => timeElapsed_11
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_GetBuffStatusFlag (pBase_16, _2);
  if (_4 == 0)
    goto <bb 3>; [94.50%]
  else
    goto <bb 5>; [5.50%]

  <bb 5> [local count: 114863532]:
  # result_8 = PHI <3(3), 0(4)>
  # DEBUG result => result_8
  # DEBUG BEGIN_STMT
  if (result_8 != 3)
    goto <bb 6>; [66.00%]
  else
    goto <bb 10>; [34.00%]

  <bb 6> [local count: 75809931]:
  # DEBUG BEGIN_STMT
  flexcan_mb_config_34 ={v} *flexcan_mb_21;
  # DEBUG flexcan_mb_config => flexcan_mb_config_34
  # DEBUG BEGIN_STMT
  _5 = flexcan_mb_config_34 >> 24;
  _6 = _5 & 15;
  if (_6 == 8)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 25775377]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 5

  <bb 8> [local count: 75809931]:
  # result_9 = PHI <result_8(6), 5(7)>
  # DEBUG result => result_9
  # DEBUG BEGIN_STMT
  if (_6 == 9)
    goto <bb 9>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 9> [local count: 25775377]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 10> [local count: 114863532]:
  # result_10 = PHI <result_8(5), result_9(8), 0(9)>
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_16, _2);
  # DEBUG BEGIN_STMT
  _7 = (int) mb_idx_19(D);
  state_17->mbs[_7].state ={v} 0;
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return result_10;

}


FlexCAN_ProcessSpuriousInterruptMB (uint8 instance, uint32 startMbIdx, uint32 endMbIdx)
{
  uint32 u32MbHandle;
  uint32 mb_idx;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  unsigned char _2;
  unsigned char _3;
  _Bool _4;
  _Bool _5;
  <unnamed type> _6;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_11(D);
  base_13 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_13
  # DEBUG BEGIN_STMT
  state_14 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_14
  # DEBUG BEGIN_STMT
  # DEBUG mb_idx => 0
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0
  # DEBUG BEGIN_STMT
  # DEBUG mb_idx => startMbIdx_15(D)
  goto <bb 12>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _2 = FlexCAN_GetBuffStatusFlag (base_13, mb_idx_7);
  if (_2 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 4> [local count: 315357973]:
  _3 = FlexCAN_GetBuffStatusImask (base_13, mb_idx_7);
  if (_3 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 5> [local count: 157678987]:
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => mb_idx_7
  # DEBUG BEGIN_STMT
  _4 = state_14->bIsLegacyFifoEn;
  if (_4 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 78839493]:
  if (mb_idx_7 <= 7)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 39419747]:
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0

  <bb 8> [local count: 157678987]:
  # u32MbHandle_8 = PHI <mb_idx_7(5), mb_idx_7(6), 0(7)>
  # DEBUG u32MbHandle => u32MbHandle_8
  # DEBUG BEGIN_STMT
  _5 = state_14->mbs[u32MbHandle_8].isPolling;
  if (_5 != 0)
    goto <bb 11>; [67.00%]
  else
    goto <bb 9>; [33.00%]

  <bb 9> [local count: 52034066]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_13, mb_idx_7);
  # DEBUG BEGIN_STMT
  _6 ={v} state_14->mbs[u32MbHandle_8].state;
  if (_6 == 2)
    goto <bb 10>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 10> [local count: 17691582]:
  # DEBUG BEGIN_STMT
  state_14->mbs[u32MbHandle_8].state ={v} 0;
  # DEBUG BEGIN_STMT
  state_14->mbs[u32MbHandle_8].isPolling = 1;

  <bb 11> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  mb_idx_22 = mb_idx_7 + 1;
  # DEBUG mb_idx => mb_idx_22

  <bb 12> [local count: 1073741824]:
  # mb_idx_7 = PHI <startMbIdx_15(D)(2), mb_idx_22(11)>
  # DEBUG mb_idx => mb_idx_7
  # DEBUG BEGIN_STMT
  if (mb_idx_7 <= endMbIdx_16(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111601]:
  return;

}


FlexCAN_IRQHandlerRxFIFO (uint8 instance, uint32 mb_idx)
{
  struct Flexcan_Ip_MsgBuffType data;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  struct Flexcan_Ip_MsgBuffType * _2;
  <unnamed type> _3;
  struct Flexcan_Ip_MsgBuffType * _4;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _5;
  <unnamed type> _6;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _7;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _8;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_12(D);
  base_14 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_14
  # DEBUG BEGIN_STMT
  state_15 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = state_15->mbs[0].pMBmessage;
  if (_2 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  # DEBUG BEGIN_STMT
  state_15->mbs[0].pMBmessage = &data;

  <bb 4> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  switch (mb_idx_17(D)) <default: <L17> [25.00%], case 5: <L2> [25.00%], case 6: <L9> [25.00%], case 7: <L12> [25.00%]>

  <bb 5> [local count: 268435456]:
<L2>:
  # DEBUG BEGIN_STMT
  _3 ={v} state_15->mbs[0].state;
  if (_3 == 1)
    goto <bb 6>; [20.24%]
  else
    goto <bb 14>; [79.76%]

  <bb 6> [local count: 54331336]:
  # DEBUG BEGIN_STMT
  _4 = state_15->mbs[0].pMBmessage;
  FlexCAN_ReadRxFifo (base_14, _4);
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_14, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  state_15->mbs[0].state ={v} 0;
  # DEBUG BEGIN_STMT
  _5 = state_15->callback;
  if (_5 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [local count: 38031935]:
  # DEBUG BEGIN_STMT
  _5 (instance_12(D), 1, 0, state_15);

  <bb 8> [local count: 54331336]:
  # DEBUG BEGIN_STMT
  _6 ={v} state_15->mbs[0].state;
  if (_6 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 9> [local count: 17929341]:
  # DEBUG BEGIN_STMT
  state_15->mbs[0].isPolling = 1;
  # DEBUG BEGIN_STMT
  FlexCAN_CompleteRxMessageFifoData (instance_12(D));
  goto <bb 14>; [100.00%]

  <bb 10> [local count: 268435456]:
<L9>:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_14, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  _7 = state_15->callback;
  if (_7 != 0B)
    goto <bb 11>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 11> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  _7 (instance_12(D), 2, 0, state_15);
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 268435456]:
<L12>:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_14, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  _8 = state_15->callback;
  if (_8 != 0B)
    goto <bb 13>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 13> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  _8 (instance_12(D), 3, 0, state_15);

  <bb 14> [local count: 1073741824]:
<L17>:
  data ={v} {CLOBBER};
  return;

}


FlexCAN_IRQHandlerTxMB (uint8 u8Instance, uint32 u32MbIdx)
{
  boolean bCurrentIntStat;
  struct Flexcan_Ip_MsgBuffType mb;
  struct Flexcan_Ip_StateType * pState;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _8;
  <unnamed type> _9;
  _Bool _10;
  _Bool _11;
  _Bool _12;
  _Bool _13;
  long unsigned int vol.6_36;
  long unsigned int vol.6_37;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_17(D);
  pBase_19 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_19
  # DEBUG BEGIN_STMT
  pState_20 = Flexcan_Ip_apxState[_1];
  # DEBUG pState => pState_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bCurrentIntStat => 0
  # DEBUG BEGIN_STMT
  _2 = pState_20->mbs[u32MbIdx_21(D)].isRemote;
  if (_2 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  FlexCAN_LockRxMsgBuff (pBase_19, u32MbIdx_21(D));
  # DEBUG BEGIN_STMT
  FlexCAN_GetMsgBuff (pBase_19, u32MbIdx_21(D), &mb);
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_19
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_36 ={v} MEM[(const struct FLEXCAN_Type *)pBase_19].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  _3 = mb.time_stamp;
  pState_20->mbs[u32MbIdx_21(D)].time_stamp = _3;
  # DEBUG BEGIN_STMT
  _4 = mb.cs;
  _5 = _4 >> 24;
  _6 = _5 & 15;
  if (_6 == 4)
    goto <bb 4>; [20.24%]
  else
    goto <bb 6>; [79.76%]

  <bb 4> [local count: 108662672]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_19, u32MbIdx_21(D));
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  _7 = FlexCAN_GetMsgBuffTimestamp (pBase_19, u32MbIdx_21(D));
  pState_20->mbs[u32MbIdx_21(D)].time_stamp = _7;
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_19
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_37 ={v} MEM[(const struct FLEXCAN_Type *)pBase_19].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_19, u32MbIdx_21(D));

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  pState_20->mbs[u32MbIdx_21(D)].state ={v} 0;
  # DEBUG BEGIN_STMT
  bCurrentIntStat_30 = pState_20->mbs[u32MbIdx_21(D)].isPolling;
  # DEBUG bCurrentIntStat => bCurrentIntStat_30
  # DEBUG BEGIN_STMT
  _8 = pState_20->callback;
  if (_8 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  _8 (u8Instance_17(D), 4, u32MbIdx_21(D), pState_20);

  <bb 8> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _9 ={v} pState_20->mbs[u32MbIdx_21(D)].state;
  if (_9 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 9> [local count: 536870913]:
  _10 = pState_20->mbs[u32MbIdx_21(D)].isPolling;
  if (_10 != 0)
    goto <bb 11>; [67.00%]
  else
    goto <bb 10>; [33.00%]

  <bb 10> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  pState_20->mbs[u32MbIdx_21(D)].isPolling = 1;
  # DEBUG BEGIN_STMT
  _11 = pState_20->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_19, u8Instance_17(D), u32MbIdx_21(D), 0, _11);
  goto <bb 14>; [100.00%]

  <bb 11> [local count: 896574424]:
  # DEBUG BEGIN_STMT
  if (bCurrentIntStat_30 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [local count: 448287211]:
  _12 = pState_20->mbs[u32MbIdx_21(D)].isPolling;
  if (_12 != 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [local count: 147934780]:
  # DEBUG BEGIN_STMT
  _13 = pState_20->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_19, u8Instance_17(D), u32MbIdx_21(D), 0, _13);

  <bb 14> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  mb ={v} {CLOBBER};
  return;

}


FlexCAN_IRQHandlerRxMB (uint8 instance, uint32 mb_idx)
{
  volatile uint32 * flexcan_mb;
  boolean bIsCriticalSectionNeeded;
  boolean bCurrentIntStat;
  struct Flexcan_Ip_MsgBuffType data;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  struct Flexcan_Ip_MsgBuffType * _2;
  _Bool _3;
  _Bool _4;
  struct Flexcan_Ip_MsgBuffType * _5;
  _Bool _6;
  struct Flexcan_Ip_MsgBuffType * _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  void (*<T620>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _15;
  <unnamed type> _16;
  _Bool _17;
  _Bool _18;
  _Bool _19;
  _Bool _20;
  long unsigned int vol.6_50;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_28(D);
  base_30 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_30
  # DEBUG BEGIN_STMT
  state_31 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bCurrentIntStat => 0
  # DEBUG BEGIN_STMT
  _2 = state_31->mbs[mb_idx_32(D)].pMBmessage;
  if (_2 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  # DEBUG BEGIN_STMT
  state_31->mbs[mb_idx_32(D)].pMBmessage = &data;

  <bb 4> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG bIsCriticalSectionNeeded => 0
  # DEBUG BEGIN_STMT
  _3 = state_31->mbs[mb_idx_32(D)].isPolling;
  if (_3 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  _4 = state_31->bIsLegacyFifoEn;
  if (_4 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG bIsCriticalSectionNeeded => 1
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" cpsid i");

  <bb 7> [local count: 1073741823]:
  # bIsCriticalSectionNeeded_21 = PHI <0(4), 0(5), 1(6)>
  # DEBUG bIsCriticalSectionNeeded => bIsCriticalSectionNeeded_21
  # DEBUG BEGIN_STMT
  FlexCAN_LockRxMsgBuff (base_30, mb_idx_32(D));
  # DEBUG BEGIN_STMT
  _5 = state_31->mbs[mb_idx_32(D)].pMBmessage;
  FlexCAN_GetMsgBuff (base_30, mb_idx_32(D), _5);
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_30, mb_idx_32(D));
  # DEBUG BEGIN_STMT
  _6 = state_31->bIsLegacyFifoEn;
  if (_6 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 536870911]:
  _7 = state_31->mbs[mb_idx_32(D)].pMBmessage;
  _8 = _7->cs;
  _9 = _8 >> 24;
  _10 = _9 & 15;
  if (_10 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  flexcan_mb_39 = FlexCAN_GetMsgBuffRegion (base_30, mb_idx_32(D));
  # DEBUG flexcan_mb => flexcan_mb_39
  # DEBUG BEGIN_STMT
  _11 ={v} *flexcan_mb_39;
  _12 = _11 & 4043309055;
  *flexcan_mb_39 ={v} _12;
  # DEBUG BEGIN_STMT
  _13 ={v} *flexcan_mb_39;
  _14 = _13 | 67108864;
  *flexcan_mb_39 ={v} _14;
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 896574422]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_30
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_50 ={v} MEM[(const struct FLEXCAN_Type *)base_30].TIMER;

  <bb 11> [local count: 1073741823]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  if (bIsCriticalSectionNeeded_21 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" cpsie i");

  <bb 13> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  state_31->mbs[mb_idx_32(D)].state ={v} 0;
  # DEBUG BEGIN_STMT
  bCurrentIntStat_44 = state_31->mbs[mb_idx_32(D)].isPolling;
  # DEBUG bCurrentIntStat => bCurrentIntStat_44
  # DEBUG BEGIN_STMT
  _15 = state_31->callback;
  if (_15 != 0B)
    goto <bb 14>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 14> [local count: 751619277]:
  # DEBUG BEGIN_STMT
  _15 (instance_28(D), 0, mb_idx_32(D), state_31);

  <bb 15> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _16 ={v} state_31->mbs[mb_idx_32(D)].state;
  if (_16 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 16> [local count: 536870911]:
  _17 = state_31->mbs[mb_idx_32(D)].isPolling;
  if (_17 != 0)
    goto <bb 18>; [67.00%]
  else
    goto <bb 17>; [33.00%]

  <bb 17> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  state_31->mbs[mb_idx_32(D)].isPolling = 1;
  # DEBUG BEGIN_STMT
  _18 = state_31->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_30, instance_28(D), mb_idx_32(D), 0, _18);
  goto <bb 21>; [100.00%]

  <bb 18> [local count: 896574422]:
  # DEBUG BEGIN_STMT
  if (bCurrentIntStat_44 != 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [local count: 448287211]:
  _19 = state_31->mbs[mb_idx_32(D)].isPolling;
  if (_19 != 0)
    goto <bb 20>; [33.00%]
  else
    goto <bb 21>; [67.00%]

  <bb 20> [local count: 147934780]:
  # DEBUG BEGIN_STMT
  _20 = state_31->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_30, instance_28(D), mb_idx_32(D), 0, _20);

  <bb 21> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  data ={v} {CLOBBER};
  return;

}


FlexCAN_StartRxMessageFifoData (uint8 instance, struct Flexcan_Ip_MsgBuffType * data)
{
  volatile boolean x;
  Flexcan_Ip_StatusType eResult;
  _Bool _1;
  _Bool x.0_7;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG base => 0B
  # DEBUG BEGIN_STMT
  # DEBUG state => 0B
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = instance_4(D) <= 2;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_7 ={v} x;
  if (x.0_7 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  eResult_3 = FlexCAN_StartRxMessageFifoData.part.0 (instance_4(D), data_6(D));
  # DEBUG eResult => eResult_3
  # DEBUG BEGIN_STMT
  return eResult_3;

}


FlexCAN_StartSendData (uint8 Flexcan_Ip_u8Instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data)
{
  volatile boolean x;
  volatile boolean x;
  volatile boolean x;
  volatile uint32 * pMbAddr;
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  struct Flexcan_Ip_MsbuffCodeStatusType cs;
  Flexcan_Ip_StatusType eResult;
  int _1;
  _Bool _2;
  _Bool _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _6;
  unsigned char _7;
  _Bool _8;
  _Bool _9;
  long unsigned int _10;
  _Bool _11;
  int _12;
  <unnamed type> _13;
  _Bool _14;
  _Bool _15;
  long unsigned int _16;
  <unnamed type> _17;
  _Bool _18;
  unsigned char _19;
  _Bool _20;
  _Bool x.0_50;
  _Bool x.0_51;
  _Bool x.0_52;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) Flexcan_Ip_u8Instance_24(D);
  state_26 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_26
  # DEBUG BEGIN_STMT
  base_27 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_27
  # DEBUG BEGIN_STMT
  # DEBUG pMbAddr => 0B
  # DEBUG BEGIN_STMT
  _2 = Flexcan_Ip_u8Instance_24(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_52 ={v} x;
  if (x.0_52 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 17> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 20> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = tx_info_28(D) != 0B;
  x ={v} _3;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_51 ={v} x;
  if (x.0_51 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 53687]:

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 19> [local count: 536870913]:
  goto <bb 5>; [100.00%]

  <bb 6> [local count: 53687]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _4 = tx_info_28(D)->data_length;
  _5 = (unsigned char) _4;
  _6 = (long unsigned int) mb_idx_29(D);
  _7 = FlexCAN_GetMbPayloadSize (base_27, _6);
  _8 = _5 <= _7;
  x ={v} _8;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_50 ={v} x;
  if (x.0_50 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 26844]:

  <bb 7> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 18> [local count: 268435456]:
  goto <bb 7>; [100.00%]

  <bb 8> [local count: 26844]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _9 = state_26->bIsLegacyFifoEn;
  _10 = state_26->u32MaxMbNum;
  _11 = FlexCAN_IsMbOutOfRange (base_27, mb_idx_29(D), _9, _10);
  if (_11 != 0)
    goto <bb 14>; [35.00%]
  else
    goto <bb 9>; [65.00%]

  <bb 9> [local count: 17448]:
  # DEBUG BEGIN_STMT
  _12 = (int) mb_idx_29(D);
  _13 ={v} state_26->mbs[_12].state;
  if (_13 != 0)
    goto <bb 14>; [52.23%]
  else
    goto <bb 10>; [47.77%]

  <bb 10> [local count: 8335]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_27, _6);
  # DEBUG BEGIN_STMT
  state_26->mbs[_12].state ={v} 2;
  # DEBUG BEGIN_STMT
  state_26->mbs[_12].time_stamp = 0;
  # DEBUG BEGIN_STMT
  _14 = tx_info_28(D)->is_polling;
  state_26->mbs[_12].isPolling = _14;
  # DEBUG BEGIN_STMT
  _15 = tx_info_28(D)->is_remote;
  state_26->mbs[_12].isRemote = _15;
  # DEBUG BEGIN_STMT
  _16 = tx_info_28(D)->data_length;
  cs.dataLen = _16;
  # DEBUG BEGIN_STMT
  _17 = tx_info_28(D)->msg_id_type;
  cs.msgIdType = _17;
  # DEBUG BEGIN_STMT
  _18 = tx_info_28(D)->fd_enable;
  cs.fd_enable = _18;
  # DEBUG BEGIN_STMT
  _19 = tx_info_28(D)->fd_padding;
  cs.fd_padding = _19;
  # DEBUG BEGIN_STMT
  _20 = tx_info_28(D)->enable_brs;
  cs.enable_brs = _20;
  # DEBUG BEGIN_STMT
  if (_15 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 4168]:
  # DEBUG BEGIN_STMT
  cs.code = 28;
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 4168]:
  # DEBUG BEGIN_STMT
  cs.code = 12;

  <bb 13> [local count: 8335]:
  # DEBUG BEGIN_STMT
  pMbAddr_45 = FlexCAN_GetMsgBuffRegion (base_27, _6);
  # DEBUG pMbAddr => pMbAddr_45
  # DEBUG BEGIN_STMT
  FlexCAN_SetTxMsgBuff (pMbAddr_45, &cs, msg_id_46(D), mb_data_47(D), 0);

  <bb 14> [local count: 26844]:
  # eResult_21 = PHI <4(8), 2(9), 0(13)>
  # DEBUG eResult => eResult_21
  # DEBUG BEGIN_STMT
  cs ={v} {CLOBBER};
  return eResult_21;

}


FlexCAN_StartRxMessageBufferData (uint8 instance, uint8 mb_idx, struct Flexcan_Ip_MsgBuffType * data, boolean isPolling)
{
  volatile boolean x;
  struct Flexcan_Ip_StateType * state;
  const struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  _Bool _3;
  long unsigned int _4;
  _Bool _5;
  int _6;
  <unnamed type> _7;
  _Bool x.0_21;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_10(D);
  base_12 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_12
  # DEBUG BEGIN_STMT
  state_13 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_13
  # DEBUG BEGIN_STMT
  _2 = instance_10(D) <= 2;
  x ={v} _2;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_21 ={v} x;
  if (x.0_21 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 9> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  # DEBUG x => NULL
  # DEBUG BEGIN_STMT
  _3 = state_13->bIsLegacyFifoEn;
  _4 = state_13->u32MaxMbNum;
  _5 = FlexCAN_IsMbOutOfRange (base_12, mb_idx_14(D), _3, _4);
  if (_5 != 0)
    goto <bb 7>; [35.00%]
  else
    goto <bb 5>; [65.00%]

  <bb 5> [local count: 69793]:
  # DEBUG BEGIN_STMT
  _6 = (int) mb_idx_14(D);
  _7 ={v} state_13->mbs[_6].state;
  if (_7 != 0)
    goto <bb 7>; [35.00%]
  else
    goto <bb 6>; [65.00%]

  <bb 6> [local count: 45366]:
  # DEBUG BEGIN_STMT
  state_13->mbs[_6].state ={v} 1;
  # DEBUG BEGIN_STMT
  state_13->mbs[_6].pMBmessage = data_17(D);
  # DEBUG BEGIN_STMT
  state_13->mbs[_6].isPolling = isPolling_19(D);

  <bb 7> [local count: 107374]:
  # result_8 = PHI <4(4), 2(5), 0(6)>
  # DEBUG result => result_8
  # DEBUG BEGIN_STMT
  return result_8;

}


FlexCAN_ProccessLegacyRxFIFO (uint8 u8Instance, uint32 u32TimeoutMs)
{
  uint32 u32intType;
  uint32 mS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_StateType * pState;
  Flexcan_Ip_StatusType eResult;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  <unnamed type> _4;
  unsigned char _5;
  <unnamed type> _6;
  <unnamed type> _7;
  _Bool _8;
  _Bool _9;
  _Bool _10;
  <unnamed type> _11;
  long unsigned int _37;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_23(D);
  pState_25 = Flexcan_Ip_apxState[_1];
  # DEBUG pState => pState_25
  # DEBUG BEGIN_STMT
  pBase_26 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_26
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _2 = u32TimeoutMs_28(D) * 1000;
  mS2Ticks_30 = OsIf_MicrosToTicks (_2, 0);
  # DEBUG mS2Ticks => mS2Ticks_30
  # DEBUG BEGIN_STMT
  # DEBUG u32intType => 0
  # DEBUG BEGIN_STMT
  _3 = OsIf_GetCounter (0);
  timeStart = _3;
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 3> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _4 = pState_25->transferType;
  if (_4 == 1)
    goto <bb 17>; [16.00%]
  else
    goto <bb 8>; [84.00%]

  <bb 17> [local count: 162349764]:
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 487049291]:
  # DEBUG BEGIN_STMT
  _5 = FlexCAN_GetBuffStatusFlag (pBase_26, u32intType_15);
  if (_5 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 160726266]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxFIFO (u8Instance_23(D), u32intType_15);

  <bb 6> [local count: 487049291]:
  # DEBUG BEGIN_STMT
  u32intType_35 = u32intType_15 + 4294967295;
  # DEBUG u32intType => u32intType_35

  <bb 7> [local count: 649399056]:
  # u32intType_15 = PHI <u32intType_35(6), 7(17)>
  # DEBUG u32intType => u32intType_15
  # DEBUG BEGIN_STMT
  if (u32intType_15 > 4)
    goto <bb 4>; [75.00%]
  else
    goto <bb 8>; [25.00%]

  <bb 8> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _37 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_38 = timeElapsed_14 + _37;
  # DEBUG timeElapsed => timeElapsed_38
  # DEBUG BEGIN_STMT
  if (mS2Ticks_30 <= timeElapsed_38)
    goto <bb 10>; [5.50%]
  else
    goto <bb 18>; [94.50%]

  <bb 18> [local count: 958878293]:

  <bb 9> [local count: 1073741824]:
  # timeElapsed_14 = PHI <0(2), timeElapsed_38(18)>
  # DEBUG timeElapsed => timeElapsed_14
  # DEBUG BEGIN_STMT
  _6 ={v} pState_25->mbs[0].state;
  if (_6 == 1)
    goto <bb 3>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 10> [local count: 114863532]:
  # eResult_12 = PHI <3(8), 0(9)>
  # DEBUG eResult => eResult_12
  # DEBUG BEGIN_STMT
  if (eResult_12 == 3)
    goto <bb 11>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 11> [local count: 39053601]:
  _7 = pState_25->transferType;
  if (_7 != 1)
    goto <bb 12>; [48.88%]
  else
    goto <bb 13>; [51.12%]

  <bb 12> [local count: 19089400]:
  # DEBUG BEGIN_STMT
  _8 = pState_25->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_26, u8Instance_23(D), 5, 0, _8);
  # DEBUG BEGIN_STMT
  _9 = pState_25->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_26, u8Instance_23(D), 6, 0, _9);
  # DEBUG BEGIN_STMT
  _10 = pState_25->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_26, u8Instance_23(D), 7, 0, _10);

  <bb 13> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _11 ={v} pState_25->mbs[0].state;
  switch (_11) <default: <L18> [33.33%], case 0: <L22> [33.33%], case 1: <L16> [33.33%]>

  <bb 14> [local count: 38284015]:
<L16>:
  # DEBUG BEGIN_STMT
  pState_25->mbs[0].state ={v} 0;
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 38284015]:
<L18>:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 1
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 114852045]:
  # eResult_13 = PHI <eResult_12(14), 0(13), 1(15)>
<L22>:
  # DEBUG eResult => eResult_13
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return eResult_13;

}


FlexCAN_InitController (struct FLEXCAN_Type * pBase, const struct Flexcan_Ip_ConfigType * Flexcan_Ip_pData)
{
  Flexcan_Ip_StatusType eResult;
  _Bool _1;
  long unsigned int _2;
  long unsigned int _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  long unsigned int _7;
  long unsigned int _31;
  signed int _32;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_14(D)
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _31 ={v} MEM[(const struct FLEXCAN_Type *)pBase_14(D)].MCR;
  _32 = (signed int) _31;
  # DEBUG pBase => NULL
  if (_32 >= 0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 4> [local count: 633507677]:
  # DEBUG BEGIN_STMT
  eResult_16 = FlexCAN_EnterFreezeMode (pBase_14(D));
  # DEBUG eResult => eResult_16
  # DEBUG BEGIN_STMT
  if (eResult_16 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 209057533]:
  # DEBUG BEGIN_STMT
  eResult_18 = FlexCAN_Disable (pBase_14(D));
  # DEBUG eResult => eResult_18

  <bb 6> [local count: 633507677]:
  # eResult_8 = PHI <eResult_18(5), eResult_16(4)>
  # DEBUG eResult => eResult_8
  # DEBUG BEGIN_STMT
  if (eResult_8 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 7> [local count: 756987987]:
  # DEBUG eResult => NULL
  # DEBUG BEGIN_STMT
  _1 = Flexcan_Ip_pData_19(D)->is_pe_clock;
  FlexCAN_SetClkSrc (pBase_14(D), _1);
  # DEBUG BEGIN_STMT
  _2 ={v} pBase_14(D)->MCR;
  _3 = _2 & 2147483647;
  pBase_14(D)->MCR ={v} _3;
  # DEBUG BEGIN_STMT
  eResult_23 = FlexCAN_Init (pBase_14(D));
  # DEBUG eResult => eResult_23
  # DEBUG BEGIN_STMT
  if (eResult_23 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 378493993]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnterFreezeMode (pBase_14(D));
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (pBase_14(D));
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 378493993]:
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_IsFDAvailable (pBase_14(D));
  if (_4 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 10> [local count: 124903018]:
  # DEBUG BEGIN_STMT
  _5 = Flexcan_Ip_pData_19(D)->fd_enable;
  _6 = Flexcan_Ip_pData_19(D)->bitRateSwitch;
  FlexCAN_SetFDEnabled (pBase_14(D), _5, _6);

  <bb 11> [local count: 378493993]:
  # DEBUG BEGIN_STMT
  _7 = Flexcan_Ip_pData_19(D)->ctrlOptions;
  FlexCAN_ConfigCtrlOptions (pBase_14(D), _7);
  # DEBUG BEGIN_STMT
  eResult_28 = FlexCAN_InitCtroll (pBase_14(D), Flexcan_Ip_pData_19(D));
  # DEBUG eResult => eResult_28

  <bb 12> [local count: 1073741824]:
  # eResult_9 = PHI <eResult_8(6), eResult_23(8), eResult_28(11)>
  # DEBUG eResult => eResult_9
  # DEBUG BEGIN_STMT
  return eResult_9;

}


FlexCAN_InitCtroll (struct FLEXCAN_Type * pBase, const struct Flexcan_Ip_ConfigType * Flexcan_Ip_pData)
{
  Flexcan_Ip_StatusType eResult;
  <unnamed type> _1;
  const struct Flexcan_Ip_PayloadSizeType * _2;
  long unsigned int _3;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = Flexcan_Ip_pData_8(D)->flexcanMode;
  if (_1 != 2)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_9(D)
  # DEBUG enable => 0
  # DEBUG INLINE_ENTRY FlexCAN_SetSelfReception
  # DEBUG BEGIN_STMT
  _19 ={v} pBase_9(D)->MCR;
  _20 = _19 & 4294836223;
  _21 = _20 | 131072;
  pBase_9(D)->MCR ={v} _21;

  <bb 4> [local count: 1073741824]:
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  eResult_11 = FlexCAN_InitRxFifo (pBase_9(D), Flexcan_Ip_pData_8(D));
  # DEBUG eResult => eResult_11
  # DEBUG BEGIN_STMT
  if (eResult_11 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnterFreezeMode (pBase_9(D));
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (pBase_9(D));
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &Flexcan_Ip_pData_8(D)->payload;
  FlexCAN_SetPayloadSize (pBase_9(D), _2);
  # DEBUG BEGIN_STMT
  _3 = Flexcan_Ip_pData_8(D)->max_num_mb;
  eResult_14 = FlexCAN_SetMaxMsgBuffNum (pBase_9(D), _3);
  # DEBUG eResult => eResult_14
  # DEBUG BEGIN_STMT
  if (eResult_14 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnterFreezeMode (pBase_9(D));
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (pBase_9(D));

  <bb 8> [local count: 1073741824]:
  # eResult_4 = PHI <eResult_11(5), eResult_14(6), eResult_14(7)>
  # DEBUG eResult => eResult_4
  # DEBUG BEGIN_STMT
  return eResult_4;

}


FlexCAN_InitRxFifo (struct FLEXCAN_Type * pBase, const struct Flexcan_Ip_ConfigType * Flexcan_Ip_pData)
{
  Flexcan_Ip_StatusType eResult;
  _Bool _1;
  <unnamed type> _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = Flexcan_Ip_pData_6(D)->is_rx_fifo_needed;
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  _2 = Flexcan_Ip_pData_6(D)->num_id_filters;
  eResult_9 = FlexCAN_EnableRxFifo (pBase_7(D), _2);
  # DEBUG eResult => eResult_9

  <bb 4> [local count: 1073741824]:
  # eResult_3 = PHI <0(2), eResult_9(3)>
  # DEBUG eResult => eResult_3
  # DEBUG BEGIN_STMT
  return eResult_3;

}


FlexCAN_SetRegDefaultVal (struct FLEXCAN_Type * base)
{
  _Bool _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = FlexCAN_IsFDAvailable (base_4(D));
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  base_4(D)->FDCBT ={v} 0;
  # DEBUG BEGIN_STMT
  base_4(D)->FDCTRL ={v} 2147500288;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  base_4(D)->IFLAG1 ={v} 4294967295;
  # DEBUG BEGIN_STMT
  base_4(D)->IMASK1 ={v} 0;
  # DEBUG BEGIN_STMT
  base_4(D)->CBT ={v} 0;
  # DEBUG BEGIN_STMT
  base_4(D)->CTRL2 ={v} 1048576;
  # DEBUG BEGIN_STMT
  base_4(D)->ESR1 ={v} 241670;
  # DEBUG BEGIN_STMT
  base_4(D)->ECR ={v} 0;
  # DEBUG BEGIN_STMT
  base_4(D)->TIMER ={v} 0;
  # DEBUG BEGIN_STMT
  base_4(D)->CTRL1 ={v} 0;
  # DEBUG BEGIN_STMT
  base_4(D)->MCR ={v} 3633315855;
  return;

}


FlexCAN_SetRxMaskType (struct FLEXCAN_Type * base, Flexcan_Ip_RxMaskType type)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (type_6(D) == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_8(D)->MCR;
  _2 = _1 & 4294901759;
  base_8(D)->MCR ={v} _2;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 ={v} base_8(D)->MCR;
  _4 = _3 | 65536;
  base_8(D)->MCR ={v} _4;

  <bb 5> [local count: 1073741824]:
  return;

}


FlexCAN_SetTxArbitrationStartDelay (struct FLEXCAN_Type * base, uint8 tasd)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_8(D)->CTRL2;
  _2 = _1 & 4278714367;
  _3 = (long unsigned int) tasd_9(D);
  _4 = _3 << 19;
  _5 = _4 & 16252928;
  _6 = _2 | _5;
  base_8(D)->CTRL2 ={v} _6;
  return;

}


FlexCAN_GetMsgBuffIntStatusFlag (const struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint8 flag;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG flag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_3(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870912]:
  flag_6 = FlexCAN_GetMsgBuffIntStatusFlag.part.0 (base_5(D), msgBuffIdx_3(D));

  <bb 4> [local count: 1073741824]:
  # flag_1 = PHI <0(2), flag_6(3)>
  # DEBUG flag => flag_1
  # DEBUG BEGIN_STMT
  return flag_1;

}


FlexCAN_SetClkSrc (struct FLEXCAN_Type * base, boolean enable)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.1_4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_6(D)->CTRL1;
  _2 = _1 & 4294959103;
  if (enable_7(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.1_4 = PHI <8192(2), 0(3)>
  _3 = _2 | iftmp.1_4;
  base_6(D)->CTRL1 ={v} _3;
  return;

}


RxFifoOcuppiedLastMsgBuff (uint32 x)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = x_4(D) + 1;
  _2 = _1 * 8;
  _3 = _2 >> 2;
  _5 = _3 + 5;
  return _5;

}


FlexCAN_EnableExtCbt (struct FLEXCAN_Type * base, boolean enableCBT)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.5_4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_6(D)->CBT;
  _2 = _1 & 2147483647;
  if (enableCBT_7(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.5_4 = PHI <2147483648(2), 0(3)>
  _3 = _2 | iftmp.5_4;
  base_6(D)->CBT ={v} _3;
  return;

}


FlexCAN_GetFDTimeSegments (const struct FLEXCAN_Type * base, struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_16(D)->FDCBT;
  _2 = _1 >> 20;
  _3 = _2 & 1023;
  timeSeg_17(D)->preDivider = _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_16(D)->FDCBT;
  _5 = _4 >> 10;
  _6 = _5 & 31;
  timeSeg_17(D)->propSeg = _6;
  # DEBUG BEGIN_STMT
  _7 ={v} base_16(D)->FDCBT;
  _8 = _7 >> 5;
  _9 = _8 & 7;
  timeSeg_17(D)->phaseSeg1 = _9;
  # DEBUG BEGIN_STMT
  _10 ={v} base_16(D)->FDCBT;
  _11 = _10 & 7;
  timeSeg_17(D)->phaseSeg2 = _11;
  # DEBUG BEGIN_STMT
  _12 ={v} base_16(D)->FDCBT;
  _13 = _12 >> 16;
  _14 = _13 & 7;
  timeSeg_17(D)->rJumpwidth = _14;
  return;

}


FlexCAN_GetTimeSegments (const struct FLEXCAN_Type * base, struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_15(D)->CTRL1;
  _2 = _1 >> 24;
  timeSeg_16(D)->preDivider = _2;
  # DEBUG BEGIN_STMT
  _3 ={v} base_15(D)->CTRL1;
  _4 = _3 & 7;
  timeSeg_16(D)->propSeg = _4;
  # DEBUG BEGIN_STMT
  _5 ={v} base_15(D)->CTRL1;
  _6 = _5 >> 19;
  _7 = _6 & 7;
  timeSeg_16(D)->phaseSeg1 = _7;
  # DEBUG BEGIN_STMT
  _8 ={v} base_15(D)->CTRL1;
  _9 = _8 >> 16;
  _10 = _9 & 7;
  timeSeg_16(D)->phaseSeg2 = _10;
  # DEBUG BEGIN_STMT
  _11 ={v} base_15(D)->CTRL1;
  _12 = _11 >> 22;
  _13 = _12 & 3;
  timeSeg_16(D)->rJumpwidth = _13;
  return;

}


FlexCAN_GetExtendedTimeSegments (const struct FLEXCAN_Type * base, struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_16(D)->CBT;
  _2 = _1 >> 21;
  _3 = _2 & 1023;
  timeSeg_17(D)->preDivider = _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_16(D)->CBT;
  _5 = _4 >> 10;
  _6 = _5 & 63;
  timeSeg_17(D)->propSeg = _6;
  # DEBUG BEGIN_STMT
  _7 ={v} base_16(D)->CBT;
  _8 = _7 >> 5;
  _9 = _8 & 31;
  timeSeg_17(D)->phaseSeg1 = _9;
  # DEBUG BEGIN_STMT
  _10 ={v} base_16(D)->CBT;
  _11 = _10 & 31;
  timeSeg_17(D)->phaseSeg2 = _11;
  # DEBUG BEGIN_STMT
  _12 ={v} base_16(D)->CBT;
  _13 = _12 >> 16;
  _14 = _13 & 31;
  timeSeg_17(D)->rJumpwidth = _14;
  return;

}


FlexCAN_SetExtendedTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  volatile boolean x;
  _Bool _1;
  _Bool x.0_6;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_2(D) != 0B;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_6 ={v} x;
  if (x.0_6 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  FlexCAN_SetExtendedTimeSegments.part.0 (base_5(D), timeSeg_2(D));
  return;

}


FlexCAN_SetTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  volatile boolean x;
  _Bool _1;
  _Bool x.0_6;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_2(D) != 0B;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_6 ={v} x;
  if (x.0_6 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  FlexCAN_SetTimeSegments.part.0 (base_5(D), timeSeg_2(D));
  return;

}


FlexCAN_SetFDTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  volatile boolean x;
  _Bool _1;
  _Bool x.0_6;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_2(D) != 0B;
  x ={v} _1;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_6 ={v} x;
  if (x.0_6 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  FlexCAN_SetFDTimeSegments.part.0 (base_5(D), timeSeg_2(D));
  return;

}


FlexCAN_GetBuffStatusImask (const struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint32 u32Imask;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint8 _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG u32Imask => 0
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_6(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_8(D)->IMASK1;
  _2 = msgBuffIdx_6(D);
  _3 = 1 << _2;
  _4 = _1 & _3;
  u32Imask_9 = _4 >> _2;
  # DEBUG u32Imask => u32Imask_9

  <bb 4> [local count: 1073741824]:
  # u32Imask_5 = PHI <0(2), u32Imask_9(3)>
  # DEBUG u32Imask => u32Imask_5
  # DEBUG BEGIN_STMT
  _10 = (uint8) u32Imask_5;
  return _10;

}


FlexCAN_GetBuffStatusFlag (const struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint32 flag;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint8 _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG flag => 0
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_6(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_8(D)->IFLAG1;
  _2 = msgBuffIdx_6(D);
  _3 = 1 << _2;
  _4 = _1 & _3;
  flag_9 = _4 >> _2;
  # DEBUG flag => flag_9

  <bb 4> [local count: 1073741824]:
  # flag_5 = PHI <0(2), flag_9(3)>
  # DEBUG flag => flag_5
  # DEBUG BEGIN_STMT
  _10 = (uint8) flag_5;
  return _10;

}


FlexCAN_ClearMsgBuffIntStatusFlag (struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint32 flag;
  long unsigned int _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = msgBuffIdx_3(D) & 31;
  flag_4 = 1 << _1;
  # DEBUG flag => flag_4
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_3(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  base_6(D)->IFLAG1 ={v} flag_4;

  <bb 4> [local count: 1073741824]:
  return;

}


FlexCAN_SetListenOnlyMode (struct FLEXCAN_Type * base, boolean enableListenOnly)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.7_4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_6(D)->CTRL1;
  _2 = _1 & 4294967287;
  if (enableListenOnly_7(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.7_4 = PHI <8(2), 0(3)>
  _3 = _2 | iftmp.7_4;
  base_6(D)->CTRL1 ={v} _3;
  return;

}


FlexCAN_SetFDEnabled (struct FLEXCAN_Type * base, boolean enableFD, boolean enableBRS)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int iftmp.2_9;
  long unsigned int iftmp.3_10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_12(D)->MCR;
  _2 = _1 & 4294965247;
  if (enableFD_13(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.2_9 = PHI <2048(2), 0(3)>
  _3 = _2 | iftmp.2_9;
  base_12(D)->MCR ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_12(D)->FDCTRL;
  _5 = _4 & 2147483647;
  if (enableBRS_15(D) != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 536870913]:

  <bb 6> [local count: 1073741824]:
  # iftmp.3_10 = PHI <2147483648(4), 0(5)>
  _6 = _5 | iftmp.3_10;
  base_12(D)->FDCTRL ={v} _6;
  # DEBUG BEGIN_STMT
  _7 ={v} base_12(D)->FDCTRL;
  _8 = _7 & 4294926591;
  base_12(D)->FDCTRL ={v} _8;
  return;

}


FlexCAN_SetTDCOffset (struct FLEXCAN_Type * base, boolean enable, uint8 offset)
{
  uint32 tmp;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  tmp_7 ={v} base_6(D)->FDCTRL;
  # DEBUG tmp => tmp_7
  # DEBUG BEGIN_STMT
  tmp_8 = tmp_7 & 4294926591;
  # DEBUG tmp => tmp_8
  # DEBUG BEGIN_STMT
  if (enable_9(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  tmp_10 = tmp_8 | 32768;
  # DEBUG tmp => tmp_10
  # DEBUG BEGIN_STMT
  _1 = (long unsigned int) offset_11(D);
  _2 = _1 << 8;
  _3 = _2 & 7936;
  tmp_12 = _3 | tmp_10;
  # DEBUG tmp => tmp_12

  <bb 4> [local count: 1073741824]:
  # tmp_4 = PHI <tmp_8(2), tmp_12(3)>
  # DEBUG tmp => tmp_4
  # DEBUG BEGIN_STMT
  base_6(D)->FDCTRL ={v} tmp_4;
  return;

}


