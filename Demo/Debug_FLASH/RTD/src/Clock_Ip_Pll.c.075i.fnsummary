
Analyzing function: CompleteSpll.part.0/19
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 9 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 9 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 3 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }

Analyzing function body size: CompleteSpll.part.0

IPA function summary for CompleteSpll.part.0/19 inlinable
  global time:     228.359649
  self size:       26
  global size:     0
  min size:       0
  self stack:      12
  global stack:    12
    size:10.000000, time:75.755550
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    ClockStartTimeout/13 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    ClockTimeoutExpired/14 function body not available
      loop depth: 1 freq:9.35 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    ReportClockErrors/15 function body not available
      loop depth: 0 freq:0.48 size: 3 time: 12
       op0 is compile time invariant


Analyzing function: EnableSpll_TrustedCall.isra.0/18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 5 2 3 4
;; 5 succs { 2 }
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: EnableSpll_TrustedCall.isra.0

IPA function summary for EnableSpll_TrustedCall.isra.0/18 inlinable
  global time:     5.020000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:3.000000, time:1.020000,  executed if:(op0 == 1)
  calls:


Analyzing function: DisableSpll_TrustedCall.isra.0/17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 3 2
;; 3 succs { 2 }
;; 2 succs { 1 }

Analyzing function body size: DisableSpll_TrustedCall.isra.0

IPA function summary for DisableSpll_TrustedCall.isra.0/17 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: ResetSpll_TrustedCall.isra.0/16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 3 2
;; 3 succs { 2 }
;; 2 succs { 1 }

Analyzing function body size: ResetSpll_TrustedCall.isra.0

IPA function summary for ResetSpll_TrustedCall.isra.0/16 inlinable
  global time:     14.000000
  self size:       15
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:12.000000, time:12.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: EnableSpll/12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: EnableSpll

IPA function summary for EnableSpll/12 inlinable
  global time:     14.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    EnableSpll_TrustedCall.isra.0/18 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0


Analyzing function: DisableSpll/10
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: DisableSpll

IPA function summary for DisableSpll/10 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableSpll_TrustedCall.isra.0/17 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 4 stack: 0


Analyzing function: CompleteSpll/8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: CompleteSpll

IPA function summary for CompleteSpll/8 inlinable
  global time:     9.960000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CompleteSpll.part.0/19 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:13 stack:12


Analyzing function: SetSpll/7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: SetSpll

IPA function summary for SetSpll/7 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    SetSpll_TrustedCall/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11


Analyzing function: SetSpll_TrustedCall/6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 7 4 5 6 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }

Analyzing function body size: SetSpll_TrustedCall

IPA function summary for SetSpll_TrustedCall/6 inlinable
  global time:     11.035000
  self size:       30
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:3.000000, time:1.020000,  executed if:(op0[ref offset: 32] == 1)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 104] changed) && (op0[ref offset: 32] == 1) && (not inlined)
    size:3.500000, time:1.190000,  executed if:(op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 104] changed) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 128] changed) && (op0[ref offset: 32] == 1) && (not inlined)
    size:3.500000, time:1.190000,  executed if:(op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 128] changed) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.340000,  executed if:(op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 104] changed || op0[ref offset: 128] changed) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 216] changed) && (op0[ref offset: 32] == 1) && (not inlined)
    size:8.500000, time:1.530000,  executed if:(op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 216] changed) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op0[ref offset: 216] == 2) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op0[ref offset: 216] == 1) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op0[ref offset: 216] == 0) && (op0[ref offset: 32] == 1)
  calls:


Analyzing function: ResetSpll/5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: ResetSpll

IPA function summary for ResetSpll/5 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    ResetSpll_TrustedCall.isra.0/16 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 7 stack: 0


Analyzing function: Callback_PllEmptyDisable/3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Callback_PllEmptyDisable

IPA function summary for Callback_PllEmptyDisable/3 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Callback_PllEmptyComplete/2
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Callback_PllEmptyComplete

IPA function summary for Callback_PllEmptyComplete/2 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Callback_PllEmpty/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Callback_PllEmpty

IPA function summary for Callback_PllEmpty/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

CompleteSpll.part.0/19 (CompleteSpll.part.0) @06bd92a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CompleteSpll/8 (114863531 (estimated locally),0.33 per call) 
  Calls: ClockStartTimeout/13 (114863532 (estimated locally),1.00 per call) ClockTimeoutExpired/14 (1073741824 (estimated locally),9.35 per call) ReportClockErrors/15 (54870309 (estimated locally),0.48 per call) 
EnableSpll_TrustedCall.isra.0/18 (EnableSpll_TrustedCall.isra.0) @06b29ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: EnableSpll/12 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
DisableSpll_TrustedCall.isra.0/17 (DisableSpll_TrustedCall.isra.0) @06b29a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: DisableSpll/10 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ResetSpll_TrustedCall.isra.0/16 (ResetSpll_TrustedCall.isra.0) @06b29540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ResetSpll/5 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ReportClockErrors/15 (ReportClockErrors) @05fd62a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CompleteSpll.part.0/19 (54870309 (estimated locally),0.48 per call) 
  Calls: 
ClockTimeoutExpired/14 (ClockTimeoutExpired) @05fd61c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CompleteSpll.part.0/19 (1073741824 (estimated locally),9.35 per call) 
  Calls: 
ClockStartTimeout/13 (ClockStartTimeout) @05fd60e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CompleteSpll.part.0/19 (114863532 (estimated locally),1.00 per call) 
  Calls: 
EnableSpll/12 (EnableSpll) @05fcda80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EnableSpll_TrustedCall.isra.0/18 (1073741824 (estimated locally),1.00 per call) 
DisableSpll/10 (DisableSpll) @05fcd460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DisableSpll_TrustedCall.isra.0/17 (1073741824 (estimated locally),1.00 per call) 
CompleteSpll/8 (CompleteSpll) @05eccd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:348071309 (estimated locally) body optimize_size
  Called by: 
  Calls: CompleteSpll.part.0/19 (114863531 (estimated locally),0.33 per call) 
SetSpll/7 (SetSpll) @05eccee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SetSpll_TrustedCall/6 (1073741824 (estimated locally),1.00 per call) 
SetSpll_TrustedCall/6 (SetSpll_TrustedCall) @05eccc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: SetSpll/7 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ResetSpll/5 (ResetSpll) @05ecc460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ResetSpll_TrustedCall.isra.0/16 (1073741824 (estimated locally),1.00 per call) 
Callback_PllEmptyDisable/3 (Callback_PllEmptyDisable) @05ec6d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Callback_PllEmptyComplete/2 (Callback_PllEmptyComplete) @05ec6ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Callback_PllEmpty/1 (Callback_PllEmpty) @05ec6c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/0 (addr)pllCallbacks/0 (addr)pllCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
pllCallbacks/0 (pllCallbacks) @05ec8900
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Callback_PllEmpty/1 (addr)Callback_PllEmpty/1 (addr)Callback_PllEmptyComplete/2 (addr)Callback_PllEmpty/1 (addr)Callback_PllEmptyDisable/3 (addr)ResetSpll/5 (addr)SetSpll/7 (addr)CompleteSpll/8 (addr)EnableSpll/12 (addr)DisableSpll/10 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
CompleteSpll.part.0 (Clock_Ip_NameType pllName)
{
  clock_pll_status_t pllStatus;
  boolean TimeoutOccurred;
  uint32 StartTime;
  uint32 ElapsedTime;
  uint32 TimeoutTicks;
  uint32 SPLLStatus;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int TimeoutTicks.0_4;

  <bb 9> [local count: 114863532]:

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  ClockStartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 >> 24;
  SPLLStatus_3 = _2 & 1;
  # DEBUG SPLLStatus => SPLLStatus_3
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_4 = TimeoutTicks;
  TimeoutOccurred_5 = ClockTimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_4);
  # DEBUG TimeoutOccurred => TimeoutOccurred_5
  # DEBUG BEGIN_STMT
  if (SPLLStatus_3 == 0)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 4> [local count: 1014686025]:
  if (TimeoutOccurred_5 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 5> [local count: 958878293]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_6 = PHI <TimeoutOccurred_5(3), TimeoutOccurred_5(4)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_6 != 0)
    goto <bb 7>; [47.77%]
  else
    goto <bb 8>; [52.23%]

  <bb 7> [local count: 54870309]:
  # DEBUG BEGIN_STMT
  ReportClockErrors (1, pllName_7(D));

  <bb 8> [local count: 114863532]:
  # pllStatus_8 = PHI <2(6), 1(7)>
  # DEBUG pllStatus => pllStatus_8
  # DEBUG BEGIN_STMT
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return pllStatus_8;

}


EnableSpll_TrustedCall.isra.0 (const uint16 ISRA.11)
{
  short unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 5> [local count: 1073741824]:
  # DEBUG config s=> config

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _2 = ISRA.11_8(D);
  if (_2 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _4 = _3 | 1;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _4;

  <bb 4> [local count: 1073741824]:
  return;

}


DisableSpll_TrustedCall.isra.0 ()
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 3> [local count: 1073741824]:
  # DEBUG PllName s=> PllName

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 & 4286578687;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _2;
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _4 = _3 & 4294967294;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _4;
  return;

}


ResetSpll_TrustedCall.isra.0 ()
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 3> [local count: 1073741824]:
  # DEBUG config s=> config

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 & 4286578687;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _2;
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _4 = _3 & 4294967294;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _6 = _5 & 4294965503;
  MEM[(struct SCG_Type *)1074151424B].SPLLCFG ={v} _6;
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _8 = _7 & 4292935679;
  MEM[(struct SCG_Type *)1074151424B].SPLLCFG ={v} _8;
  return;

}


EnableSpll (const struct Clock_Ip_PllConfigType * config)
{
  short unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(short unsigned int *)config_2(D) + 4B];
  # DEBUG D#3 => config_2(D)
  EnableSpll_TrustedCall.isra.0 (_4);
  return;

}


DisableSpll (Clock_Ip_NameType PllName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG D#2 => PllName_2(D)
  DisableSpll_TrustedCall.isra.0 ();
  return;

}


CompleteSpll (Clock_Ip_NameType pllName)
{
  clock_pll_status_t pllStatus;
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG pllStatus => 1
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 114863531]:
  pllStatus_4 = CompleteSpll.part.0 (pllName_8(D));

  <bb 4> [local count: 348071309]:
  # pllStatus_5 = PHI <pllStatus_4(3), 0(2)>
  # DEBUG pllStatus => pllStatus_5
  # DEBUG BEGIN_STMT
  return pllStatus_5;

}


SetSpll (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SetSpll_TrustedCall (config_2(D));
  return;

}


SetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * config)
{
  short unsigned int _1;
  long unsigned int _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  unsigned char _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = config_18(D)->enable;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _2 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _3 = config_18(D)->predivider;
  _4 = (long unsigned int) _3;
  _5 = _4 + 4294967295;
  _6 = _5 << 8;
  _7 = _6 & 1792;
  _8 = config_18(D)->mulFactorDiv;
  _9 = (long unsigned int) _8;
  _10 = _9 + 4294967280;
  _11 = _10 << 16;
  _12 = _11 & 2031616;
  _13 = _7 | _12;
  _14 = _2 | _13;
  MEM[(struct SCG_Type *)1074151424B].SPLLCFG ={v} _14;
  # DEBUG BEGIN_STMT
  _15 = config_18(D)->monitor;
  switch (_15) <default: <L7> [25.00%], case 0: <L1> [25.00%], case 1: <L2> [25.00%], case 2: <L3> [25.00%]>

  <bb 4> [local count: 91268055]:
<L1>:
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} 0;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 91268055]:
<L2>:
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} 65536;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 91268055]:
<L3>:
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} 196608;
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 1073741824]:
<L7>:
  return;

}


ResetSpll (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => config_2(D)
  ResetSpll_TrustedCall.isra.0 ();
  return;

}


Callback_PllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


Callback_PllEmptyComplete (Clock_Ip_NameType PllName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 0;

}


Callback_PllEmpty (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


