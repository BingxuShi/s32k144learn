IPA function summary for Callback_DividerTriggerEmpty/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 2.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Callback_DividerTriggerEmpty/1.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 2.000000 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for Callback_DividerTriggerEmpty/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Callback_DividerTriggerEmpty/1 (Callback_DividerTriggerEmpty) @05ea6620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerTriggerCallbacks/0 (addr)dividerTriggerCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
dividerTriggerCallbacks/0 (dividerTriggerCallbacks) @05ea82d0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Callback_DividerTriggerEmpty/1 (addr)Callback_DividerTriggerEmpty/1 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function Callback_DividerTriggerEmpty (Callback_DividerTriggerEmpty, funcdef_no=0, decl_uid=6045, cgraph_uid=1, symbol_order=1)

Callback_DividerTriggerEmpty (const struct Clock_Ip_DividerTriggerConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


