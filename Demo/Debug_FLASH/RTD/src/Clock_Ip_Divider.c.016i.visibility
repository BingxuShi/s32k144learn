
Marking local functions: SetSimTraceDivMul_TrustedCall SetPccPcdDivFrac_TrustedCall SetSimClkoutDiv_TrustedCall SetScgHsrunDivslow_TrustedCall SetScgHsrunDivbus_TrustedCall SetScgHsrunDivcore_TrustedCall SetScgVlprDivslow_TrustedCall SetScgVlprDivbus_TrustedCall SetScgVlprDivcore_TrustedCall SetScgRunDivslow_TrustedCall SetScgRunDivbus_TrustedCall SetScgRunDivcore_TrustedCall SetScgAsyncDiv2_TrustedCall SetScgAsyncDiv1_TrustedCall


Marking externally visible functions:


Marking externally visible variables: dividerCallbacks


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

scgPeriphAsyncDivs/32 (scgPeriphAsyncDivs) @078045e8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetScgAsyncDiv2_TrustedCall/4 (read)SetScgAsyncDiv2_TrustedCall/4 (read)SetScgAsyncDiv1_TrustedCall/2 (read)SetScgAsyncDiv1_TrustedCall/2 (read)
  Availability: not_available
  Varpool flags: read-only
dividerValue_hardwareValue/31 (dividerValue_hardwareValue) @078045a0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetScgAsyncDiv2_TrustedCall/4 (read)SetScgAsyncDiv1_TrustedCall/2 (read)
  Availability: not_available
  Varpool flags: read-only
clockFeatures/30 (clockFeatures) @06caf990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetPccPcdDivFrac_TrustedCall/26 (read)SetPccPcdDivFrac_TrustedCall/26 (read)SetScgAsyncDiv2_TrustedCall/4 (read)SetScgAsyncDiv1_TrustedCall/2 (read)
  Availability: not_available
  Varpool flags: read-only
SetSimTraceDivMul/29 (SetSimTraceDivMul) @06cb6380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetSimTraceDivMul_TrustedCall/28 
SetSimTraceDivMul_TrustedCall/28 (SetSimTraceDivMul_TrustedCall) @06cb60e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetSimTraceDivMul/29 
  Calls: 
SetPccPcdDivFrac/27 (SetPccPcdDivFrac) @06cb08c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetPccPcdDivFrac_TrustedCall/26 
SetPccPcdDivFrac_TrustedCall/26 (SetPccPcdDivFrac_TrustedCall) @06cb0e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: clockFeatures/30 (read)clockFeatures/30 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetPccPcdDivFrac/27 
  Calls: 
SetSimClkoutDiv/25 (SetSimClkoutDiv) @06cb0a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetSimClkoutDiv_TrustedCall/24 
SetSimClkoutDiv_TrustedCall/24 (SetSimClkoutDiv_TrustedCall) @06cb07e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetSimClkoutDiv/25 
  Calls: 
SetScgHsrunDivslow/23 (SetScgHsrunDivslow) @06cb0460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgHsrunDivslow_TrustedCall/22 
SetScgHsrunDivslow_TrustedCall/22 (SetScgHsrunDivslow_TrustedCall) @06cb01c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgHsrunDivslow/23 
  Calls: 
SetScgHsrunDivbus/21 (SetScgHsrunDivbus) @06cadb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgHsrunDivbus_TrustedCall/20 
SetScgHsrunDivbus_TrustedCall/20 (SetScgHsrunDivbus_TrustedCall) @06cad0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgHsrunDivbus/21 
  Calls: 
SetScgHsrunDivcore/19 (SetScgHsrunDivcore) @06cadd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgHsrunDivcore_TrustedCall/18 
SetScgHsrunDivcore_TrustedCall/18 (SetScgHsrunDivcore_TrustedCall) @06cada80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgHsrunDivcore/19 
  Calls: 
SetScgVlprDivslow/17 (SetScgVlprDivslow) @06cad7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgVlprDivslow_TrustedCall/16 
SetScgVlprDivslow_TrustedCall/16 (SetScgVlprDivslow_TrustedCall) @06cad540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgVlprDivslow/17 
  Calls: 
SetScgVlprDivbus/15 (SetScgVlprDivbus) @06cad2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgVlprDivbus_TrustedCall/14 
SetScgVlprDivbus_TrustedCall/14 (SetScgVlprDivbus_TrustedCall) @06cad000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgVlprDivbus/15 
  Calls: 
SetScgVlprDivcore/13 (SetScgVlprDivcore) @06ca7380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgVlprDivcore_TrustedCall/12 
SetScgVlprDivcore_TrustedCall/12 (SetScgVlprDivcore_TrustedCall) @06ca7d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgVlprDivcore/13 
  Calls: 
SetScgRunDivslow/11 (SetScgRunDivslow) @06ca7a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgRunDivslow_TrustedCall/10 
SetScgRunDivslow_TrustedCall/10 (SetScgRunDivslow_TrustedCall) @06ca77e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgRunDivslow/11 
  Calls: 
SetScgRunDivbus/9 (SetScgRunDivbus) @06ca7540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgRunDivbus_TrustedCall/8 
SetScgRunDivbus_TrustedCall/8 (SetScgRunDivbus_TrustedCall) @06ca72a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgRunDivbus/9 
  Calls: 
SetScgRunDivcore/7 (SetScgRunDivcore) @06ca7000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgRunDivcore_TrustedCall/6 
SetScgRunDivcore_TrustedCall/6 (SetScgRunDivcore_TrustedCall) @06b86700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgRunDivcore/7 
  Calls: 
SetScgAsyncDiv2/5 (SetScgAsyncDiv2) @06b86e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgAsyncDiv2_TrustedCall/4 
SetScgAsyncDiv2_TrustedCall/4 (SetScgAsyncDiv2_TrustedCall) @06b86b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: clockFeatures/30 (read)dividerValue_hardwareValue/31 (read)scgPeriphAsyncDivs/32 (read)scgPeriphAsyncDivs/32 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgAsyncDiv2/5 
  Calls: 
SetScgAsyncDiv1/3 (SetScgAsyncDiv1) @06b868c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SetScgAsyncDiv1_TrustedCall/2 
SetScgAsyncDiv1_TrustedCall/2 (SetScgAsyncDiv1_TrustedCall) @06b86620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: clockFeatures/30 (read)dividerValue_hardwareValue/31 (read)scgPeriphAsyncDivs/32 (read)scgPeriphAsyncDivs/32 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: SetScgAsyncDiv1/3 
  Calls: 
Callback_DividerEmpty/1 (Callback_DividerEmpty) @06b86380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: dividerCallbacks/0 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
dividerCallbacks/0 (dividerCallbacks) @06b83ab0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Callback_DividerEmpty/1 (addr)SetScgAsyncDiv1/3 (addr)SetScgAsyncDiv2/5 (addr)SetScgRunDivcore/7 (addr)SetScgRunDivbus/9 (addr)SetScgRunDivslow/11 (addr)SetScgVlprDivcore/13 (addr)SetScgVlprDivbus/15 (addr)SetScgVlprDivslow/17 (addr)SetScgHsrunDivcore/19 (addr)SetScgHsrunDivbus/21 (addr)SetScgHsrunDivslow/23 (addr)SetSimClkoutDiv/25 (addr)SetPccPcdDivFrac/27 (addr)SetSimTraceDivMul/29 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
SetSimTraceDivMul (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetSimTraceDivMul_TrustedCall (config);
  return;

}


SetSimTraceDivMul_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = 1074036736B;
  _2 = _1->CLKDIV4;
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 1;
  _6 = _5 & 14;
  _7 = config->options[0];
  _8 = (long unsigned int) _7;
  _9 = _8 + 4294967295;
  _10 = _9 & 1;
  _11 = _6 | _10;
  _12 = 1074036736B;
  _13 = _2 | _11;
  _12->CLKDIV4 = _13;
  return;

}


SetPccPcdDivFrac (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetPccPcdDivFrac_TrustedCall (config);
  return;

}


SetPccPcdDivFrac_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = 1074155520B;
  _2 = config->name;
  _3 = clockFeatures[_2][5];
  _4 = (int) _3;
  regValue = _1->PCCn[_4];
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967280;
  # DEBUG BEGIN_STMT
  _5 = config->value;
  _6 = _5 + 4294967295;
  _7 = _6 & 7;
  regValue = regValue | _7;
  # DEBUG BEGIN_STMT
  _8 = config->options[0];
  _9 = (long unsigned int) _8;
  _10 = _9 + 4294967295;
  _11 = _10 << 3;
  _12 = _11 & 8;
  regValue = regValue | _12;
  # DEBUG BEGIN_STMT
  _13 = 1074155520B;
  _14 = config->name;
  _15 = clockFeatures[_14][5];
  _16 = (int) _15;
  _13->PCCn[_16] = regValue;
  return;

}


SetSimClkoutDiv (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetSimClkoutDiv_TrustedCall (config);
  return;

}


SetSimClkoutDiv_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074036736B;
  regValue = _2->CHIPCTL;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294965503;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 8;
  _6 = _5 & 1792;
  regValue = regValue | _6;
  # DEBUG BEGIN_STMT
  _7 = 1074036736B;
  _7->CHIPCTL = regValue;

  <bb 4> :
  return;

}


SetScgHsrunDivslow (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgHsrunDivslow_TrustedCall (config);
  return;

}


SetScgHsrunDivslow_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->HCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967280;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  regValue = regValue | _4;
  # DEBUG BEGIN_STMT
  _5 = 1074151424B;
  _5->HCCR = regValue;

  <bb 4> :
  return;

}


SetScgHsrunDivbus (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgHsrunDivbus_TrustedCall (config);
  return;

}


SetScgHsrunDivbus_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->HCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967055;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 4;
  regValue = regValue | _5;
  # DEBUG BEGIN_STMT
  _6 = 1074151424B;
  _6->HCCR = regValue;

  <bb 4> :
  return;

}


SetScgHsrunDivcore (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgHsrunDivcore_TrustedCall (config);
  return;

}


SetScgHsrunDivcore_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->HCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4293984255;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 16;
  regValue = regValue | _5;
  # DEBUG BEGIN_STMT
  _6 = 1074151424B;
  _6->HCCR = regValue;

  <bb 4> :
  return;

}


SetScgVlprDivslow (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgVlprDivslow_TrustedCall (config);
  return;

}


SetScgVlprDivslow_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->VCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967280;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  regValue = regValue | _4;
  # DEBUG BEGIN_STMT
  _5 = 1074151424B;
  _5->VCCR = regValue;

  <bb 4> :
  return;

}


SetScgVlprDivbus (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgVlprDivbus_TrustedCall (config);
  return;

}


SetScgVlprDivbus_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->VCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967055;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 4;
  regValue = regValue | _5;
  # DEBUG BEGIN_STMT
  _6 = 1074151424B;
  _6->VCCR = regValue;

  <bb 4> :
  return;

}


SetScgVlprDivcore (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgVlprDivcore_TrustedCall (config);
  return;

}


SetScgVlprDivcore_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->VCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4293984255;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 16;
  regValue = regValue | _5;
  # DEBUG BEGIN_STMT
  _6 = 1074151424B;
  _6->VCCR = regValue;

  <bb 4> :
  return;

}


SetScgRunDivslow (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgRunDivslow_TrustedCall (config);
  return;

}


SetScgRunDivslow_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->RCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967280;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  regValue = regValue | _4;
  # DEBUG BEGIN_STMT
  _5 = 1074151424B;
  _5->RCCR = regValue;

  <bb 4> :
  return;

}


SetScgRunDivbus (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgRunDivbus_TrustedCall (config);
  return;

}


SetScgRunDivbus_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->RCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967055;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 4;
  regValue = regValue | _5;
  # DEBUG BEGIN_STMT
  _6 = 1074151424B;
  _6->RCCR = regValue;

  <bb 4> :
  return;

}


SetScgRunDivcore (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgRunDivcore_TrustedCall (config);
  return;

}


SetScgRunDivcore_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->value;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = 1074151424B;
  regValue = _2->RCCR;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4293984255;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = _3 + 4294967295;
  _5 = _4 << 16;
  regValue = regValue | _5;
  # DEBUG BEGIN_STMT
  _6 = 1074151424B;
  _6->RCCR = regValue;

  <bb 4> :
  return;

}


SetScgAsyncDiv2 (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgAsyncDiv2_TrustedCall (config);
  return;

}


SetScgAsyncDiv2_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 dividerValue;
  uint32 instance;
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->name;
  _2 = clockFeatures[_1][0];
  instance = (uint32) _2;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = dividerValue_hardwareValue[_3];
  dividerValue = (uint32) _4;
  # DEBUG BEGIN_STMT
  _5 = scgPeriphAsyncDivs[instance];
  regValue = _5->ASYNC_DIV;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294965503;
  # DEBUG BEGIN_STMT
  _6 = dividerValue << 8;
  regValue = regValue | _6;
  # DEBUG BEGIN_STMT
  _7 = scgPeriphAsyncDivs[instance];
  _7->ASYNC_DIV = regValue;
  return;

}


SetScgAsyncDiv1 (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SetScgAsyncDiv1_TrustedCall (config);
  return;

}


SetScgAsyncDiv1_TrustedCall (const struct Clock_Ip_DividerConfigType * config)
{
  uint32 dividerValue;
  uint32 instance;
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config->name;
  _2 = clockFeatures[_1][0];
  instance = (uint32) _2;
  # DEBUG BEGIN_STMT
  _3 = config->value;
  _4 = dividerValue_hardwareValue[_3];
  dividerValue = (uint32) _4;
  # DEBUG BEGIN_STMT
  _5 = scgPeriphAsyncDivs[instance];
  regValue = _5->ASYNC_DIV;
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294967288;
  # DEBUG BEGIN_STMT
  regValue = regValue | dividerValue;
  # DEBUG BEGIN_STMT
  _6 = scgPeriphAsyncDivs[instance];
  _6->ASYNC_DIV = regValue;
  return;

}


Callback_DividerEmpty (const struct Clock_Ip_DividerConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return;

}


