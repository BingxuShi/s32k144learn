Parsed function:Det_Start
Parsed function:Det_ReportTransientFault
Parsed function:Det_ReportRuntimeError
Parsed function:Det_ReportError
Parsed function:Det_Init
Dump after hash based groups
Congruence classes: 4 (unique hash values: 4), with total: 5 items
Class size histogram [num of members]: number of classe number of classess
[1]: 3 classes
[2]: 1 classes


Dump after WPA based types groups
Congruence classes: 4 (unique hash values: 4), with total: 5 items
Class size histogram [num of members]: number of classe number of classess
[1]: 3 classes
[2]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 4 (unique hash values: 4), with total: 5 items
Class size histogram [num of members]: number of classe number of classess
[1]: 3 classes
[2]: 1 classes


Init called for 2 items (40.00%).
Dump after full equality comparison of groups
Congruence classes: 4 (unique hash values: 4), with total: 5 items
Class size histogram [num of members]: number of classe number of classess
[1]: 3 classes
[2]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 4 (unique hash values: 4), with total: 5 items
Class size histogram [num of members]: number of classe number of classess
[1]: 3 classes
[2]: 1 classes



Item count: 5
Congruent classes before: 4, after: 4
Average class size before: 1.25, after: 1.25
Average non-singular class size: 2.00, count: 1
Equal symbols: 1
Fraction of visited symbols: 20.00%

Semantic equality hit:Det_Init->Det_Start
Assembler symbol names:Det_Init->Det_Start

Symbols to be put in SSA form
{ D.5628 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: Det_Start/16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Det_Start

IPA function summary for Det_Start/16 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_Init/12 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Det_Start ()
{
  <bb 2> [local count: 1073741824]:
  Det_Init (); [tail call]
  return;

}


Det_ReportTransientFault (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 FaultId)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG u32CoreId => 0
  # DEBUG BEGIN_STMT
  Det_TransientModuleId[0] = ModuleId_2(D);
  # DEBUG BEGIN_STMT
  Det_TransientInstanceId[0] = InstanceId_4(D);
  # DEBUG BEGIN_STMT
  Det_TransientApiId[0] = ApiId_6(D);
  # DEBUG BEGIN_STMT
  Det_TransientFaultId[0] = FaultId_8(D);
  # DEBUG BEGIN_STMT
  return 0;

}


Det_ReportRuntimeError (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG u32CoreId => 0
  # DEBUG BEGIN_STMT
  Det_RuntimeModuleId[0] = ModuleId_2(D);
  # DEBUG BEGIN_STMT
  Det_RuntimeInstanceId[0] = InstanceId_4(D);
  # DEBUG BEGIN_STMT
  Det_RuntimeApiId[0] = ApiId_6(D);
  # DEBUG BEGIN_STMT
  Det_RuntimeErrorId[0] = ErrorId_8(D);
  # DEBUG BEGIN_STMT
  return 0;

}


Det_ReportError (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG u32CoreId => 0
  # DEBUG BEGIN_STMT
  Det_ModuleId[0] = ModuleId_2(D);
  # DEBUG BEGIN_STMT
  Det_InstanceId[0] = InstanceId_4(D);
  # DEBUG BEGIN_STMT
  Det_ApiId[0] = ApiId_6(D);
  # DEBUG BEGIN_STMT
  Det_ErrorId[0] = ErrorId_8(D);
  # DEBUG BEGIN_STMT
  return 0;

}


Det_Init ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


