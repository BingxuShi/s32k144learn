IPA function summary for ClockSetSimTraceEnable_TrustedCall.isra.0/27 inlinable
  global time:     7.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.660000,  executed if:(op0 != 1)
    size:1.000000, time:0.340000,  executed if:(op0 == 1)
  calls:

IPA function summary for ClockSetSimClkoutEnable_TrustedCall.isra.0/24 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for ClockUpdateSimTraceEnable/20 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimTraceEnable/19 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimTraceEnable/19 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       4
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimTraceEnable_TrustedCall.isra.0/27 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0

IPA function summary for ClockUpdateSimGate/17 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimGate_TrustedCall/15 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimGate/16 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    ClockSetSimGate_TrustedCall/15 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0

IPA function summary for ClockSetSimGate_TrustedCall/15 inlinable
  global time:     12.000000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:

IPA function summary for ClockUpdatePccCgcEnable/14 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetPccCgcEnable_TrustedCall/12 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 5 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetPccCgcEnable/13 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    ClockSetPccCgcEnable_TrustedCall/12 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 5 stack: 0

IPA function summary for ClockSetPccCgcEnable_TrustedCall/12 inlinable
  global time:     10.000000
  self size:       11
  global size:     11
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 32] changed)
  array index:(op0[ref offset: 0] changed)
  calls:

IPA function summary for ClockUpdateSimClkoutEnable/11 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimClkoutEnable/10 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimClkoutEnable/10 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       4
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimClkoutEnable_TrustedCall.isra.0/24 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0

IPA function summary for ClockUpdateSimLPO32KEnable/8 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimLPO32KEnable/7 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimLPO32KEnable/7 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       4
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0

IPA function summary for ClockUpdateSimLPO1KEnable/5 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimLPO1KEnable/4 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimLPO1KEnable/4 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       4
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for ClockUpdateGateEmpty/2 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for ClockSetGateEmpty/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 237.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in ClockSetSimTraceEnable_TrustedCall.isra.0/27.
Enqueueing calls in ClockSetSimClkoutEnable_TrustedCall.isra.0/24.
Enqueueing calls in ClockSetSimLPO32KEnable_TrustedCall.isra.0/23.
Enqueueing calls in ClockSetSimLPO1KEnable_TrustedCall.isra.0/22.
Enqueueing calls in ClockUpdateSimTraceEnable/20.
Enqueueing calls in ClockSetSimTraceEnable/19.
Enqueueing calls in ClockUpdateSimGate/17.
Enqueueing calls in ClockSetSimGate/16.
Enqueueing calls in ClockSetSimGate_TrustedCall/15.
Enqueueing calls in ClockUpdatePccCgcEnable/14.
Enqueueing calls in ClockSetPccCgcEnable/13.
Enqueueing calls in ClockSetPccCgcEnable_TrustedCall/12.
Enqueueing calls in ClockUpdateSimClkoutEnable/11.
Enqueueing calls in ClockSetSimClkoutEnable/10.
Enqueueing calls in ClockUpdateSimLPO32KEnable/8.
Enqueueing calls in ClockSetSimLPO32KEnable/7.
Enqueueing calls in ClockUpdateSimLPO1KEnable/5.
Enqueueing calls in ClockSetSimLPO1KEnable/4.
Enqueueing calls in ClockUpdateGateEmpty/2.
Enqueueing calls in ClockSetGateEmpty/1.

Considering ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 with 7 size
 to be inlined into ClockSetSimLPO1KEnable/4 in ../RTD/src/Clock_Ip_Gate.c:309
 Estimated badness is -3.250000, frequency 1.00.

Considering ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 with 8 size
 to be inlined into ClockSetSimLPO32KEnable/7 in ../RTD/src/Clock_Ip_Gate.c:348
 Estimated badness is -1.925926, frequency 1.00.

Considering ClockSetSimClkoutEnable_TrustedCall.isra.0/24 with 8 size
 to be inlined into ClockSetSimClkoutEnable/10 in ../RTD/src/Clock_Ip_Gate.c:386
 Estimated badness is -1.925926, frequency 1.00.

Considering ClockSetSimTraceEnable_TrustedCall.isra.0/27 with 9 size
 to be inlined into ClockSetSimTraceEnable/19 in ../RTD/src/Clock_Ip_Gate.c:511
 Estimated badness is -1.300000, frequency 1.00.

Considering ClockSetPccCgcEnable_TrustedCall/12 with 11 size
 to be inlined into ClockSetPccCgcEnable/13 in ../RTD/src/Clock_Ip_Gate.c:425
 Estimated badness is -1.120000, frequency 1.00.

Considering ClockSetPccCgcEnable_TrustedCall/12 with 11 size
 to be inlined into ClockUpdatePccCgcEnable/14 in ../RTD/src/Clock_Ip_Gate.c:425
 Estimated badness is -0.853333, frequency 1.00.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 165.000000 weighted by profile: 0.000000

Why inlining failed?
call is unlikely and code size would grow         :        6 calls, 6.000000 freq, 0 count
IPA function summary for ClockUpdateSimTraceEnable/20 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimTraceEnable/19 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 5 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimTraceEnable/19 inlinable
  global time:     8.000000
  self size:       6
  global size:     10
  min size:       7
  self stack:      0
  global stack:    0
  estimated growth:1
    size:6.500000, time:5.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimTraceEnable_TrustedCall.isra.0/27 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for ClockUpdateSimGate/17 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimGate_TrustedCall/15 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimGate/16 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    ClockSetSimGate_TrustedCall/15 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0

IPA function summary for ClockSetSimGate_TrustedCall/15 inlinable
  global time:     12.000000
  self size:       13
  global size:     13
  min size:       8
  self stack:      0
  global stack:    0
  estimated growth:1
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:

IPA function summary for ClockUpdatePccCgcEnable/14 inlinable
  global time:     11.000000
  self size:       10
  global size:     15
  min size:       4
  self stack:      8
  global stack:    8
    size:8.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetPccCgcEnable_TrustedCall/12 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 5 stack: 0
      Stack frame offset 8, callee self size 0, callee size 0

IPA function summary for ClockSetPccCgcEnable/13 inlinable
  global time:     9.000000
  self size:       5
  global size:     10
  min size:       4
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    ClockSetPccCgcEnable_TrustedCall/28 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 5 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for ClockUpdateSimClkoutEnable/11 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimClkoutEnable/10 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimClkoutEnable/10 inlinable
  global time:     8.000000
  self size:       6
  global size:     9
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:1
    size:5.500000, time:5.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimClkoutEnable_TrustedCall.isra.0/24 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for ClockUpdateSimLPO32KEnable/8 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimLPO32KEnable/7 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimLPO32KEnable/7 inlinable
  global time:     8.000000
  self size:       6
  global size:     9
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:1
    size:5.500000, time:5.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for ClockUpdateSimLPO1KEnable/5 inlinable
  global time:     17.000000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    ClockSetSimLPO1KEnable/4 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0
       op0 is compile time invariant

IPA function summary for ClockSetSimLPO1KEnable/4 inlinable
  global time:     7.000000
  self size:       6
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
  estimated growth:1
    size:4.500000, time:4.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for ClockUpdateGateEmpty/2 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for ClockSetGateEmpty/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

ClockSetPccCgcEnable_TrustedCall/28 (ClockSetPccCgcEnable_TrustedCall) @05eb5700
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 12
  References: clockFeatures/21 (read)
  Referring: 
  Function ClockSetPccCgcEnable_TrustedCall/28 is inline copy in ClockSetPccCgcEnable/13
  Clone of ClockSetPccCgcEnable_TrustedCall/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockSetPccCgcEnable/13 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ClockSetSimTraceEnable_TrustedCall.isra.0/27 (ClockSetSimTraceEnable_TrustedCall.isra.0) @06c05c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function ClockSetSimTraceEnable_TrustedCall.isra.0/27 is inline copy in ClockSetSimTraceEnable/19
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockSetSimTraceEnable/19 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ClockSetSimClkoutEnable_TrustedCall.isra.0/24 (ClockSetSimClkoutEnable_TrustedCall.isra.0) @06c05380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function ClockSetSimClkoutEnable_TrustedCall.isra.0/24 is inline copy in ClockSetSimClkoutEnable/10
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockSetSimClkoutEnable/10 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 (ClockSetSimLPO32KEnable_TrustedCall.isra.0) @06b33e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 is inline copy in ClockSetSimLPO32KEnable/7
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockSetSimLPO32KEnable/7 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 (ClockSetSimLPO1KEnable_TrustedCall.isra.0) @06b33620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 is inline copy in ClockSetSimLPO1KEnable/4
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockSetSimLPO1KEnable/4 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
clockFeatures/21 (clockFeatures) @05fe1360
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockSetPccCgcEnable_TrustedCall/12 (read)ClockSetSimGate_TrustedCall/15 (read)ClockSetPccCgcEnable_TrustedCall/28 (read)
  Availability: not_available
  Varpool flags: read-only
ClockUpdateSimTraceEnable/20 (ClockUpdateSimTraceEnable) @05fdbc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetSimTraceEnable/19 (1073741824 (estimated locally),1.00 per call) 
ClockSetSimTraceEnable/19 (ClockSetSimTraceEnable) @05fdb9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: ClockUpdateSimTraceEnable/20 (1073741824 (estimated locally),1.00 per call) 
  Calls: ClockSetSimTraceEnable_TrustedCall.isra.0/27 (inlined) (1073741824 (estimated locally),1.00 per call) 
ClockUpdateSimGate/17 (ClockUpdateSimGate) @05fdb460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetSimGate_TrustedCall/15 (1073741824 (estimated locally),1.00 per call) 
ClockSetSimGate/16 (ClockSetSimGate) @05fdb1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetSimGate_TrustedCall/15 (1073741824 (estimated locally),1.00 per call) 
ClockSetSimGate_TrustedCall/15 (ClockSetSimGate_TrustedCall) @05fd6d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: clockFeatures/21 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockUpdateSimGate/17 (1073741824 (estimated locally),1.00 per call) ClockSetSimGate/16 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ClockUpdatePccCgcEnable/14 (ClockUpdatePccCgcEnable) @05fd6ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetPccCgcEnable_TrustedCall/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
ClockSetPccCgcEnable/13 (ClockSetPccCgcEnable) @05fd6c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetPccCgcEnable_TrustedCall/28 (inlined) (1073741824 (estimated locally),1.00 per call) 
ClockSetPccCgcEnable_TrustedCall/12 (ClockSetPccCgcEnable_TrustedCall) @05fd69a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 28
  References: clockFeatures/21 (read)
  Referring: 
  Function ClockSetPccCgcEnable_TrustedCall/12 is inline copy in ClockUpdatePccCgcEnable/14
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockUpdatePccCgcEnable/14 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
ClockUpdateSimClkoutEnable/11 (ClockUpdateSimClkoutEnable) @05fd6700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetSimClkoutEnable/10 (1073741824 (estimated locally),1.00 per call) 
ClockSetSimClkoutEnable/10 (ClockSetSimClkoutEnable) @05fd6460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: ClockUpdateSimClkoutEnable/11 (1073741824 (estimated locally),1.00 per call) 
  Calls: ClockSetSimClkoutEnable_TrustedCall.isra.0/24 (inlined) (1073741824 (estimated locally),1.00 per call) 
ClockUpdateSimLPO32KEnable/8 (ClockUpdateSimLPO32KEnable) @05eb5a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetSimLPO32KEnable/7 (1073741824 (estimated locally),1.00 per call) 
ClockSetSimLPO32KEnable/7 (ClockSetSimLPO32KEnable) @05eb52a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: ClockUpdateSimLPO32KEnable/8 (1073741824 (estimated locally),1.00 per call) 
  Calls: ClockSetSimLPO32KEnable_TrustedCall.isra.0/23 (inlined) (1073741824 (estimated locally),1.00 per call) 
ClockUpdateSimLPO1KEnable/5 (ClockUpdateSimLPO1KEnable) @05eb5c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: ClockSetSimLPO1KEnable/4 (1073741824 (estimated locally),1.00 per call) 
ClockSetSimLPO1KEnable/4 (ClockSetSimLPO1KEnable) @05eb59a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: ClockUpdateSimLPO1KEnable/5 (1073741824 (estimated locally),1.00 per call) 
  Calls: ClockSetSimLPO1KEnable_TrustedCall.isra.0/22 (inlined) (1073741824 (estimated locally),1.00 per call) 
ClockUpdateGateEmpty/2 (ClockUpdateGateEmpty) @05eb5460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
ClockSetGateEmpty/1 (ClockSetGateEmpty) @05eb51c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: gateCallbacks/0 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
gateCallbacks/0 (gateCallbacks) @05eb2798
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: ClockSetGateEmpty/1 (addr)ClockUpdateGateEmpty/2 (addr)ClockSetPccCgcEnable/13 (addr)ClockUpdatePccCgcEnable/14 (addr)ClockSetSimClkoutEnable/10 (addr)ClockUpdateSimClkoutEnable/11 (addr)ClockSetSimLPO32KEnable/7 (addr)ClockUpdateSimLPO32KEnable/8 (addr)ClockSetSimLPO1KEnable/4 (addr)ClockUpdateSimLPO1KEnable/5 (addr)ClockSetSimGate/16 (addr)ClockUpdateSimGate/17 (addr)ClockSetSimTraceEnable/19 (addr)ClockUpdateSimTraceEnable/20 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function ClockSetGateEmpty (ClockSetGateEmpty, funcdef_no=0, decl_uid=6045, cgraph_uid=1, symbol_order=1)

ClockSetGateEmpty (const struct Clock_Ip_GateConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function ClockUpdateGateEmpty (ClockUpdateGateEmpty, funcdef_no=1, decl_uid=6048, cgraph_uid=2, symbol_order=2)

ClockUpdateGateEmpty (Clock_Ip_NameType clockName, boolean gate)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function ClockUpdatePccCgcEnable (ClockUpdatePccCgcEnable, funcdef_no=13, decl_uid=6068, cgraph_uid=14, symbol_order=14)


Symbols to be put in SSA form
{ D.6199 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 8
Number of blocks to update: 7 ( 88%)


Merging blocks 5 and 7
Merging blocks 5 and 6
No longer having address taken: config
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
ClockUpdatePccCgcEnable (Clock_Ip_NameType clockName, boolean gate)
{
  uint32 regValue;
  struct Clock_Ip_GateConfigType config;
  <unnamed type> _10;
  unsigned char _11;
  int _12;
  short unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config.name = clockName_3(D);
  # DEBUG BEGIN_STMT
  if (gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG config => &config
  # DEBUG INLINE_ENTRY ClockSetPccCgcEnable
  # DEBUG BEGIN_STMT
  # DEBUG config => &config
  # DEBUG INLINE_ENTRY ClockSetPccCgcEnable_TrustedCall
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = config.name;
  _11 = clockFeatures[_10][6];
  _12 = (int) _11;
  regValue_13 ={v} MEM[(struct PCC_Type *)1074155520B].PCCn[_12];
  # DEBUG regValue => regValue_13
  # DEBUG BEGIN_STMT
  regValue_14 = regValue_13 & 3221225471;
  # DEBUG regValue => regValue_14
  # DEBUG BEGIN_STMT
  _15 = config.enable;
  _16 = (long unsigned int) _15;
  _17 = _16 << 30;
  regValue_18 = regValue_14 | _17;
  # DEBUG regValue => regValue_18
  # DEBUG BEGIN_STMT
  MEM[(struct PCC_Type *)1074155520B].PCCn[_12] ={v} regValue_18;
  # DEBUG config => NULL
  # DEBUG regValue => NULL
  # DEBUG config => NULL
  config ={v} {CLOBBER};
  return;

}



;; Function ClockSetSimGate_TrustedCall (ClockSetSimGate_TrustedCall, funcdef_no=14, decl_uid=6136, cgraph_uid=15, symbol_order=15)

ClockSetSimGate_TrustedCall (const struct Clock_Ip_GateConfigType * config)
{
  uint32 regValue;
  uint32 gateIndex;
  uint32 enable;
  short unsigned int _1;
  <unnamed type> _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = config_8(D)->enable;
  enable_9 = (uint32) _1;
  # DEBUG enable => enable_9
  # DEBUG BEGIN_STMT
  _2 = config_8(D)->name;
  _3 = clockFeatures[_2][6];
  gateIndex_10 = (uint32) _3;
  # DEBUG gateIndex => gateIndex_10
  # DEBUG BEGIN_STMT
  regValue_11 ={v} MEM[(struct SIM_Type *)1074036736B].PLATCGC;
  # DEBUG regValue => regValue_11
  # DEBUG BEGIN_STMT
  _4 = 1 << gateIndex_10;
  _5 = ~_4;
  regValue_12 = _5 & regValue_11;
  # DEBUG regValue => regValue_12
  # DEBUG BEGIN_STMT
  _6 = enable_9 << gateIndex_10;
  regValue_13 = _6 | regValue_12;
  # DEBUG regValue => regValue_13
  # DEBUG BEGIN_STMT
  MEM[(struct SIM_Type *)1074036736B].PLATCGC ={v} regValue_13;
  return;

}



;; Function ClockSetSimGate (ClockSetSimGate, funcdef_no=15, decl_uid=6070, cgraph_uid=16, symbol_order=16)

ClockSetSimGate (const struct Clock_Ip_GateConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  ClockSetSimGate_TrustedCall (config_2(D));
  return;

}



;; Function ClockUpdateSimGate (ClockUpdateSimGate, funcdef_no=16, decl_uid=6073, cgraph_uid=17, symbol_order=17)

ClockUpdateSimGate (Clock_Ip_NameType clockName, boolean gate)
{
  struct Clock_Ip_GateConfigType config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config.name = clockName_3(D);
  # DEBUG BEGIN_STMT
  if (gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG config => &config
  # DEBUG INLINE_ENTRY ClockSetSimGate
  # DEBUG BEGIN_STMT
  ClockSetSimGate_TrustedCall (&config);
  # DEBUG config => NULL
  config ={v} {CLOBBER};
  return;

}



;; Function ClockSetSimLPO1KEnable (ClockSetSimLPO1KEnable, funcdef_no=3, decl_uid=6050, cgraph_uid=4, symbol_order=4)


Symbols to be put in SSA form
{ D.6189 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
ClockSetSimLPO1KEnable (const struct Clock_Ip_GateConfigType * config)
{
  uint32 regValue;
  short unsigned int _4;
  short unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(short unsigned int *)config_2(D) + 4B];
  # DEBUG D#1 => config_2(D)
  # DEBUG INLINE_ENTRY ClockSetSimLPO1KEnable_TrustedCall
  # DEBUG config => D#1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  regValue_5 ={v} MEM[(struct SIM_Type *)1074036736B].LPOCLKS;
  # DEBUG regValue => regValue_5
  # DEBUG BEGIN_STMT
  regValue_6 = regValue_5 & 4294967294;
  # DEBUG regValue => regValue_6
  # DEBUG BEGIN_STMT
  _7 = _4;
  _8 = (long unsigned int) _7;
  regValue_9 = regValue_6 | _8;
  # DEBUG regValue => regValue_9
  # DEBUG BEGIN_STMT
  MEM[(struct SIM_Type *)1074036736B].LPOCLKS ={v} regValue_9;
  # DEBUG regValue => NULL
  return;

}



;; Function ClockUpdateSimLPO1KEnable (ClockUpdateSimLPO1KEnable, funcdef_no=4, decl_uid=6053, cgraph_uid=5, symbol_order=5)

ClockUpdateSimLPO1KEnable (Clock_Ip_NameType clockName, boolean gate)
{
  struct Clock_Ip_GateConfigType config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config.name = clockName_3(D);
  # DEBUG BEGIN_STMT
  if (gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  ClockSetSimLPO1KEnable (&config);
  config ={v} {CLOBBER};
  return;

}



;; Function ClockSetSimLPO32KEnable (ClockSetSimLPO32KEnable, funcdef_no=6, decl_uid=6055, cgraph_uid=7, symbol_order=7)


Symbols to be put in SSA form
{ D.6192 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
ClockSetSimLPO32KEnable (const struct Clock_Ip_GateConfigType * config)
{
  uint32 regValue;
  short unsigned int _4;
  short unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(short unsigned int *)config_2(D) + 4B];
  # DEBUG D#2 => config_2(D)
  # DEBUG INLINE_ENTRY ClockSetSimLPO32KEnable_TrustedCall
  # DEBUG config => D#2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  regValue_5 ={v} MEM[(struct SIM_Type *)1074036736B].LPOCLKS;
  # DEBUG regValue => regValue_5
  # DEBUG BEGIN_STMT
  regValue_6 = regValue_5 & 4294967293;
  # DEBUG regValue => regValue_6
  # DEBUG BEGIN_STMT
  _7 = _4;
  _8 = (long unsigned int) _7;
  _9 = _8 << 1;
  regValue_10 = regValue_6 | _9;
  # DEBUG regValue => regValue_10
  # DEBUG BEGIN_STMT
  MEM[(struct SIM_Type *)1074036736B].LPOCLKS ={v} regValue_10;
  # DEBUG regValue => NULL
  return;

}



;; Function ClockUpdateSimLPO32KEnable (ClockUpdateSimLPO32KEnable, funcdef_no=7, decl_uid=6058, cgraph_uid=8, symbol_order=8)

ClockUpdateSimLPO32KEnable (Clock_Ip_NameType clockName, boolean gate)
{
  struct Clock_Ip_GateConfigType config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config.name = clockName_3(D);
  # DEBUG BEGIN_STMT
  if (gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  ClockSetSimLPO32KEnable (&config);
  config ={v} {CLOBBER};
  return;

}



;; Function ClockSetSimClkoutEnable (ClockSetSimClkoutEnable, funcdef_no=9, decl_uid=6060, cgraph_uid=10, symbol_order=10)


Symbols to be put in SSA form
{ D.6195 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
ClockSetSimClkoutEnable (const struct Clock_Ip_GateConfigType * config)
{
  uint32 regValue;
  short unsigned int _4;
  short unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(short unsigned int *)config_2(D) + 4B];
  # DEBUG D#3 => config_2(D)
  # DEBUG INLINE_ENTRY ClockSetSimClkoutEnable_TrustedCall
  # DEBUG config => D#3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  regValue_5 ={v} MEM[(struct SIM_Type *)1074036736B].CHIPCTL;
  # DEBUG regValue => regValue_5
  # DEBUG BEGIN_STMT
  regValue_6 = regValue_5 & 4294965247;
  # DEBUG regValue => regValue_6
  # DEBUG BEGIN_STMT
  _7 = _4;
  _8 = (long unsigned int) _7;
  _9 = _8 << 11;
  regValue_10 = regValue_6 | _9;
  # DEBUG regValue => regValue_10
  # DEBUG BEGIN_STMT
  MEM[(struct SIM_Type *)1074036736B].CHIPCTL ={v} regValue_10;
  # DEBUG regValue => NULL
  return;

}



;; Function ClockUpdateSimClkoutEnable (ClockUpdateSimClkoutEnable, funcdef_no=10, decl_uid=6063, cgraph_uid=11, symbol_order=11)

ClockUpdateSimClkoutEnable (Clock_Ip_NameType clockName, boolean gate)
{
  struct Clock_Ip_GateConfigType config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config.name = clockName_3(D);
  # DEBUG BEGIN_STMT
  if (gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  ClockSetSimClkoutEnable (&config);
  config ={v} {CLOBBER};
  return;

}



;; Function ClockSetSimTraceEnable (ClockSetSimTraceEnable, funcdef_no=18, decl_uid=6075, cgraph_uid=19, symbol_order=19)


Symbols to be put in SSA form
{ D.6204 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


Merging blocks 2 and 4
Merging blocks 8 and 3
Merging blocks 2 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
ClockSetSimTraceEnable (const struct Clock_Ip_GateConfigType * config)
{
  uint32 regValue;
  short unsigned int _4;
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(short unsigned int *)config_2(D) + 4B];
  # DEBUG D#4 => config_2(D)
  # DEBUG INLINE_ENTRY ClockSetSimTraceEnable_TrustedCall
  # DEBUG config => D#4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  regValue_5 ={v} MEM[(struct SIM_Type *)1074036736B].CLKDIV4;
  # DEBUG regValue => regValue_5
  # DEBUG BEGIN_STMT
  _6 = _4;
  if (_6 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  regValue_7 = regValue_5 | 268435456;
  # DEBUG regValue => regValue_7
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  regValue_8 = regValue_5 & 4026531839;
  # DEBUG regValue => regValue_8

  <bb 5> [local count: 1073741824]:
  # regValue_9 = PHI <regValue_7(3), regValue_8(4)>
  # DEBUG regValue => regValue_9
  # DEBUG BEGIN_STMT
  MEM[(struct SIM_Type *)1074036736B].CLKDIV4 ={v} regValue_9;
  # DEBUG regValue => NULL
  return;

}



;; Function ClockUpdateSimTraceEnable (ClockUpdateSimTraceEnable, funcdef_no=19, decl_uid=6078, cgraph_uid=20, symbol_order=20)

ClockUpdateSimTraceEnable (Clock_Ip_NameType clockName, boolean gate)
{
  struct Clock_Ip_GateConfigType config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config.name = clockName_3(D);
  # DEBUG BEGIN_STMT
  if (gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  config.enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  ClockSetSimTraceEnable (&config);
  config ={v} {CLOBBER};
  return;

}



;; Function ClockSetPccCgcEnable (ClockSetPccCgcEnable, funcdef_no=12, decl_uid=6065, cgraph_uid=13, symbol_order=13)


Symbols to be put in SSA form
{ D.6198 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
ClockSetPccCgcEnable (const struct Clock_Ip_GateConfigType * config)
{
  uint32 regValue;
  <unnamed type> _4;
  unsigned char _5;
  int _6;
  short unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG config => config_2(D)
  # DEBUG INLINE_ENTRY ClockSetPccCgcEnable_TrustedCall
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = config_2(D)->name;
  _5 = clockFeatures[_4][6];
  _6 = (int) _5;
  regValue_7 ={v} MEM[(struct PCC_Type *)1074155520B].PCCn[_6];
  # DEBUG regValue => regValue_7
  # DEBUG BEGIN_STMT
  regValue_8 = regValue_7 & 3221225471;
  # DEBUG regValue => regValue_8
  # DEBUG BEGIN_STMT
  _9 = config_2(D)->enable;
  _10 = (long unsigned int) _9;
  _11 = _10 << 30;
  regValue_12 = regValue_8 | _11;
  # DEBUG regValue => regValue_12
  # DEBUG BEGIN_STMT
  MEM[(struct PCC_Type *)1074155520B].PCCn[_6] ={v} regValue_12;
  # DEBUG config => NULL
  # DEBUG regValue => NULL
  return;

}


