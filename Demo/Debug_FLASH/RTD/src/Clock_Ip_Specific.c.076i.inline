IPA function summary for ClockPowerModeChangeNotification/41 inlinable
  global time:     53.740000
  self size:       197
  global size:     197
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:4.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.500000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:28.000000, time:2.380000,  executed if:(op1 == 2) && (op0 == 3)
    size:2.000000, time:0.500000,  executed if:(op0 <= 2) && (op0 >= 1),  nonconst if:(op1 changed) && (op0 <= 2) && (op0 >= 1)
    size:24.000000, time:3.000000,  executed if:(op1 == 0) && (op0 <= 2) && (op0 >= 1)
    size:2.000000, time:0.500000,  executed if:(op0 == 0),  nonconst if:(op1 changed) && (op0 == 0)
    size:28.000000, time:2.380000,  executed if:(op1 == 2) && (op0 == 0)
  calls:
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)

IPA function summary for ClockInitializeObjects/40 inlinable
  global time:     216.000000
  self size:       82
  global size:     82
  min size:       84
  self stack:      0
  global stack:    0
    size:37.000000, time:37.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    getSlowDividerConfig/39 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
       op0 is compile time invariant
    getSlowDividerConfig/39 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
       op0 is compile time invariant
    getSlowDividerConfig/39 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
       op0 is compile time invariant
    getBusDividerConfig/38 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getBusDividerConfig/38 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getBusDividerConfig/38 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getCoreDividerConfig/37 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getCoreDividerConfig/37 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getCoreDividerConfig/37 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getSelectorConfig/36 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getSelectorConfig/36 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getSelectorConfig/36 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
       op0 is compile time invariant
    getSpllConfig/35 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0
    getSoscConfig/34 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:10 stack: 0
    getFircConfig/33 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0

IPA function summary for getSlowDividerConfig/39 inlinable
  global time:     56.499953
  self size:       42
  global size:     42
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:48.930510
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:14.000000, time:4.039796,  nonconst if:(op0 changed)
    size:4.000000, time:0.509949,  executed if:(op0 == 39)
    size:4.000000, time:0.509949,  executed if:(op0 == 38)
    size:4.000000, time:0.509949,  executed if:(op0 == 37)
  calls:

IPA function summary for getBusDividerConfig/38 inlinable
  global time:     56.882414
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:48.930510
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:14.000000, time:4.039796,  nonconst if:(op0 changed)
    size:5.000000, time:0.637436,  executed if:(op0 == 35)
    size:5.000000, time:0.637436,  executed if:(op0 == 34)
    size:5.000000, time:0.637436,  executed if:(op0 == 33)
  calls:

IPA function summary for getCoreDividerConfig/37 inlinable
  global time:     56.882414
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:48.930510
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:14.000000, time:4.039796,  nonconst if:(op0 changed)
    size:5.000000, time:0.637436,  executed if:(op0 == 31)
    size:5.000000, time:0.637436,  executed if:(op0 == 30)
    size:5.000000, time:0.637436,  executed if:(op0 == 29)
  calls:

IPA function summary for getSelectorConfig/36 inlinable
  global time:     56.882414
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:48.930510
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:14.000000, time:4.039796,  nonconst if:(op0 changed)
    size:5.000000, time:0.637436,  executed if:(op0 == 27)
    size:5.000000, time:0.637436,  executed if:(op0 == 26)
    size:5.000000, time:0.637436,  executed if:(op0 == 25)
  calls:

IPA function summary for getSpllConfig/35 inlinable
  global time:     56.545403
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:24.000000, time:54.545403
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for getSoscConfig/34 inlinable
  global time:     52.975403
  self size:       20
  global size:     20
  min size:       0
  self stack:      0
  global stack:    0
    size:17.000000, time:50.975403
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for getFircConfig/33 inlinable
  global time:     56.545403
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:24.000000, time:54.545403
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for SpecificPlatformInitClock/32 inlinable
  global time:     96.413792
  self size:       36
  global size:     36
  min size:       32
  self stack:      12
  global stack:    12
    size:17.000000, time:30.999332
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    SetSimLpoclksRegister_TrustedCall/31 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:17 stack: 0
    ReportClockErrors/46 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
    ClockTimeoutExpired/45 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    ClockStartTimeout/44 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SetFircToResetValue_TrustedCall/30 function not considered for inlining
      loop depth: 0 freq:0.33 size: 1 time: 10callee size: 3 stack: 0

IPA function summary for SetSimLpoclksRegister_TrustedCall/31 inlinable
  global time:     190.398183
  self size:       35
  global size:     35
  min size:       0
  self stack:      0
  global stack:    0
    size:27.000000, time:156.623637
    size:6.000000, time:15.592727,  executed if:(not inlined)
    size:0.500000, time:4.545455,  executed if:(not inlined),  nonconst if:(op0[ref offset: 56] changed) && (not inlined)
    size:0.500000, time:4.545455,  nonconst if:(op0[ref offset: 56] changed)
    size:0.500000, time:4.545455,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:0.500000, time:4.545455,  nonconst if:(op0[ref offset: 96] changed)
  calls:

IPA function summary for SetFircToResetValue_TrustedCall/30 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for DisableSafeClock/29 inlinable
  global time:     66.568988
  self size:       31
  global size:     31
  min size:       8
  self stack:      0
  global stack:    0
    size:5.000000, time:2.639589
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:13.000000, time:51.929399,  executed if:(op0 != 0B)
  calls:
    indirect call loop depth: 0 freq:0.33 size: 4 time: 16
    indirect call loop depth: 0 freq:0.17 size: 4 time: 16predicate: (op0 != 0B)

IPA function summary for SpecificPeripheralClockInitialization/28 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 1024.334368 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in ClockPowerModeChangeNotification/41.
Enqueueing calls in ClockInitializeObjects/40.
Enqueueing calls in getSlowDividerConfig/39.
Enqueueing calls in getBusDividerConfig/38.
Enqueueing calls in getCoreDividerConfig/37.
Enqueueing calls in getSelectorConfig/36.
Enqueueing calls in getSpllConfig/35.
Enqueueing calls in getSoscConfig/34.
Enqueueing calls in getFircConfig/33.
Enqueueing calls in SpecificPlatformInitClock/32.
Enqueueing calls in SetSimLpoclksRegister_TrustedCall/31.
Enqueueing calls in SetFircToResetValue_TrustedCall/30.
Enqueueing calls in DisableSafeClock/29.
Enqueueing calls in SpecificPeripheralClockInitialization/28.

Considering SetFircToResetValue_TrustedCall/30 with 7 size
 to be inlined into SpecificPlatformInitClock/32 in ../RTD/src/Clock_Ip_Specific.c:439
 Estimated badness is -0.135385, frequency 0.33.

Considering SetSimLpoclksRegister_TrustedCall/31 with 35 size
 to be inlined into SpecificPlatformInitClock/32 in ../RTD/src/Clock_Ip_Specific.c:468
 Estimated badness is -0.088545, frequency 1.00.

Considering getSlowDividerConfig/39 with 42 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:966
 Estimated badness is -0.053689, frequency 1.00.

Considering getSlowDividerConfig/39 with 42 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:967
 Estimated badness is -0.053689, frequency 1.00.

Considering getSlowDividerConfig/39 with 42 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:969
 Estimated badness is -0.053689, frequency 1.00.

Considering getSelectorConfig/36 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:948
 Estimated badness is -0.049593, frequency 1.00.

Considering getSelectorConfig/36 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:949
 Estimated badness is -0.049593, frequency 1.00.

Considering getSelectorConfig/36 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:951
 Estimated badness is -0.049593, frequency 1.00.

Considering getCoreDividerConfig/37 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:954
 Estimated badness is -0.049593, frequency 1.00.

Considering getCoreDividerConfig/37 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:955
 Estimated badness is -0.049593, frequency 1.00.

Considering getCoreDividerConfig/37 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:957
 Estimated badness is -0.049593, frequency 1.00.

Considering getBusDividerConfig/38 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:960
 Estimated badness is -0.049593, frequency 1.00.

Considering getBusDividerConfig/38 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:961
 Estimated badness is -0.049593, frequency 1.00.

Considering getBusDividerConfig/38 with 45 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:963
 Estimated badness is -0.049593, frequency 1.00.

Considering getSoscConfig/34 with 20 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:936
 Estimated badness is -0.035739, frequency 1.00.

Considering getFircConfig/33 with 27 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:935
 Estimated badness is -0.022727, frequency 1.00.

Considering getSpllConfig/35 with 27 size
 to be inlined into ClockInitializeObjects/40 in ../RTD/src/Clock_Ip_Specific.c:938
 Estimated badness is -0.022727, frequency 1.00.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 1164.956425 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        3 calls, 3.523733 freq, 0 count
IPA function summary for ClockPowerModeChangeNotification/41 inlinable
  global time:     53.740000
  self size:       197
  global size:     197
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:4.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.500000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:28.000000, time:2.380000,  executed if:(op1 == 2) && (op0 == 3)
    size:2.000000, time:0.500000,  executed if:(op0 <= 2) && (op0 >= 1),  nonconst if:(op1 changed) && (op0 <= 2) && (op0 >= 1)
    size:24.000000, time:3.000000,  executed if:(op1 == 0) && (op0 <= 2) && (op0 >= 1)
    size:2.000000, time:0.500000,  executed if:(op0 == 0),  nonconst if:(op1 changed) && (op0 == 0)
    size:28.000000, time:2.380000,  executed if:(op1 == 2) && (op0 == 0)
  calls:
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 3)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.08 size: 4 time: 16predicate: (op1 == 2) && (op0 == 0)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)
    indirect call loop depth: 0 freq:0.12 size: 4 time: 16predicate: (op1 == 0) && (op0 <= 2) && (op0 >= 1)

IPA function summary for ClockInitializeObjects/40 inlinable
  global time:     793.499096
  self size:       82
  global size:     318
  min size:       636
  self stack:      0
  global stack:    0
    size:315.000000, time:791.499096
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    getSlowDividerConfig/39 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSlowDividerConfig/66 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSlowDividerConfig/65 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getBusDividerConfig/38 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getBusDividerConfig/72 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getBusDividerConfig/71 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getCoreDividerConfig/37 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getCoreDividerConfig/70 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getCoreDividerConfig/69 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSelectorConfig/36 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSelectorConfig/68 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSelectorConfig/67 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSpllConfig/35 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getSoscConfig/34 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:10 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    getFircConfig/33 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for SpecificPlatformInitClock/32 inlinable
  global time:     249.148338
  self size:       36
  global size:     65
  min size:       88
  self stack:      12
  global stack:    12
    size:49.000000, time:198.033878
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    SetSimLpoclksRegister_TrustedCall/31 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:17 stack: 0
      Stack frame offset 12, callee self size 0, callee size 0
    ReportClockErrors/46 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
    ClockTimeoutExpired/45 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    ClockStartTimeout/44 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SetFircToResetValue_TrustedCall/30 inlined
      loop depth: 0 freq:0.33 size: 1 time: 10callee size: 3 stack: 0
      Stack frame offset 12, callee self size 0, callee size 0

IPA function summary for DisableSafeClock/29 inlinable
  global time:     66.568988
  self size:       31
  global size:     31
  min size:       8
  self stack:      0
  global stack:    0
    size:5.000000, time:2.639589
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:13.000000, time:51.929399,  executed if:(op0 != 0B)
  calls:
    indirect call loop depth: 0 freq:0.33 size: 4 time: 16
    indirect call loop depth: 0 freq:0.17 size: 4 time: 16predicate: (op0 != 0B)

IPA function summary for SpecificPeripheralClockInitialization/28 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

getBusDividerConfig/72 (getBusDividerConfig) @06d47d20
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 71
  References: config_clock/1 (read)dividerConfigurations.6197/63 (addr)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)
  Referring: 
  Function getBusDividerConfig/72 is inline copy in ClockInitializeObjects/40
  Clone of getBusDividerConfig/38
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getBusDividerConfig/71 (getBusDividerConfig) @06d479a0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 38
  previous sharing asm name: 72
  References: config_clock/1 (read)dividerConfigurations.6197/63 (addr)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)
  Referring: 
  Function getBusDividerConfig/71 is inline copy in ClockInitializeObjects/40
  Clone of getBusDividerConfig/38
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getCoreDividerConfig/70 (getCoreDividerConfig) @06d47620
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 69
  References: config_clock/1 (read)dividerConfigurations.6177/62 (addr)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)
  Referring: 
  Function getCoreDividerConfig/70 is inline copy in ClockInitializeObjects/40
  Clone of getCoreDividerConfig/37
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getCoreDividerConfig/69 (getCoreDividerConfig) @06d472a0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 37
  previous sharing asm name: 70
  References: config_clock/1 (read)dividerConfigurations.6177/62 (addr)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)
  Referring: 
  Function getCoreDividerConfig/69 is inline copy in ClockInitializeObjects/40
  Clone of getCoreDividerConfig/37
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSelectorConfig/68 (getSelectorConfig) @06d3aee0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 67
  References: config_clock/1 (read)selectorConfigurations.6156/60 (addr)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)
  Referring: 
  Function getSelectorConfig/68 is inline copy in ClockInitializeObjects/40
  Clone of getSelectorConfig/36
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSelectorConfig/67 (getSelectorConfig) @06d3ab60
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 36
  previous sharing asm name: 68
  References: config_clock/1 (read)selectorConfigurations.6156/60 (addr)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)
  Referring: 
  Function getSelectorConfig/67 is inline copy in ClockInitializeObjects/40
  Clone of getSelectorConfig/36
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSlowDividerConfig/66 (getSlowDividerConfig) @06d3a7e0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 65
  References: config_clock/1 (read)dividerConfigurations.6217/64 (addr)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)
  Referring: 
  Function getSlowDividerConfig/66 is inline copy in ClockInitializeObjects/40
  Clone of getSlowDividerConfig/39
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSlowDividerConfig/65 (getSlowDividerConfig) @06d3a460
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 39
  previous sharing asm name: 66
  References: config_clock/1 (read)dividerConfigurations.6217/64 (addr)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)
  Referring: 
  Function getSlowDividerConfig/65 is inline copy in ClockInitializeObjects/40
  Clone of getSlowDividerConfig/39
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
dividerConfigurations.6217/64 (dividerConfigurations) @060612d0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getSlowDividerConfig/39 (addr)getSlowDividerConfig/39 (write)getSlowDividerConfig/39 (write)getSlowDividerConfig/39 (write)getSlowDividerConfig/39 (write)getSlowDividerConfig/65 (addr)getSlowDividerConfig/65 (write)getSlowDividerConfig/65 (write)getSlowDividerConfig/65 (write)getSlowDividerConfig/65 (write)getSlowDividerConfig/66 (addr)getSlowDividerConfig/66 (write)getSlowDividerConfig/66 (write)getSlowDividerConfig/66 (write)getSlowDividerConfig/66 (write)
  Availability: available
  Varpool flags:
dividerConfigurations.6197/63 (dividerConfigurations) @06059b40
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getBusDividerConfig/38 (addr)getBusDividerConfig/38 (write)getBusDividerConfig/38 (write)getBusDividerConfig/38 (write)getBusDividerConfig/38 (write)getBusDividerConfig/71 (addr)getBusDividerConfig/71 (write)getBusDividerConfig/71 (write)getBusDividerConfig/71 (write)getBusDividerConfig/71 (write)getBusDividerConfig/72 (addr)getBusDividerConfig/72 (write)getBusDividerConfig/72 (write)getBusDividerConfig/72 (write)getBusDividerConfig/72 (write)
  Availability: available
  Varpool flags:
dividerConfigurations.6177/62 (dividerConfigurations) @060593f0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getCoreDividerConfig/37 (addr)getCoreDividerConfig/37 (write)getCoreDividerConfig/37 (write)getCoreDividerConfig/37 (write)getCoreDividerConfig/37 (write)getCoreDividerConfig/69 (addr)getCoreDividerConfig/69 (write)getCoreDividerConfig/69 (write)getCoreDividerConfig/69 (write)getCoreDividerConfig/69 (write)getCoreDividerConfig/70 (addr)getCoreDividerConfig/70 (write)getCoreDividerConfig/70 (write)getCoreDividerConfig/70 (write)getCoreDividerConfig/70 (write)
  Availability: available
  Varpool flags:
clockSource.6159/61 (clockSource) @06052c60
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getSelectorConfig/36 (read)getSelectorConfig/36 (read)getSelectorConfig/36 (read)getSelectorConfig/67 (read)getSelectorConfig/67 (read)getSelectorConfig/67 (read)getSelectorConfig/68 (read)getSelectorConfig/68 (read)getSelectorConfig/68 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
selectorConfigurations.6156/60 (selectorConfigurations) @06052c18
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getSelectorConfig/36 (addr)getSelectorConfig/36 (write)getSelectorConfig/36 (write)getSelectorConfig/36 (write)getSelectorConfig/36 (write)getSelectorConfig/67 (addr)getSelectorConfig/67 (write)getSelectorConfig/67 (write)getSelectorConfig/67 (write)getSelectorConfig/67 (write)getSelectorConfig/68 (addr)getSelectorConfig/68 (write)getSelectorConfig/68 (write)getSelectorConfig/68 (write)getSelectorConfig/68 (write)
  Availability: available
  Varpool flags:
spllConfiguration.6148/59 (spllConfiguration) @060524c8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getSpllConfig/35 (write)getSpllConfig/35 (write)getSpllConfig/35 (write)getSpllConfig/35 (write)getSpllConfig/35 (addr)
  Availability: available
  Varpool flags:
soscConfiguration.6139/58 (soscConfiguration) @06052000
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getSoscConfig/34 (write)getSoscConfig/34 (write)getSoscConfig/34 (write)getSoscConfig/34 (addr)
  Availability: available
  Varpool flags:
fircConfiguration.6130/57 (fircConfiguration) @0604baf8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: getFircConfig/33 (write)getFircConfig/33 (write)getFircConfig/33 (write)getFircConfig/33 (write)getFircConfig/33 (addr)
  Availability: available
  Varpool flags:
dividerCallbacks/56 (dividerCallbacks) @0604b1f8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (addr)ClockInitializeObjects/40 (addr)ClockInitializeObjects/40 (addr)ClockInitializeObjects/40 (addr)ClockInitializeObjects/40 (addr)ClockInitializeObjects/40 (addr)
  Availability: not_available
  Varpool flags: read-only
dividerCallbackIndex/55 (dividerCallbackIndex) @0604b1b0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (read)ClockInitializeObjects/40 (read)ClockInitializeObjects/40 (read)ClockInitializeObjects/40 (read)ClockInitializeObjects/40 (read)ClockInitializeObjects/40 (read)
  Availability: not_available
  Varpool flags: read-only
selectorCallbacks/54 (selectorCallbacks) @0604b168
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (addr)ClockInitializeObjects/40 (addr)
  Availability: not_available
  Varpool flags: read-only
selectorCallbackIndex/53 (selectorCallbackIndex) @0604b120
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (read)ClockInitializeObjects/40 (read)
  Availability: not_available
  Varpool flags: read-only
extOscCallbacks/52 (extOscCallbacks) @0604b0d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (addr)
  Availability: not_available
  Varpool flags: read-only
xoscCallbackIndex/51 (xoscCallbackIndex) @0604b090
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (read)
  Availability: not_available
  Varpool flags: read-only
pllCallbacks/50 (pllCallbacks) @0604b048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (addr)
  Availability: not_available
  Varpool flags: read-only
pllCallbackIndex/49 (pllCallbackIndex) @0604b000
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ClockInitializeObjects/40 (read)
  Availability: not_available
  Varpool flags: read-only
selectorEntryPCS_hardwareValue/48 (selectorEntryPCS_hardwareValue) @0601fdc8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetSimLpoclksRegister_TrustedCall/31 (read)
  Availability: not_available
  Varpool flags: read-only
selectorEntry_hardwareValue/47 (selectorEntry_hardwareValue) @0601fd80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetSimLpoclksRegister_TrustedCall/31 (read)
  Availability: not_available
  Varpool flags: read-only
ReportClockErrors/46 (ReportClockErrors) @06017e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: SpecificPlatformInitClock/32 (37904965 (estimated locally),0.11 per call) 
  Calls: 
ClockTimeoutExpired/45 (ClockTimeoutExpired) @06017d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: SpecificPlatformInitClock/32 (1073741824 (estimated locally),3.08 per call) 
  Calls: 
ClockStartTimeout/44 (ClockStartTimeout) @06017c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: SpecificPlatformInitClock/32 (114863532 (estimated locally),0.33 per call) 
  Calls: 
intOscCallbacks/43 (intOscCallbacks) @0601f168
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: DisableSafeClock/29 (read)DisableSafeClock/29 (read)ClockInitializeObjects/40 (addr)
  Availability: not_available
  Varpool flags: read-only
ircoscCallbackIndex/42 (ircoscCallbackIndex) @0601f120
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: DisableSafeClock/29 (read)DisableSafeClock/29 (read)ClockInitializeObjects/40 (read)
  Availability: not_available
  Varpool flags: read-only
ClockPowerModeChangeNotification/41 (ClockPowerModeChangeNotification) @06017540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: scsRunClockSelector/5 (read)scsConfig_Vlpr_Mode/13 (read)coreRunClockDivider/6 (read)coreConfig_Vlpr_Mode/15 (read)busRunClockDivider/7 (read)busConfig_Vlpr_Mode/17 (read)slowRunClockDivider/8 (read)slowConfig_Vlpr_Mode/19 (read)spllClock/2 (read)spllConfig/11 (read)soscClock/3 (read)soscConfig/10 (read)fircClock/4 (read)fircConfig/9 (read)fircClock/4 (read)fircConfig/9 (read)soscClock/3 (read)soscConfig/10 (read)soscClock/3 (read)soscConfig/10 (read)spllClock/2 (read)spllConfig/11 (read)spllClock/2 (read)spllConfig/11 (read)scsRunClockSelector/5 (read)scsConfig_Run_Mode/12 (read)coreRunClockDivider/6 (read)coreConfig_Run_Mode/14 (read)busRunClockDivider/7 (read)busConfig_Run_Mode/16 (read)slowRunClockDivider/8 (read)slowConfig_Run_Mode/18 (read)fircClock/4 (read)fircConfig/9 (read)soscClock/3 (read)soscConfig/10 (read)soscClock/3 (read)soscConfig/10 (read)spllClock/2 (read)spllConfig/11 (read)spllClock/2 (read)spllConfig/11 (read)scsHsrunClockSelector/20 (read)scsConfig_Hsrun_Mode/24 (read)coreHsrunClockDivider/21 (read)coreConfig_Hsrun_Mode/25 (read)busHsrunClockDivider/22 (read)busConfig_Hsrun_Mode/26 (read)slowHsrunClockDivider/23 (read)slowConfig_Hsrun_Mode/27 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(91268055 (estimated locally),0.08 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
ClockInitializeObjects/40 (ClockInitializeObjects) @060172a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pllCallbackIndex/49 (read)pllCallbacks/50 (addr)spllClock/2 (write)xoscCallbackIndex/51 (read)extOscCallbacks/52 (addr)soscClock/3 (write)ircoscCallbackIndex/42 (read)intOscCallbacks/43 (addr)fircClock/4 (write)selectorCallbackIndex/53 (read)selectorCallbacks/54 (addr)scsRunClockSelector/5 (write)selectorCallbackIndex/53 (read)selectorCallbacks/54 (addr)scsHsrunClockSelector/20 (write)dividerCallbackIndex/55 (read)dividerCallbacks/56 (addr)coreRunClockDivider/6 (write)dividerCallbackIndex/55 (read)dividerCallbacks/56 (addr)coreHsrunClockDivider/21 (write)dividerCallbackIndex/55 (read)dividerCallbacks/56 (addr)busRunClockDivider/7 (write)dividerCallbackIndex/55 (read)dividerCallbacks/56 (addr)busHsrunClockDivider/22 (write)dividerCallbackIndex/55 (read)dividerCallbacks/56 (addr)slowRunClockDivider/8 (write)dividerCallbackIndex/55 (read)dividerCallbacks/56 (addr)slowHsrunClockDivider/23 (write)fircConfig/9 (write)soscConfig/10 (write)spllConfig/11 (write)scsConfig_Run_Mode/12 (write)scsConfig_Vlpr_Mode/13 (write)scsConfig_Hsrun_Mode/24 (write)coreConfig_Run_Mode/14 (write)coreConfig_Vlpr_Mode/15 (write)coreConfig_Hsrun_Mode/25 (write)busConfig_Run_Mode/16 (write)busConfig_Vlpr_Mode/17 (write)busConfig_Hsrun_Mode/26 (write)slowConfig_Run_Mode/18 (write)slowConfig_Vlpr_Mode/19 (write)slowConfig_Hsrun_Mode/27 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: getSlowDividerConfig/39 (inlined) (1073741824 (estimated locally),1.00 per call) getSlowDividerConfig/66 (inlined) (1073741824 (estimated locally),1.00 per call) getSlowDividerConfig/65 (inlined) (1073741824 (estimated locally),1.00 per call) getBusDividerConfig/38 (inlined) (1073741824 (estimated locally),1.00 per call) getBusDividerConfig/72 (inlined) (1073741824 (estimated locally),1.00 per call) getBusDividerConfig/71 (inlined) (1073741824 (estimated locally),1.00 per call) getCoreDividerConfig/37 (inlined) (1073741824 (estimated locally),1.00 per call) getCoreDividerConfig/70 (inlined) (1073741824 (estimated locally),1.00 per call) getCoreDividerConfig/69 (inlined) (1073741824 (estimated locally),1.00 per call) getSelectorConfig/36 (inlined) (1073741824 (estimated locally),1.00 per call) getSelectorConfig/68 (inlined) (1073741824 (estimated locally),1.00 per call) getSelectorConfig/67 (inlined) (1073741824 (estimated locally),1.00 per call) getSpllConfig/35 (inlined) (1073741824 (estimated locally),1.00 per call) getSoscConfig/34 (inlined) (1073741824 (estimated locally),1.00 per call) getFircConfig/33 (inlined) (1073741824 (estimated locally),1.00 per call) 
getSlowDividerConfig/39 (getSlowDividerConfig) @06017000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 65
  References: config_clock/1 (read)dividerConfigurations.6217/64 (addr)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)dividerConfigurations.6217/64 (write)
  Referring: 
  Function getSlowDividerConfig/39 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getBusDividerConfig/38 (getBusDividerConfig) @05fa5b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 71
  References: config_clock/1 (read)dividerConfigurations.6197/63 (addr)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)dividerConfigurations.6197/63 (write)
  Referring: 
  Function getBusDividerConfig/38 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getCoreDividerConfig/37 (getCoreDividerConfig) @05fa5620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 69
  References: config_clock/1 (read)dividerConfigurations.6177/62 (addr)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)dividerConfigurations.6177/62 (write)
  Referring: 
  Function getCoreDividerConfig/37 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSelectorConfig/36 (getSelectorConfig) @05fa50e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 67
  References: config_clock/1 (read)selectorConfigurations.6156/60 (addr)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)clockSource.6159/61 (read)selectorConfigurations.6156/60 (write)
  Referring: 
  Function getSelectorConfig/36 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSpllConfig/35 (getSpllConfig) @05fa5d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: config_clock/1 (read)spllConfiguration.6148/59 (write)spllConfiguration.6148/59 (write)spllConfiguration.6148/59 (write)spllConfiguration.6148/59 (write)spllConfiguration.6148/59 (addr)
  Referring: 
  Function getSpllConfig/35 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getSoscConfig/34 (getSoscConfig) @05fa5a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: config_clock/1 (read)soscConfiguration.6139/58 (write)soscConfiguration.6139/58 (write)soscConfiguration.6139/58 (write)soscConfiguration.6139/58 (addr)
  Referring: 
  Function getSoscConfig/34 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
getFircConfig/33 (getFircConfig) @05fa57e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: config_clock/1 (read)fircConfiguration.6130/57 (write)fircConfiguration.6130/57 (write)fircConfiguration.6130/57 (write)fircConfiguration.6130/57 (write)fircConfiguration.6130/57 (addr)
  Referring: 
  Function getFircConfig/33 is inline copy in ClockInitializeObjects/40
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: ClockInitializeObjects/40 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SpecificPlatformInitClock/32 (SpecificPlatformInitClock) @05fa5540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: config_clock/1 (write)fircWasEnabledBeforeMcuInit/0 (write)fircWasEnabledBeforeMcuInit/0 (write)
  Referring: 
  Availability: available
  Function flags: count:348071309 (estimated locally) body optimize_size
  Called by: 
  Calls: SetSimLpoclksRegister_TrustedCall/31 (inlined) (348071309 (estimated locally),1.00 per call) ReportClockErrors/46 (37904965 (estimated locally),0.11 per call) ClockTimeoutExpired/45 (1073741824 (estimated locally),3.08 per call) ClockStartTimeout/44 (114863532 (estimated locally),0.33 per call) SetFircToResetValue_TrustedCall/30 (inlined) (114863532 (estimated locally),0.33 per call) 
SetSimLpoclksRegister_TrustedCall/31 (SetSimLpoclksRegister_TrustedCall) @05fa52a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: selectorEntry_hardwareValue/47 (read)selectorEntryPCS_hardwareValue/48 (read)
  Referring: 
  Function SetSimLpoclksRegister_TrustedCall/31 is inline copy in SpecificPlatformInitClock/32
  Availability: local
  Function flags: count:348071309 (estimated locally) body local optimize_size
  Called by: SpecificPlatformInitClock/32 (inlined) (348071309 (estimated locally),1.00 per call) 
  Calls: 
SetFircToResetValue_TrustedCall/30 (SetFircToResetValue_TrustedCall) @05fa5000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function SetFircToResetValue_TrustedCall/30 is inline copy in SpecificPlatformInitClock/32
  Availability: local
  Function flags: count:114863532 (estimated locally) body local optimize_size
  Called by: SpecificPlatformInitClock/32 (inlined) (114863532 (estimated locally),0.33 per call) 
  Calls: 
DisableSafeClock/29 (DisableSafeClock) @05f4ad20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ircoscCallbackIndex/42 (read)intOscCallbacks/43 (read)config_clock/1 (read)fircWasEnabledBeforeMcuInit/0 (read)ircoscCallbackIndex/42 (read)intOscCallbacks/43 (read)
  Referring: 
  Availability: available
  Function flags: count:164090760 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(54141514 (estimated locally),0.33 per call) 
   Indirect call(27903866 (estimated locally),0.17 per call) 
SpecificPeripheralClockInitialization/28 (SpecificPeripheralClockInitialization) @05f4aa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
slowConfig_Hsrun_Mode/27 (slowConfig_Hsrun_Mode) @05f49750
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
busConfig_Hsrun_Mode/26 (busConfig_Hsrun_Mode) @05f496c0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
coreConfig_Hsrun_Mode/25 (coreConfig_Hsrun_Mode) @05f49630
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
scsConfig_Hsrun_Mode/24 (scsConfig_Hsrun_Mode) @05f495a0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
slowHsrunClockDivider/23 (slowHsrunClockDivider) @05f49510
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
busHsrunClockDivider/22 (busHsrunClockDivider) @05f49480
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
coreHsrunClockDivider/21 (coreHsrunClockDivider) @05f493f0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
scsHsrunClockSelector/20 (scsHsrunClockSelector) @05f49360
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
slowConfig_Vlpr_Mode/19 (slowConfig_Vlpr_Mode) @05f492d0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
slowConfig_Run_Mode/18 (slowConfig_Run_Mode) @05f49240
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
busConfig_Vlpr_Mode/17 (busConfig_Vlpr_Mode) @05f491b0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
busConfig_Run_Mode/16 (busConfig_Run_Mode) @05f49120
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
coreConfig_Vlpr_Mode/15 (coreConfig_Vlpr_Mode) @05f49090
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
coreConfig_Run_Mode/14 (coreConfig_Run_Mode) @05f49000
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
scsConfig_Vlpr_Mode/13 (scsConfig_Vlpr_Mode) @05f46f30
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
scsConfig_Run_Mode/12 (scsConfig_Run_Mode) @05f46ea0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
spllConfig/11 (spllConfig) @05f46d80
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
soscConfig/10 (soscConfig) @05f46cf0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
fircConfig/9 (fircConfig) @05f46c60
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
slowRunClockDivider/8 (slowRunClockDivider) @05f46bd0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
busRunClockDivider/7 (busRunClockDivider) @05f46b40
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
coreRunClockDivider/6 (coreRunClockDivider) @05f46ab0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
scsRunClockSelector/5 (scsRunClockSelector) @05f46a20
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
fircClock/4 (fircClock) @05f46948
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
soscClock/3 (soscClock) @05f468b8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
spllClock/2 (spllClock) @05f46828
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: ClockInitializeObjects/40 (write)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)ClockPowerModeChangeNotification/41 (read)
  Availability: available
  Varpool flags:
config_clock/1 (config_clock) @05f46798
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: DisableSafeClock/29 (read)getSpllConfig/35 (read)getBusDividerConfig/38 (read)getSlowDividerConfig/39 (read)getSoscConfig/34 (read)getSelectorConfig/36 (read)getFircConfig/33 (read)getCoreDividerConfig/37 (read)SpecificPlatformInitClock/32 (write)getSlowDividerConfig/65 (read)getSlowDividerConfig/66 (read)getSelectorConfig/67 (read)getSelectorConfig/68 (read)getCoreDividerConfig/69 (read)getCoreDividerConfig/70 (read)getBusDividerConfig/71 (read)getBusDividerConfig/72 (read)
  Availability: available
  Varpool flags:
fircWasEnabledBeforeMcuInit/0 (fircWasEnabledBeforeMcuInit) @05f46708
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: DisableSafeClock/29 (read)SpecificPlatformInitClock/32 (write)SpecificPlatformInitClock/32 (write)
  Availability: available
  Varpool flags:

;; Function SpecificPeripheralClockInitialization (SpecificPeripheralClockInitialization, funcdef_no=0, decl_uid=6032, cgraph_uid=1, symbol_order=28)

SpecificPeripheralClockInitialization (const struct Clock_IP_SpecificPeriphConfigType * config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function DisableSafeClock (DisableSafeClock, funcdef_no=1, decl_uid=5872, cgraph_uid=2, symbol_order=29)

DisableSafeClock (const struct Clock_Ip_ClockConfigType * config)
{
  uint32 i;
  <unnamed type> _1;
  short unsigned int _2;
  unsigned char _3;
  int _4;
  void (*<T558>) (Clock_Ip_NameType) _5;
  const struct Clock_Ip_ClockConfigType * config_clock.2_6;
  unsigned char _7;
  long unsigned int _8;
  _Bool fircWasEnabledBeforeMcuInit.3_9;
  unsigned char _10;
  int _11;
  void (*<T558>) (Clock_Ip_NameType) _12;
  const struct Clock_Ip_ClockConfigType * config_clock.2_15;

  <bb 2> [local count: 164090760]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG fircConfigFound => 0
  # DEBUG BEGIN_STMT
  if (config_16(D) != 0B)
    goto <bb 11>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 11> [local count: 114863532]:
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 1014686024]:
  # DEBUG BEGIN_STMT
  _1 = config_clock.2_6->ircoscs[i_13].name;
  if (_1 == 5)
    goto <bb 4>; [5.50%]
  else
    goto <bb 6>; [94.50%]

  <bb 4> [local count: 55807731]:
  # config_clock.2_15 = PHI <config_clock.2_6(3)>
  # i_19 = PHI <i_13(3)>
  # DEBUG BEGIN_STMT
  # DEBUG fircConfigFound => 1
  # DEBUG BEGIN_STMT
  _2 = config_clock.2_15->ircoscs[i_19].enable;
  if (_2 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 5> [local count: 27903866]:
  # DEBUG BEGIN_STMT
  _3 = ircoscCallbackIndex[4];
  _4 = (int) _3;
  _5 = intOscCallbacks[_4].Disable;
  _5 (5);
  # DEBUG fircConfigFound => 1
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 6> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  i_18 = i_13 + 1;
  # DEBUG i => i_18

  <bb 7> [local count: 1073741824]:
  # i_13 = PHI <i_18(6), 0(11)>
  # DEBUG i => i_13
  # DEBUG BEGIN_STMT
  config_clock.2_6 = config_clock;
  _7 = config_clock.2_6->ircoscsCount;
  _8 = (long unsigned int) _7;
  if (_8 > i_13)
    goto <bb 3>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 108283028]:
  # DEBUG fircConfigFound => NULL
  fircWasEnabledBeforeMcuInit.3_9 = fircWasEnabledBeforeMcuInit;
  if (fircWasEnabledBeforeMcuInit.3_9 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 54141514]:
  # DEBUG BEGIN_STMT
  _10 = ircoscCallbackIndex[4];
  _11 = (int) _10;
  _12 = intOscCallbacks[_11].Disable;
  _12 (5);

  <bb 10> [local count: 164090760]:
  # DEBUG fircConfigFound => NULL
  return;

}



;; Function SpecificPlatformInitClock (SpecificPlatformInitClock, funcdef_no=4, decl_uid=6034, cgraph_uid=5, symbol_order=32)


Symbols to be put in SSA form
{ D.6355 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 29
Number of blocks to update: 28 ( 97%)


Merging blocks 3 and 12
Merging blocks 9 and 14
Removing basic block 10
Removing basic block 21
Merging blocks 28 and 13
Merging blocks 3 and 11
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 18 19 16 17
;;
;; Loop 3
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 12 13 10 11
;;
;; Loop 1
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 3 8 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 4 6 }
;; 6 succs { 7 9 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 15 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 10 21 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 16 22 }
;; 22 succs { 1 }
SpecificPlatformInitClock (const struct Clock_Ip_ClockConfigType * config)
{
  uint32 SimLpoValue;
  uint32 i;
  uint32 IrcoscStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int TimeoutTicks.4_5;
  long unsigned int _24;
  long unsigned int _25;
  <unnamed type> _27;
  <unnamed type> _28;
  unsigned char _29;
  long unsigned int _30;
  long unsigned int _31;
  <unnamed type> _34;
  unsigned char _35;
  long unsigned int _36;
  long unsigned int _37;
  unsigned char _41;
  long unsigned int _42;
  <unnamed type> _44;
  short unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  short unsigned int _50;
  long unsigned int _51;
  unsigned char _55;
  long unsigned int _56;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config_clock = config_10(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].FIRCCSR;
  _2 = _1 & 1;
  if (_2 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  fircWasEnabledBeforeMcuInit = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY SetFircToResetValue_TrustedCall
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].FIRCCFG ={v} 0;
  # DEBUG BEGIN_STMT
  _24 ={v} MEM[(struct SCG_Type *)1074151424B].FIRCCSR;
  _25 = _24 | 1;
  MEM[(struct SCG_Type *)1074151424B].FIRCCSR ={v} _25;
  # DEBUG BEGIN_STMT
  ClockStartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 364354548]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SCG_Type *)1074151424B].FIRCCSR;
  _4 = _3 >> 24;
  IrcoscStatus_16 = _4 & 1;
  # DEBUG IrcoscStatus => IrcoscStatus_16
  # DEBUG BEGIN_STMT
  TimeoutTicks.4_5 = TimeoutTicks;
  TimeoutOccurred_18 = ClockTimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.4_5);
  # DEBUG TimeoutOccurred => TimeoutOccurred_18
  # DEBUG BEGIN_STMT
  if (IrcoscStatus_16 == 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 344315048]:
  if (TimeoutOccurred_18 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 4>; [94.50%]

  <bb 6> [local count: 38976828]:
  # TimeoutOccurred_8 = PHI <TimeoutOccurred_18(4), TimeoutOccurred_18(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_8 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 7> [local count: 12862353]:
  # DEBUG BEGIN_STMT
  ReportClockErrors (1, 5);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 79134772]:
  # DEBUG BEGIN_STMT
  fircWasEnabledBeforeMcuInit = 1;

  <bb 9> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG config => config_10(D)
  # DEBUG INLINE_ENTRY SetSimLpoclksRegister_TrustedCall
  # DEBUG BEGIN_STMT
  # DEBUG SimLpoValue => 3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 15>; [100.00%]

  <bb 10> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _27 = config_10(D)->selectors[i_26].name;
  if (_27 == 40)
    goto <bb 11>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 11> [local count: 324914275]:
  # DEBUG BEGIN_STMT
  _28 = config_10(D)->selectors[i_26].value;
  _29 = selectorEntry_hardwareValue[_28];
  _30 = (long unsigned int) _29;
  _31 = _30 << 4;
  SimLpoValue_33 = _31 | SimLpoValue_32;
  # DEBUG SimLpoValue => SimLpoValue_33

  <bb 12> [local count: 955630222]:
  # SimLpoValue_38 = PHI <SimLpoValue_32(10), SimLpoValue_33(11)>
  # DEBUG SimLpoValue => SimLpoValue_38
  # DEBUG BEGIN_STMT
  if (_27 == 41)
    goto <bb 13>; [34.00%]
  else
    goto <bb 14>; [66.00%]

  <bb 13> [local count: 324914275]:
  # DEBUG BEGIN_STMT
  _34 = config_10(D)->selectors[i_26].value;
  _35 = selectorEntryPCS_hardwareValue[_34];
  _36 = (long unsigned int) _35;
  _37 = _36 << 2;
  SimLpoValue_39 = _37 | SimLpoValue_38;
  # DEBUG SimLpoValue => SimLpoValue_39

  <bb 14> [local count: 955630222]:
  # SimLpoValue_58 = PHI <SimLpoValue_38(12), SimLpoValue_39(13)>
  # DEBUG SimLpoValue => SimLpoValue_58
  # DEBUG BEGIN_STMT
  i_40 = i_26 + 1;
  # DEBUG i => i_40

  <bb 15> [local count: 1073741820]:
  # SimLpoValue_32 = PHI <3(9), SimLpoValue_58(14)>
  # i_26 = PHI <0(9), i_40(14)>
  # DEBUG i => i_26
  # DEBUG SimLpoValue => SimLpoValue_32
  # DEBUG BEGIN_STMT
  _41 = config_10(D)->selectorsCount;
  _42 = (long unsigned int) _41;
  if (i_26 < _42)
    goto <bb 10>; [89.00%]
  else
    goto <bb 21>; [11.00%]

  <bb 16> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _44 = config_10(D)->gates[i_43].name;
  if (_44 == 18)
    goto <bb 17>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 17> [local count: 324914276]:
  # DEBUG BEGIN_STMT
  _45 = config_10(D)->gates[i_43].enable;
  _46 = (long unsigned int) _45;
  _47 = _46 << 1;
  SimLpoValue_49 = _47 | SimLpoValue_48;
  # DEBUG SimLpoValue => SimLpoValue_49

  <bb 18> [local count: 955630224]:
  # SimLpoValue_52 = PHI <SimLpoValue_48(16), SimLpoValue_49(17)>
  # DEBUG SimLpoValue => SimLpoValue_52
  # DEBUG BEGIN_STMT
  if (_44 == 19)
    goto <bb 19>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 19> [local count: 324914276]:
  # DEBUG BEGIN_STMT
  _50 = config_10(D)->gates[i_43].enable;
  _51 = (long unsigned int) _50;
  SimLpoValue_53 = _51 | SimLpoValue_52;
  # DEBUG SimLpoValue => SimLpoValue_53

  <bb 20> [local count: 955630224]:
  # SimLpoValue_59 = PHI <SimLpoValue_52(18), SimLpoValue_53(19)>
  # DEBUG SimLpoValue => SimLpoValue_59
  # DEBUG BEGIN_STMT
  i_54 = i_43 + 1;
  # DEBUG i => i_54

  <bb 21> [local count: 1073741824]:
  # SimLpoValue_48 = PHI <SimLpoValue_32(15), SimLpoValue_59(20)>
  # i_43 = PHI <0(15), i_54(20)>
  # DEBUG i => i_43
  # DEBUG SimLpoValue => SimLpoValue_48
  # DEBUG BEGIN_STMT
  _55 = config_10(D)->gatesCount;
  _56 = (long unsigned int) _55;
  if (i_43 < _56)
    goto <bb 16>; [89.00%]
  else
    goto <bb 22>; [11.00%]

  <bb 22> [local count: 118111601]:
  # SimLpoValue_57 = PHI <SimLpoValue_48(21)>
  # DEBUG BEGIN_STMT
  MEM[(struct SIM_Type *)1074036736B].LPOCLKS ={v} SimLpoValue_57;
  # DEBUG config => NULL
  # DEBUG i => NULL
  # DEBUG SimLpoValue => NULL
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function ClockInitializeObjects (ClockInitializeObjects, funcdef_no=12, decl_uid=6024, cgraph_uid=13, symbol_order=40)

Removing basic block 5
Removing basic block 15
Removing basic block 16
Removing basic block 22
Removing basic block 31
Removing basic block 33
Removing basic block 37
Removing basic block 38
Removing basic block 48
Removing basic block 49
Removing basic block 53
Removing basic block 63
Removing basic block 64
Removing basic block 70
Removing basic block 79
Removing basic block 81
Removing basic block 85
Removing basic block 86
Removing basic block 96
Removing basic block 97
Removing basic block 101
Removing basic block 111
Removing basic block 112
Removing basic block 118
Removing basic block 127
Removing basic block 129
Removing basic block 133
Removing basic block 134
Removing basic block 144
Removing basic block 145
Removing basic block 149
Removing basic block 159
Removing basic block 160
Removing basic block 166
Removing basic block 175
Removing basic block 177
Removing basic block 181
Removing basic block 182
Removing basic block 192
Removing basic block 193

Symbols to be put in SSA form
{ D.6356 D.6409 D.6421 D.6433 D.6445 D.6457 D.6469 D.6481 D.6493 D.6505 D.6517 D.6529 D.6541 D.6551 D.6554 D.6557 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 225
Number of blocks to update: 184 ( 82%)


Merging blocks 2 and 216
Removing basic block 4
Removing basic block 6
Removing basic block 8
Merging blocks 14 and 17
Merging blocks 18 and 3
Removing basic block 20
Removing basic block 21
Removing basic block 24
Merging blocks 30 and 32
Merging blocks 34 and 19
Removing basic block 36
Removing basic block 40
Merging blocks 46 and 47
Merging blocks 50 and 35
Removing basic block 52
Removing basic block 54
Removing basic block 56
Merging blocks 62 and 65
Merging blocks 66 and 51
Removing basic block 68
Removing basic block 69
Removing basic block 72
Merging blocks 78 and 80
Merging blocks 82 and 67
Removing basic block 84
Removing basic block 88
Merging blocks 94 and 95
Merging blocks 98 and 83
Removing basic block 100
Removing basic block 102
Removing basic block 104
Merging blocks 110 and 113
Merging blocks 114 and 99
Removing basic block 116
Removing basic block 117
Removing basic block 120
Merging blocks 126 and 128
Merging blocks 130 and 115
Removing basic block 132
Removing basic block 136
Merging blocks 142 and 143
Merging blocks 146 and 131
Removing basic block 148
Removing basic block 150
Removing basic block 152
Merging blocks 158 and 161
Merging blocks 162 and 147
Removing basic block 164
Removing basic block 165
Removing basic block 168
Merging blocks 174 and 176
Merging blocks 178 and 163
Removing basic block 180
Removing basic block 184
Merging blocks 190 and 191
Merging blocks 194 and 179
Removing basic block 197
Merging blocks 204 and 195
Removing basic block 207
Merging blocks 214 and 205
Removing basic block 217
Merging blocks 224 and 215
Merging blocks 34 and 7
Merging blocks 50 and 23
Merging blocks 66 and 39
Merging blocks 82 and 55
Merging blocks 98 and 71
Merging blocks 114 and 87
Merging blocks 130 and 103
Merging blocks 146 and 119
Merging blocks 162 and 135
Merging blocks 178 and 151
Merging blocks 194 and 167
Merging blocks 204 and 183
Merging blocks 214 and 196
Merging blocks 224 and 206
;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
;;
;; Loop 1
;;  header 104, latch 103
;;  depth 1, outer 0
;;  nodes: 104 103 101
;;
;; Loop 2
;;  header 97, latch 96
;;  depth 1, outer 0
;;  nodes: 97 96 94
;;
;; Loop 3
;;  header 90, latch 89
;;  depth 1, outer 0
;;  nodes: 90 89 87
;;
;; Loop 4
;;  header 83, latch 82
;;  depth 1, outer 0
;;  nodes: 83 82 80
;;
;; Loop 5
;;  header 76, latch 75
;;  depth 1, outer 0
;;  nodes: 76 75 73
;;
;; Loop 6
;;  header 69, latch 68
;;  depth 1, outer 0
;;  nodes: 69 68 66
;;
;; Loop 7
;;  header 62, latch 61
;;  depth 1, outer 0
;;  nodes: 62 61 59
;;
;; Loop 8
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54 52
;;
;; Loop 9
;;  header 48, latch 47
;;  depth 1, outer 0
;;  nodes: 48 47 45
;;
;; Loop 10
;;  header 41, latch 40
;;  depth 1, outer 0
;;  nodes: 41 40 38
;;
;; Loop 11
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31
;;
;; Loop 12
;;  header 27, latch 26
;;  depth 1, outer 0
;;  nodes: 27 26 24
;;
;; Loop 13
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 17
;;
;; Loop 14
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 10
;;
;; Loop 15
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 8 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 13 15 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 13 }
;; 13 succs { 10 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 20 22 }
;; 17 succs { 18 19 }
;; 18 succs { 21 }
;; 19 succs { 20 }
;; 20 succs { 17 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 27 29 }
;; 24 succs { 25 26 }
;; 25 succs { 28 }
;; 26 succs { 27 }
;; 27 succs { 24 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 34 36 }
;; 31 succs { 32 33 }
;; 32 succs { 35 }
;; 33 succs { 34 }
;; 34 succs { 31 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 41 43 }
;; 38 succs { 39 40 }
;; 39 succs { 42 }
;; 40 succs { 41 }
;; 41 succs { 38 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 48 50 }
;; 45 succs { 46 47 }
;; 46 succs { 49 }
;; 47 succs { 48 }
;; 48 succs { 45 49 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 55 57 }
;; 52 succs { 53 54 }
;; 53 succs { 56 }
;; 54 succs { 55 }
;; 55 succs { 52 56 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 62 64 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 62 }
;; 62 succs { 59 63 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 69 71 }
;; 66 succs { 67 68 }
;; 67 succs { 70 }
;; 68 succs { 69 }
;; 69 succs { 66 70 }
;; 70 succs { 71 72 }
;; 71 succs { 72 }
;; 72 succs { 76 78 }
;; 73 succs { 74 75 }
;; 74 succs { 77 }
;; 75 succs { 76 }
;; 76 succs { 73 77 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 83 85 }
;; 80 succs { 81 82 }
;; 81 succs { 84 }
;; 82 succs { 83 }
;; 83 succs { 80 84 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 90 92 }
;; 87 succs { 88 89 }
;; 88 succs { 91 }
;; 89 succs { 90 }
;; 90 succs { 87 91 }
;; 91 succs { 92 93 }
;; 92 succs { 93 }
;; 93 succs { 97 99 }
;; 94 succs { 95 96 }
;; 95 succs { 98 }
;; 96 succs { 97 }
;; 97 succs { 94 98 }
;; 98 succs { 99 100 }
;; 99 succs { 100 }
;; 100 succs { 104 106 }
;; 101 succs { 102 103 }
;; 102 succs { 105 }
;; 103 succs { 104 }
;; 104 succs { 101 105 }
;; 105 succs { 106 107 }
;; 106 succs { 107 }
;; 107 succs { 1 }
ClockInitializeObjects ()
{
  uint32 i;
  const struct Clock_Ip_IrcoscConfigType * returnValue;
  const struct Clock_Ip_IrcoscConfigType * D.6557;
  static struct Clock_Ip_IrcoscConfigType fircConfiguration;
  uint32 i;
  const struct Clock_Ip_XoscConfigType * returnValue;
  const struct Clock_Ip_XoscConfigType * D.6554;
  static struct Clock_Ip_XoscConfigType soscConfiguration;
  uint32 i;
  const struct Clock_Ip_PllConfigType * returnValue;
  const struct Clock_Ip_PllConfigType * D.6551;
  static struct Clock_Ip_PllConfigType spllConfiguration;
  const struct Clock_Ip_SelectorConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_SelectorConfigType * D.6541;
  static const Clock_Ip_NameType clockSource[7] = {0, 8, 2, 5, 0, 0, 9};
  static struct Clock_Ip_SelectorConfigType selectorConfigurations[3];
  const struct Clock_Ip_SelectorConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_SelectorConfigType * D.6529;
  static const Clock_Ip_NameType clockSource[7] = {0, 8, 2, 5, 0, 0, 9};
  static struct Clock_Ip_SelectorConfigType selectorConfigurations[3];
  const struct Clock_Ip_SelectorConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_SelectorConfigType * D.6517;
  static const Clock_Ip_NameType clockSource[7] = {0, 8, 2, 5, 0, 0, 9};
  static struct Clock_Ip_SelectorConfigType selectorConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6505;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6493;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6481;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6469;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6457;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6445;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6433;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6421;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  const struct Clock_Ip_DividerConfigType * returnValue;
  uint32 i;
  const struct Clock_Ip_DividerConfigType * D.6409;
  static struct Clock_Ip_DividerConfigType dividerConfigurations[3];
  unsigned char _1;
  int _2;
  const struct pllCallback * _3;
  unsigned char _4;
  int _5;
  const struct extOscCallback * _6;
  unsigned char _7;
  int _8;
  const struct intOscCallback * _9;
  unsigned char _10;
  int _11;
  const struct selectorCallback * _12;
  unsigned char _13;
  int _14;
  const struct selectorCallback * _15;
  unsigned char _16;
  int _17;
  const struct dividerCallback * _18;
  unsigned char _19;
  int _20;
  const struct dividerCallback * _21;
  unsigned char _22;
  int _23;
  const struct dividerCallback * _24;
  unsigned char _25;
  int _26;
  const struct dividerCallback * _27;
  unsigned char _28;
  int _29;
  const struct dividerCallback * _30;
  unsigned char _31;
  int _32;
  const struct dividerCallback * _33;
  const struct Clock_Ip_IrcoscConfigType * _34;
  const struct Clock_Ip_XoscConfigType * _35;
  const struct Clock_Ip_PllConfigType * _36;
  const struct Clock_Ip_SelectorConfigType * _37;
  const struct Clock_Ip_SelectorConfigType * _38;
  const struct Clock_Ip_SelectorConfigType * _39;
  const struct Clock_Ip_DividerConfigType * _40;
  const struct Clock_Ip_DividerConfigType * _41;
  const struct Clock_Ip_DividerConfigType * _42;
  const struct Clock_Ip_DividerConfigType * _43;
  const struct Clock_Ip_DividerConfigType * _44;
  const struct Clock_Ip_DividerConfigType * _45;
  const struct Clock_Ip_DividerConfigType * _46;
  const struct Clock_Ip_DividerConfigType * _47;
  const struct Clock_Ip_DividerConfigType * _48;
  const struct Clock_Ip_ClockConfigType * config_clock.29_91;
  <unnamed type> _93;
  unsigned char _97;
  long unsigned int _98;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  const struct Clock_Ip_ClockConfigType * config_clock.29_112;
  <unnamed type> _114;
  unsigned char _118;
  long unsigned int _119;
  long unsigned int _126;
  long unsigned int _127;
  long unsigned int _128;
  const struct Clock_Ip_ClockConfigType * config_clock.29_133;
  <unnamed type> _135;
  unsigned char _139;
  long unsigned int _140;
  long unsigned int _144;
  long unsigned int _145;
  long unsigned int _146;
  const struct Clock_Ip_ClockConfigType * config_clock.25_154;
  <unnamed type> _156;
  unsigned char _160;
  long unsigned int _161;
  long unsigned int _173;
  long unsigned int _174;
  long unsigned int _175;
  long unsigned int _176;
  const struct Clock_Ip_ClockConfigType * config_clock.25_178;
  <unnamed type> _180;
  unsigned char _184;
  long unsigned int _185;
  long unsigned int _193;
  long unsigned int _194;
  long unsigned int _195;
  long unsigned int _196;
  const struct Clock_Ip_ClockConfigType * config_clock.25_202;
  <unnamed type> _204;
  unsigned char _208;
  long unsigned int _209;
  long unsigned int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  const struct Clock_Ip_ClockConfigType * config_clock.21_226;
  <unnamed type> _228;
  unsigned char _232;
  long unsigned int _233;
  long unsigned int _245;
  long unsigned int _246;
  long unsigned int _247;
  long unsigned int _248;
  const struct Clock_Ip_ClockConfigType * config_clock.21_250;
  <unnamed type> _252;
  unsigned char _256;
  long unsigned int _257;
  long unsigned int _265;
  long unsigned int _266;
  long unsigned int _267;
  long unsigned int _268;
  const struct Clock_Ip_ClockConfigType * config_clock.21_274;
  <unnamed type> _276;
  unsigned char _280;
  long unsigned int _281;
  long unsigned int _285;
  long unsigned int _286;
  long unsigned int _287;
  long unsigned int _288;
  const struct Clock_Ip_ClockConfigType * config_clock.17_298;
  <unnamed type> _300;
  unsigned char _304;
  long unsigned int _305;
  long unsigned int _317;
  long unsigned int _318;
  long unsigned int _319;
  <unnamed type> _320;
  const struct Clock_Ip_ClockConfigType * config_clock.17_322;
  <unnamed type> _324;
  unsigned char _328;
  long unsigned int _329;
  long unsigned int _337;
  long unsigned int _338;
  long unsigned int _339;
  <unnamed type> _340;
  const struct Clock_Ip_ClockConfigType * config_clock.17_346;
  <unnamed type> _348;
  unsigned char _352;
  long unsigned int _353;
  long unsigned int _357;
  long unsigned int _358;
  long unsigned int _359;
  <unnamed type> _360;
  const struct Clock_Ip_ClockConfigType * config_clock.13_370;
  <unnamed type> _372;
  unsigned char _376;
  long unsigned int _377;
  long unsigned int _379;
  short unsigned int _380;
  short unsigned int _381;
  long unsigned int _382;
  long unsigned int _383;
  unsigned char _384;
  unsigned char _385;
  long unsigned int _386;
  long unsigned int _387;
  unsigned char _388;
  unsigned char _389;
  const struct Clock_Ip_ClockConfigType * config_clock.9_391;
  <unnamed type> _393;
  unsigned char _397;
  long unsigned int _398;
  long unsigned int _400;
  short unsigned int _401;
  short unsigned int _402;
  const struct Clock_Ip_ClockConfigType * config_clock.5_404;
  <unnamed type> _406;
  unsigned char _410;
  long unsigned int _411;
  long unsigned int _413;
  short unsigned int _414;
  short unsigned int _415;
  long unsigned int _416;
  unsigned char _417;
  unsigned char _418;
  long unsigned int _419;
  int _420;
  int _421;
  int _422;
  unsigned char _423;
  unsigned char _424;

  <bb 2> [local count: 164090760]:
  # DEBUG BEGIN_STMT
  _1 = pllCallbackIndex[1];
  _2 = (int) _1;
  _3 = &pllCallbacks[_2];
  spllClock = _3;
  # DEBUG BEGIN_STMT
  _4 = xoscCallbackIndex[1];
  _5 = (int) _4;
  _6 = &extOscCallbacks[_5];
  soscClock = _6;
  # DEBUG BEGIN_STMT
  _7 = ircoscCallbackIndex[4];
  _8 = (int) _7;
  _9 = &intOscCallbacks[_8];
  fircClock = _9;
  # DEBUG BEGIN_STMT
  _10 = selectorCallbackIndex[5];
  _11 = (int) _10;
  _12 = &selectorCallbacks[_11];
  scsRunClockSelector = _12;
  # DEBUG BEGIN_STMT
  _13 = selectorCallbackIndex[7];
  _14 = (int) _13;
  _15 = &selectorCallbacks[_14];
  scsHsrunClockSelector = _15;
  # DEBUG BEGIN_STMT
  _16 = dividerCallbackIndex[6];
  _17 = (int) _16;
  _18 = &dividerCallbacks[_17];
  coreRunClockDivider = _18;
  # DEBUG BEGIN_STMT
  _19 = dividerCallbackIndex[8];
  _20 = (int) _19;
  _21 = &dividerCallbacks[_20];
  coreHsrunClockDivider = _21;
  # DEBUG BEGIN_STMT
  _22 = dividerCallbackIndex[9];
  _23 = (int) _22;
  _24 = &dividerCallbacks[_23];
  busRunClockDivider = _24;
  # DEBUG BEGIN_STMT
  _25 = dividerCallbackIndex[11];
  _26 = (int) _25;
  _27 = &dividerCallbacks[_26];
  busHsrunClockDivider = _27;
  # DEBUG BEGIN_STMT
  _28 = dividerCallbackIndex[12];
  _29 = (int) _28;
  _30 = &dividerCallbacks[_29];
  slowRunClockDivider = _30;
  # DEBUG BEGIN_STMT
  _31 = dividerCallbackIndex[14];
  _32 = (int) _31;
  _33 = &dividerCallbacks[_32];
  slowHsrunClockDivider = _33;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY getFircConfig
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config_clock.5_404 = config_clock;
  if (config_clock.5_404 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 3> [local count: 1014686024]:
  # DEBUG BEGIN_STMT
  _406 = config_clock.5_404->ircoscs[i_405].name;
  if (_406 == 5)
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 4> [local count: 55807731]:
  # i_407 = PHI <i_405(3)>
  # DEBUG BEGIN_STMT
  returnValue_408 = &config_clock.5_404->ircoscs[i_407];
  # DEBUG returnValue => returnValue_408
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  i_409 = i_405 + 1;
  # DEBUG i => i_409

  <bb 6> [local count: 1073741824]:
  # i_405 = PHI <0(2), i_409(5)>
  # DEBUG i => i_405
  # DEBUG BEGIN_STMT
  _410 = config_clock.5_404->ircoscsCount;
  _411 = (long unsigned int) _410;
  if (i_405 < _411)
    goto <bb 3>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 7> [local count: 114863532]:
  # returnValue_412 = PHI <returnValue_408(4), 0B(6)>
  # DEBUG returnValue => returnValue_412
  # DEBUG BEGIN_STMT
  if (returnValue_412 == 0B)
    goto <bb 8>; [30.00%]
  else
    goto <bb 9>; [70.00%]

  <bb 8> [local count: 83686288]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => &fircConfiguration
  # DEBUG BEGIN_STMT
  fircConfiguration.name = 5;
  # DEBUG BEGIN_STMT
  _413 ={v} MEM[(struct SCG_Type *)1074151424B].FIRCCSR;
  _414 = (short unsigned int) _413;
  _415 = _414 & 1;
  fircConfiguration.enable = _415;
  # DEBUG BEGIN_STMT
  _416 ={v} MEM[(struct SCG_Type *)1074151424B].FIRCCFG;
  _417 = (unsigned char) _416;
  _418 = _417 & 3;
  fircConfiguration.range = _418;
  # DEBUG BEGIN_STMT
  _419 ={v} MEM[(struct SCG_Type *)1074151424B].FIRCCSR;
  _420 = (int) _419;
  _421 = _420 >> 3;
  _422 = _421 & 31;
  _423 = (unsigned char) _422;
  _424 = _423 & 1;
  fircConfiguration.regulator = _424;

  <bb 9> [local count: 164090760]:
  # returnValue_425 = PHI <returnValue_412(7), &fircConfiguration(8)>
  # DEBUG returnValue => returnValue_425
  # DEBUG BEGIN_STMT
  _445 = returnValue_425;
  # DEBUG returnValue => NULL
  # DEBUG i => NULL
  _34 = _445;
  fircConfig = _34;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY getSoscConfig
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config_clock.9_391 = config_clock;
  if (config_clock.9_391 != 0B)
    goto <bb 13>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 10> [local count: 1014686022]:
  # DEBUG BEGIN_STMT
  _393 = config_clock.9_391->xoscs[i_392].name;
  if (_393 == 8)
    goto <bb 11>; [5.50%]
  else
    goto <bb 12>; [94.50%]

  <bb 11> [local count: 55807731]:
  # i_394 = PHI <i_392(10)>
  # DEBUG BEGIN_STMT
  returnValue_395 = &config_clock.9_391->xoscs[i_394];
  # DEBUG returnValue => returnValue_395
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 958878290]:
  # DEBUG BEGIN_STMT
  i_396 = i_392 + 1;
  # DEBUG i => i_396

  <bb 13> [local count: 1073741823]:
  # i_392 = PHI <0(9), i_396(12)>
  # DEBUG i => i_392
  # DEBUG BEGIN_STMT
  _397 = config_clock.9_391->xoscsCount;
  _398 = (long unsigned int) _397;
  if (i_392 < _398)
    goto <bb 10>; [94.50%]
  else
    goto <bb 14>; [5.50%]

  <bb 14> [local count: 114863531]:
  # returnValue_399 = PHI <returnValue_395(11), 0B(13)>
  # DEBUG returnValue => returnValue_399
  # DEBUG BEGIN_STMT
  if (returnValue_399 == 0B)
    goto <bb 15>; [30.00%]
  else
    goto <bb 16>; [70.00%]

  <bb 15> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => &soscConfiguration
  # DEBUG BEGIN_STMT
  soscConfiguration.name = 8;
  # DEBUG BEGIN_STMT
  _400 ={v} MEM[(struct SCG_Type *)1074151424B].SOSCCSR;
  _401 = (short unsigned int) _400;
  _402 = _401 & 1;
  soscConfiguration.enable = _402;
  # DEBUG BEGIN_STMT
  soscConfiguration.freq = 40000000;

  <bb 16> [local count: 164090759]:
  # returnValue_403 = PHI <returnValue_399(14), &soscConfiguration(15)>
  # DEBUG returnValue => returnValue_403
  # DEBUG BEGIN_STMT
  _449 = returnValue_403;
  # DEBUG returnValue => NULL
  # DEBUG i => NULL
  _35 = _449;
  soscConfig = _35;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY getSpllConfig
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  config_clock.13_370 = config_clock;
  if (config_clock.13_370 != 0B)
    goto <bb 20>; [70.00%]
  else
    goto <bb 22>; [30.00%]

  <bb 17> [local count: 1014686019]:
  # DEBUG BEGIN_STMT
  _372 = config_clock.13_370->plls[i_371].name;
  if (_372 == 9)
    goto <bb 18>; [5.50%]
  else
    goto <bb 19>; [94.50%]

  <bb 18> [local count: 55807731]:
  # i_373 = PHI <i_371(17)>
  # DEBUG BEGIN_STMT
  returnValue_374 = &config_clock.13_370->plls[i_373];
  # DEBUG returnValue => returnValue_374
  # DEBUG BEGIN_STMT
  goto <bb 21>; [100.00%]

  <bb 19> [local count: 958878288]:
  # DEBUG BEGIN_STMT
  i_375 = i_371 + 1;
  # DEBUG i => i_375

  <bb 20> [local count: 1073741820]:
  # i_371 = PHI <0(16), i_375(19)>
  # DEBUG i => i_371
  # DEBUG BEGIN_STMT
  _376 = config_clock.13_370->pllsCount;
  _377 = (long unsigned int) _376;
  if (i_371 < _377)
    goto <bb 17>; [94.50%]
  else
    goto <bb 21>; [5.50%]

  <bb 21> [local count: 114863531]:
  # returnValue_378 = PHI <returnValue_374(18), 0B(20)>
  # DEBUG returnValue => returnValue_378
  # DEBUG BEGIN_STMT
  if (returnValue_378 == 0B)
    goto <bb 22>; [30.00%]
  else
    goto <bb 23>; [70.00%]

  <bb 22> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => &spllConfiguration
  # DEBUG BEGIN_STMT
  spllConfiguration.name = 9;
  # DEBUG BEGIN_STMT
  _379 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _380 = (short unsigned int) _379;
  _381 = _380 & 1;
  spllConfiguration.enable = _381;
  # DEBUG BEGIN_STMT
  _382 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _383 = _382 >> 8;
  _384 = (unsigned char) _383;
  _385 = _384 & 7;
  spllConfiguration.predivider = _385;
  # DEBUG BEGIN_STMT
  _386 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _387 = _386 >> 16;
  _388 = (unsigned char) _387;
  _389 = _388 & 31;
  spllConfiguration.mulFactorDiv = _389;

  <bb 23> [local count: 164090759]:
  # returnValue_390 = PHI <returnValue_378(21), &spllConfiguration(22)>
  # DEBUG returnValue => returnValue_390
  # DEBUG BEGIN_STMT
  _454 = returnValue_390;
  # DEBUG returnValue => NULL
  # DEBUG i => NULL
  _36 = _454;
  spllConfig = _36;
  # DEBUG BEGIN_STMT
  # DEBUG name => 25
  # DEBUG INLINE_ENTRY getSelectorConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG selectorConfigIndex => 0
  # DEBUG BEGIN_STMT
  config_clock.17_346 = config_clock;
  if (config_clock.17_346 != 0B)
    goto <bb 27>; [70.00%]
  else
    goto <bb 29>; [30.00%]

  <bb 24> [local count: 1014686017]:
  # DEBUG BEGIN_STMT
  _348 = config_clock.17_346->selectors[i_347].name;
  if (_348 == 25)
    goto <bb 25>; [5.50%]
  else
    goto <bb 26>; [94.50%]

  <bb 25> [local count: 55807731]:
  # i_349 = PHI <i_347(24)>
  # DEBUG BEGIN_STMT
  returnValue_350 = &config_clock.17_346->selectors[i_349];
  # DEBUG returnValue => returnValue_350
  # DEBUG BEGIN_STMT
  goto <bb 28>; [100.00%]

  <bb 26> [local count: 958878286]:
  # DEBUG BEGIN_STMT
  i_351 = i_347 + 1;
  # DEBUG i => i_351

  <bb 27> [local count: 1073741818]:
  # i_347 = PHI <0(23), i_351(26)>
  # DEBUG i => i_347
  # DEBUG BEGIN_STMT
  _352 = config_clock.17_346->selectorsCount;
  _353 = (long unsigned int) _352;
  if (i_347 < _353)
    goto <bb 24>; [94.50%]
  else
    goto <bb 28>; [5.50%]

  <bb 28> [local count: 114863531]:
  # returnValue_354 = PHI <returnValue_350(25), 0B(27)>
  # DEBUG returnValue => returnValue_354
  # DEBUG BEGIN_STMT
  if (returnValue_354 == 0B)
    goto <bb 29>; [30.00%]
  else
    goto <bb 30>; [70.00%]

  <bb 29> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_356 = &selectorConfigurations[0];
  # DEBUG returnValue => returnValue_356
  # DEBUG BEGIN_STMT
  selectorConfigurations[0].name = 25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _357 ={v} MEM[(struct SCG_Type *)1074151424B].RCCR;
  _358 = _357 >> 24;
  _359 = _358 & 15;
  _360 = clockSource[_359];
  selectorConfigurations[0].value = _360;
  # DEBUG BEGIN_STMT

  <bb 30> [local count: 164090759]:
  # returnValue_369 = PHI <returnValue_354(28), returnValue_356(29)>
<L83>:
  # DEBUG returnValue => returnValue_369
  # DEBUG BEGIN_STMT
  _457 = returnValue_369;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG selectorConfigIndex => NULL
  # DEBUG returnValue => NULL
  _37 = _457;
  scsConfig_Run_Mode = _37;
  # DEBUG BEGIN_STMT
  # DEBUG name => 26
  # DEBUG INLINE_ENTRY getSelectorConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG selectorConfigIndex => 1
  # DEBUG BEGIN_STMT
  # DEBUG selectorConfigIndex => 1
  # DEBUG BEGIN_STMT
  config_clock.17_322 = config_clock;
  if (config_clock.17_322 != 0B)
    goto <bb 34>; [70.00%]
  else
    goto <bb 36>; [30.00%]

  <bb 31> [local count: 1014686014]:
  # DEBUG BEGIN_STMT
  _324 = config_clock.17_322->selectors[i_323].name;
  if (_324 == 26)
    goto <bb 32>; [5.50%]
  else
    goto <bb 33>; [94.50%]

  <bb 32> [local count: 55807731]:
  # i_325 = PHI <i_323(31)>
  # DEBUG BEGIN_STMT
  returnValue_326 = &config_clock.17_322->selectors[i_325];
  # DEBUG returnValue => returnValue_326
  # DEBUG BEGIN_STMT
  goto <bb 35>; [100.00%]

  <bb 33> [local count: 958878283]:
  # DEBUG BEGIN_STMT
  i_327 = i_323 + 1;
  # DEBUG i => i_327

  <bb 34> [local count: 1073741814]:
  # i_323 = PHI <0(30), i_327(33)>
  # DEBUG i => i_323
  # DEBUG BEGIN_STMT
  _328 = config_clock.17_322->selectorsCount;
  _329 = (long unsigned int) _328;
  if (i_323 < _329)
    goto <bb 31>; [94.50%]
  else
    goto <bb 35>; [5.50%]

  <bb 35> [local count: 114863530]:
  # returnValue_330 = PHI <returnValue_326(32), 0B(34)>
  # DEBUG returnValue => returnValue_330
  # DEBUG BEGIN_STMT
  if (returnValue_330 == 0B)
    goto <bb 36>; [30.00%]
  else
    goto <bb 37>; [70.00%]

  <bb 36> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_332 = &selectorConfigurations[1];
  # DEBUG returnValue => returnValue_332
  # DEBUG BEGIN_STMT
  selectorConfigurations[1].name = 26;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _337 ={v} MEM[(struct SCG_Type *)1074151424B].VCCR;
  _338 = _337 >> 24;
  _339 = _338 & 15;
  _340 = clockSource[_339];
  selectorConfigurations[1].value = _340;
  # DEBUG BEGIN_STMT

  <bb 37> [local count: 164090758]:
  # returnValue_345 = PHI <returnValue_330(35), returnValue_332(36)>
<L76>:
  # DEBUG returnValue => returnValue_345
  # DEBUG BEGIN_STMT
  _460 = returnValue_345;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG selectorConfigIndex => NULL
  # DEBUG returnValue => NULL
  _38 = _460;
  scsConfig_Vlpr_Mode = _38;
  # DEBUG BEGIN_STMT
  # DEBUG name => 27
  # DEBUG INLINE_ENTRY getSelectorConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG selectorConfigIndex => 2
  # DEBUG BEGIN_STMT
  # DEBUG selectorConfigIndex => 2
  # DEBUG BEGIN_STMT
  config_clock.17_298 = config_clock;
  if (config_clock.17_298 != 0B)
    goto <bb 41>; [70.00%]
  else
    goto <bb 43>; [30.00%]

  <bb 38> [local count: 1014686013]:
  # DEBUG BEGIN_STMT
  _300 = config_clock.17_298->selectors[i_299].name;
  if (_300 == 27)
    goto <bb 39>; [5.50%]
  else
    goto <bb 40>; [94.50%]

  <bb 39> [local count: 55807731]:
  # i_301 = PHI <i_299(38)>
  # DEBUG BEGIN_STMT
  returnValue_302 = &config_clock.17_298->selectors[i_301];
  # DEBUG returnValue => returnValue_302
  # DEBUG BEGIN_STMT
  goto <bb 42>; [100.00%]

  <bb 40> [local count: 958878283]:
  # DEBUG BEGIN_STMT
  i_303 = i_299 + 1;
  # DEBUG i => i_303

  <bb 41> [local count: 1073741813]:
  # i_299 = PHI <0(37), i_303(40)>
  # DEBUG i => i_299
  # DEBUG BEGIN_STMT
  _304 = config_clock.17_298->selectorsCount;
  _305 = (long unsigned int) _304;
  if (i_299 < _305)
    goto <bb 38>; [94.50%]
  else
    goto <bb 42>; [5.50%]

  <bb 42> [local count: 114863530]:
  # returnValue_306 = PHI <returnValue_302(39), 0B(41)>
  # DEBUG returnValue => returnValue_306
  # DEBUG BEGIN_STMT
  if (returnValue_306 == 0B)
    goto <bb 43>; [30.00%]
  else
    goto <bb 44>; [70.00%]

  <bb 43> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_308 = &selectorConfigurations[2];
  # DEBUG returnValue => returnValue_308
  # DEBUG BEGIN_STMT
  selectorConfigurations[2].name = 27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _317 ={v} MEM[(struct SCG_Type *)1074151424B].HCCR;
  _318 = _317 >> 24;
  _319 = _318 & 15;
  _320 = clockSource[_319];
  selectorConfigurations[2].value = _320;
  # DEBUG BEGIN_STMT

  <bb 44> [local count: 164090758]:
  # returnValue_321 = PHI <returnValue_306(42), returnValue_308(43)>
<L69>:
  # DEBUG returnValue => returnValue_321
  # DEBUG BEGIN_STMT
  _463 = returnValue_321;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG selectorConfigIndex => NULL
  # DEBUG returnValue => NULL
  _39 = _463;
  scsConfig_Hsrun_Mode = _39;
  # DEBUG BEGIN_STMT
  # DEBUG name => 29
  # DEBUG INLINE_ENTRY getCoreDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  config_clock.21_274 = config_clock;
  if (config_clock.21_274 != 0B)
    goto <bb 48>; [70.00%]
  else
    goto <bb 50>; [30.00%]

  <bb 45> [local count: 1014686013]:
  # DEBUG BEGIN_STMT
  _276 = config_clock.21_274->dividers[i_275].name;
  if (_276 == 29)
    goto <bb 46>; [5.50%]
  else
    goto <bb 47>; [94.50%]

  <bb 46> [local count: 55807731]:
  # i_277 = PHI <i_275(45)>
  # DEBUG BEGIN_STMT
  returnValue_278 = &config_clock.21_274->dividers[i_277];
  # DEBUG returnValue => returnValue_278
  # DEBUG BEGIN_STMT
  goto <bb 49>; [100.00%]

  <bb 47> [local count: 958878283]:
  # DEBUG BEGIN_STMT
  i_279 = i_275 + 1;
  # DEBUG i => i_279

  <bb 48> [local count: 1073741813]:
  # i_275 = PHI <0(44), i_279(47)>
  # DEBUG i => i_275
  # DEBUG BEGIN_STMT
  _280 = config_clock.21_274->dividersCount;
  _281 = (long unsigned int) _280;
  if (i_275 < _281)
    goto <bb 45>; [94.50%]
  else
    goto <bb 49>; [5.50%]

  <bb 49> [local count: 114863530]:
  # returnValue_282 = PHI <returnValue_278(46), 0B(48)>
  # DEBUG returnValue => returnValue_282
  # DEBUG BEGIN_STMT
  if (returnValue_282 == 0B)
    goto <bb 50>; [30.00%]
  else
    goto <bb 51>; [70.00%]

  <bb 50> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_284 = &dividerConfigurations[0];
  # DEBUG returnValue => returnValue_284
  # DEBUG BEGIN_STMT
  dividerConfigurations[0].name = 29;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _285 ={v} MEM[(struct SCG_Type *)1074151424B].RCCR;
  _286 = _285 >> 16;
  _287 = _286 & 15;
  _288 = _287 + 1;
  dividerConfigurations[0].value = _288;
  # DEBUG BEGIN_STMT

  <bb 51> [local count: 164090758]:
  # returnValue_297 = PHI <returnValue_282(49), returnValue_284(50)>
<L62>:
  # DEBUG returnValue => returnValue_297
  # DEBUG BEGIN_STMT
  _466 = returnValue_297;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _40 = _466;
  coreConfig_Run_Mode = _40;
  # DEBUG BEGIN_STMT
  # DEBUG name => 30
  # DEBUG INLINE_ENTRY getCoreDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 1
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 1
  # DEBUG BEGIN_STMT
  config_clock.21_250 = config_clock;
  if (config_clock.21_250 != 0B)
    goto <bb 55>; [70.00%]
  else
    goto <bb 57>; [30.00%]

  <bb 52> [local count: 1014686011]:
  # DEBUG BEGIN_STMT
  _252 = config_clock.21_250->dividers[i_251].name;
  if (_252 == 30)
    goto <bb 53>; [5.50%]
  else
    goto <bb 54>; [94.50%]

  <bb 53> [local count: 55807731]:
  # i_253 = PHI <i_251(52)>
  # DEBUG BEGIN_STMT
  returnValue_254 = &config_clock.21_250->dividers[i_253];
  # DEBUG returnValue => returnValue_254
  # DEBUG BEGIN_STMT
  goto <bb 56>; [100.00%]

  <bb 54> [local count: 958878280]:
  # DEBUG BEGIN_STMT
  i_255 = i_251 + 1;
  # DEBUG i => i_255

  <bb 55> [local count: 1073741811]:
  # i_251 = PHI <0(51), i_255(54)>
  # DEBUG i => i_251
  # DEBUG BEGIN_STMT
  _256 = config_clock.21_250->dividersCount;
  _257 = (long unsigned int) _256;
  if (i_251 < _257)
    goto <bb 52>; [94.50%]
  else
    goto <bb 56>; [5.50%]

  <bb 56> [local count: 114863530]:
  # returnValue_258 = PHI <returnValue_254(53), 0B(55)>
  # DEBUG returnValue => returnValue_258
  # DEBUG BEGIN_STMT
  if (returnValue_258 == 0B)
    goto <bb 57>; [30.00%]
  else
    goto <bb 58>; [70.00%]

  <bb 57> [local count: 83686287]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_260 = &dividerConfigurations[1];
  # DEBUG returnValue => returnValue_260
  # DEBUG BEGIN_STMT
  dividerConfigurations[1].name = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _265 ={v} MEM[(struct SCG_Type *)1074151424B].VCCR;
  _266 = _265 >> 16;
  _267 = _266 & 15;
  _268 = _267 + 1;
  dividerConfigurations[1].value = _268;
  # DEBUG BEGIN_STMT

  <bb 58> [local count: 164090758]:
  # returnValue_273 = PHI <returnValue_258(56), returnValue_260(57)>
<L55>:
  # DEBUG returnValue => returnValue_273
  # DEBUG BEGIN_STMT
  _469 = returnValue_273;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _41 = _469;
  coreConfig_Vlpr_Mode = _41;
  # DEBUG BEGIN_STMT
  # DEBUG name => 31
  # DEBUG INLINE_ENTRY getCoreDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 2
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 2
  # DEBUG BEGIN_STMT
  config_clock.21_226 = config_clock;
  if (config_clock.21_226 != 0B)
    goto <bb 62>; [70.00%]
  else
    goto <bb 64>; [30.00%]

  <bb 59> [local count: 1014686009]:
  # DEBUG BEGIN_STMT
  _228 = config_clock.21_226->dividers[i_227].name;
  if (_228 == 31)
    goto <bb 60>; [5.50%]
  else
    goto <bb 61>; [94.50%]

  <bb 60> [local count: 55807731]:
  # i_229 = PHI <i_227(59)>
  # DEBUG BEGIN_STMT
  returnValue_230 = &config_clock.21_226->dividers[i_229];
  # DEBUG returnValue => returnValue_230
  # DEBUG BEGIN_STMT
  goto <bb 63>; [100.00%]

  <bb 61> [local count: 958878279]:
  # DEBUG BEGIN_STMT
  i_231 = i_227 + 1;
  # DEBUG i => i_231

  <bb 62> [local count: 1073741809]:
  # i_227 = PHI <0(58), i_231(61)>
  # DEBUG i => i_227
  # DEBUG BEGIN_STMT
  _232 = config_clock.21_226->dividersCount;
  _233 = (long unsigned int) _232;
  if (i_227 < _233)
    goto <bb 59>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 63> [local count: 114863530]:
  # returnValue_234 = PHI <returnValue_230(60), 0B(62)>
  # DEBUG returnValue => returnValue_234
  # DEBUG BEGIN_STMT
  if (returnValue_234 == 0B)
    goto <bb 64>; [30.00%]
  else
    goto <bb 65>; [70.00%]

  <bb 64> [local count: 83686286]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_236 = &dividerConfigurations[2];
  # DEBUG returnValue => returnValue_236
  # DEBUG BEGIN_STMT
  dividerConfigurations[2].name = 31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _245 ={v} MEM[(struct SCG_Type *)1074151424B].HCCR;
  _246 = _245 >> 16;
  _247 = _246 & 15;
  _248 = _247 + 1;
  dividerConfigurations[2].value = _248;
  # DEBUG BEGIN_STMT

  <bb 65> [local count: 164090757]:
  # returnValue_249 = PHI <returnValue_234(63), returnValue_236(64)>
<L48>:
  # DEBUG returnValue => returnValue_249
  # DEBUG BEGIN_STMT
  _472 = returnValue_249;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _42 = _472;
  coreConfig_Hsrun_Mode = _42;
  # DEBUG BEGIN_STMT
  # DEBUG name => 33
  # DEBUG INLINE_ENTRY getBusDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  config_clock.25_202 = config_clock;
  if (config_clock.25_202 != 0B)
    goto <bb 69>; [70.00%]
  else
    goto <bb 71>; [30.00%]

  <bb 66> [local count: 1014686007]:
  # DEBUG BEGIN_STMT
  _204 = config_clock.25_202->dividers[i_203].name;
  if (_204 == 33)
    goto <bb 67>; [5.50%]
  else
    goto <bb 68>; [94.50%]

  <bb 67> [local count: 55807730]:
  # i_205 = PHI <i_203(66)>
  # DEBUG BEGIN_STMT
  returnValue_206 = &config_clock.25_202->dividers[i_205];
  # DEBUG returnValue => returnValue_206
  # DEBUG BEGIN_STMT
  goto <bb 70>; [100.00%]

  <bb 68> [local count: 958878277]:
  # DEBUG BEGIN_STMT
  i_207 = i_203 + 1;
  # DEBUG i => i_207

  <bb 69> [local count: 1073741807]:
  # i_203 = PHI <0(65), i_207(68)>
  # DEBUG i => i_203
  # DEBUG BEGIN_STMT
  _208 = config_clock.25_202->dividersCount;
  _209 = (long unsigned int) _208;
  if (i_203 < _209)
    goto <bb 66>; [94.50%]
  else
    goto <bb 70>; [5.50%]

  <bb 70> [local count: 114863530]:
  # returnValue_210 = PHI <returnValue_206(67), 0B(69)>
  # DEBUG returnValue => returnValue_210
  # DEBUG BEGIN_STMT
  if (returnValue_210 == 0B)
    goto <bb 71>; [30.00%]
  else
    goto <bb 72>; [70.00%]

  <bb 71> [local count: 83686286]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_212 = &dividerConfigurations[0];
  # DEBUG returnValue => returnValue_212
  # DEBUG BEGIN_STMT
  dividerConfigurations[0].name = 33;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _213 ={v} MEM[(struct SCG_Type *)1074151424B].RCCR;
  _214 = _213 >> 4;
  _215 = _214 & 15;
  _216 = _215 + 1;
  dividerConfigurations[0].value = _216;
  # DEBUG BEGIN_STMT

  <bb 72> [local count: 164090757]:
  # returnValue_225 = PHI <returnValue_210(70), returnValue_212(71)>
<L41>:
  # DEBUG returnValue => returnValue_225
  # DEBUG BEGIN_STMT
  _475 = returnValue_225;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _43 = _475;
  busConfig_Run_Mode = _43;
  # DEBUG BEGIN_STMT
  # DEBUG name => 34
  # DEBUG INLINE_ENTRY getBusDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 1
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 1
  # DEBUG BEGIN_STMT
  config_clock.25_178 = config_clock;
  if (config_clock.25_178 != 0B)
    goto <bb 76>; [70.00%]
  else
    goto <bb 78>; [30.00%]

  <bb 73> [local count: 1014686003]:
  # DEBUG BEGIN_STMT
  _180 = config_clock.25_178->dividers[i_179].name;
  if (_180 == 34)
    goto <bb 74>; [5.50%]
  else
    goto <bb 75>; [94.50%]

  <bb 74> [local count: 55807730]:
  # i_181 = PHI <i_179(73)>
  # DEBUG BEGIN_STMT
  returnValue_182 = &config_clock.25_178->dividers[i_181];
  # DEBUG returnValue => returnValue_182
  # DEBUG BEGIN_STMT
  goto <bb 77>; [100.00%]

  <bb 75> [local count: 958878273]:
  # DEBUG BEGIN_STMT
  i_183 = i_179 + 1;
  # DEBUG i => i_183

  <bb 76> [local count: 1073741803]:
  # i_179 = PHI <0(72), i_183(75)>
  # DEBUG i => i_179
  # DEBUG BEGIN_STMT
  _184 = config_clock.25_178->dividersCount;
  _185 = (long unsigned int) _184;
  if (i_179 < _185)
    goto <bb 73>; [94.50%]
  else
    goto <bb 77>; [5.50%]

  <bb 77> [local count: 114863529]:
  # returnValue_186 = PHI <returnValue_182(74), 0B(76)>
  # DEBUG returnValue => returnValue_186
  # DEBUG BEGIN_STMT
  if (returnValue_186 == 0B)
    goto <bb 78>; [30.00%]
  else
    goto <bb 79>; [70.00%]

  <bb 78> [local count: 83686286]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_188 = &dividerConfigurations[1];
  # DEBUG returnValue => returnValue_188
  # DEBUG BEGIN_STMT
  dividerConfigurations[1].name = 34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _193 ={v} MEM[(struct SCG_Type *)1074151424B].VCCR;
  _194 = _193 >> 4;
  _195 = _194 & 15;
  _196 = _195 + 1;
  dividerConfigurations[1].value = _196;
  # DEBUG BEGIN_STMT

  <bb 79> [local count: 164090757]:
  # returnValue_201 = PHI <returnValue_186(77), returnValue_188(78)>
<L34>:
  # DEBUG returnValue => returnValue_201
  # DEBUG BEGIN_STMT
  _478 = returnValue_201;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _44 = _478;
  busConfig_Vlpr_Mode = _44;
  # DEBUG BEGIN_STMT
  # DEBUG name => 35
  # DEBUG INLINE_ENTRY getBusDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 2
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 2
  # DEBUG BEGIN_STMT
  config_clock.25_154 = config_clock;
  if (config_clock.25_154 != 0B)
    goto <bb 83>; [70.00%]
  else
    goto <bb 85>; [30.00%]

  <bb 80> [local count: 1014686001]:
  # DEBUG BEGIN_STMT
  _156 = config_clock.25_154->dividers[i_155].name;
  if (_156 == 35)
    goto <bb 81>; [5.50%]
  else
    goto <bb 82>; [94.50%]

  <bb 81> [local count: 55807730]:
  # i_157 = PHI <i_155(80)>
  # DEBUG BEGIN_STMT
  returnValue_158 = &config_clock.25_154->dividers[i_157];
  # DEBUG returnValue => returnValue_158
  # DEBUG BEGIN_STMT
  goto <bb 84>; [100.00%]

  <bb 82> [local count: 958878272]:
  # DEBUG BEGIN_STMT
  i_159 = i_155 + 1;
  # DEBUG i => i_159

  <bb 83> [local count: 1073741800]:
  # i_155 = PHI <0(79), i_159(82)>
  # DEBUG i => i_155
  # DEBUG BEGIN_STMT
  _160 = config_clock.25_154->dividersCount;
  _161 = (long unsigned int) _160;
  if (i_155 < _161)
    goto <bb 80>; [94.50%]
  else
    goto <bb 84>; [5.50%]

  <bb 84> [local count: 114863529]:
  # returnValue_162 = PHI <returnValue_158(81), 0B(83)>
  # DEBUG returnValue => returnValue_162
  # DEBUG BEGIN_STMT
  if (returnValue_162 == 0B)
    goto <bb 85>; [30.00%]
  else
    goto <bb 86>; [70.00%]

  <bb 85> [local count: 83686286]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_164 = &dividerConfigurations[2];
  # DEBUG returnValue => returnValue_164
  # DEBUG BEGIN_STMT
  dividerConfigurations[2].name = 35;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _173 ={v} MEM[(struct SCG_Type *)1074151424B].HCCR;
  _174 = _173 >> 4;
  _175 = _174 & 15;
  _176 = _175 + 1;
  dividerConfigurations[2].value = _176;
  # DEBUG BEGIN_STMT

  <bb 86> [local count: 164090756]:
  # returnValue_177 = PHI <returnValue_162(84), returnValue_164(85)>
<L27>:
  # DEBUG returnValue => returnValue_177
  # DEBUG BEGIN_STMT
  _481 = returnValue_177;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _45 = _481;
  busConfig_Hsrun_Mode = _45;
  # DEBUG BEGIN_STMT
  # DEBUG name => 37
  # DEBUG INLINE_ENTRY getSlowDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  config_clock.29_133 = config_clock;
  if (config_clock.29_133 != 0B)
    goto <bb 90>; [70.00%]
  else
    goto <bb 92>; [30.00%]

  <bb 87> [local count: 1014686000]:
  # DEBUG BEGIN_STMT
  _135 = config_clock.29_133->dividers[i_134].name;
  if (_135 == 37)
    goto <bb 88>; [5.50%]
  else
    goto <bb 89>; [94.50%]

  <bb 88> [local count: 55807730]:
  # i_136 = PHI <i_134(87)>
  # DEBUG BEGIN_STMT
  returnValue_137 = &config_clock.29_133->dividers[i_136];
  # DEBUG returnValue => returnValue_137
  # DEBUG BEGIN_STMT
  goto <bb 91>; [100.00%]

  <bb 89> [local count: 958878269]:
  # DEBUG BEGIN_STMT
  i_138 = i_134 + 1;
  # DEBUG i => i_138

  <bb 90> [local count: 1073741798]:
  # i_134 = PHI <0(86), i_138(89)>
  # DEBUG i => i_134
  # DEBUG BEGIN_STMT
  _139 = config_clock.29_133->dividersCount;
  _140 = (long unsigned int) _139;
  if (i_134 < _140)
    goto <bb 87>; [94.50%]
  else
    goto <bb 91>; [5.50%]

  <bb 91> [local count: 114863529]:
  # returnValue_141 = PHI <returnValue_137(88), 0B(90)>
  # DEBUG returnValue => returnValue_141
  # DEBUG BEGIN_STMT
  if (returnValue_141 == 0B)
    goto <bb 92>; [30.00%]
  else
    goto <bb 93>; [70.00%]

  <bb 92> [local count: 83686285]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_143 = &dividerConfigurations[0];
  # DEBUG returnValue => returnValue_143
  # DEBUG BEGIN_STMT
  dividerConfigurations[0].name = 37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _144 ={v} MEM[(struct SCG_Type *)1074151424B].RCCR;
  _145 = _144 & 15;
  _146 = _145 + 1;
  dividerConfigurations[0].value = _146;
  # DEBUG BEGIN_STMT

  <bb 93> [local count: 164090756]:
  # returnValue_153 = PHI <returnValue_141(91), returnValue_143(92)>
<L20>:
  # DEBUG returnValue => returnValue_153
  # DEBUG BEGIN_STMT
  _484 = returnValue_153;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _46 = _484;
  slowConfig_Run_Mode = _46;
  # DEBUG BEGIN_STMT
  # DEBUG name => 38
  # DEBUG INLINE_ENTRY getSlowDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 1
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 1
  # DEBUG BEGIN_STMT
  config_clock.29_112 = config_clock;
  if (config_clock.29_112 != 0B)
    goto <bb 97>; [70.00%]
  else
    goto <bb 99>; [30.00%]

  <bb 94> [local count: 1014685996]:
  # DEBUG BEGIN_STMT
  _114 = config_clock.29_112->dividers[i_113].name;
  if (_114 == 38)
    goto <bb 95>; [5.50%]
  else
    goto <bb 96>; [94.50%]

  <bb 95> [local count: 55807730]:
  # i_115 = PHI <i_113(94)>
  # DEBUG BEGIN_STMT
  returnValue_116 = &config_clock.29_112->dividers[i_115];
  # DEBUG returnValue => returnValue_116
  # DEBUG BEGIN_STMT
  goto <bb 98>; [100.00%]

  <bb 96> [local count: 958878266]:
  # DEBUG BEGIN_STMT
  i_117 = i_113 + 1;
  # DEBUG i => i_117

  <bb 97> [local count: 1073741796]:
  # i_113 = PHI <0(93), i_117(96)>
  # DEBUG i => i_113
  # DEBUG BEGIN_STMT
  _118 = config_clock.29_112->dividersCount;
  _119 = (long unsigned int) _118;
  if (i_113 < _119)
    goto <bb 94>; [94.50%]
  else
    goto <bb 98>; [5.50%]

  <bb 98> [local count: 114863528]:
  # returnValue_120 = PHI <returnValue_116(95), 0B(97)>
  # DEBUG returnValue => returnValue_120
  # DEBUG BEGIN_STMT
  if (returnValue_120 == 0B)
    goto <bb 99>; [30.00%]
  else
    goto <bb 100>; [70.00%]

  <bb 99> [local count: 83686285]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_122 = &dividerConfigurations[1];
  # DEBUG returnValue => returnValue_122
  # DEBUG BEGIN_STMT
  dividerConfigurations[1].name = 38;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _126 ={v} MEM[(struct SCG_Type *)1074151424B].VCCR;
  _127 = _126 & 15;
  _128 = _127 + 1;
  dividerConfigurations[1].value = _128;
  # DEBUG BEGIN_STMT

  <bb 100> [local count: 164090755]:
  # returnValue_132 = PHI <returnValue_120(98), returnValue_122(99)>
<L13>:
  # DEBUG returnValue => returnValue_132
  # DEBUG BEGIN_STMT
  _487 = returnValue_132;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _47 = _487;
  slowConfig_Vlpr_Mode = _47;
  # DEBUG BEGIN_STMT
  # DEBUG name => 39
  # DEBUG INLINE_ENTRY getSlowDividerConfig
  # DEBUG BEGIN_STMT
  # DEBUG returnValue => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 2
  # DEBUG BEGIN_STMT
  # DEBUG dividerConfigIndex => 2
  # DEBUG BEGIN_STMT
  config_clock.29_91 = config_clock;
  if (config_clock.29_91 != 0B)
    goto <bb 104>; [70.00%]
  else
    goto <bb 106>; [30.00%]

  <bb 101> [local count: 1014685994]:
  # DEBUG BEGIN_STMT
  _93 = config_clock.29_91->dividers[i_92].name;
  if (_93 == 39)
    goto <bb 102>; [5.50%]
  else
    goto <bb 103>; [94.50%]

  <bb 102> [local count: 55807730]:
  # i_94 = PHI <i_92(101)>
  # DEBUG BEGIN_STMT
  returnValue_95 = &config_clock.29_91->dividers[i_94];
  # DEBUG returnValue => returnValue_95
  # DEBUG BEGIN_STMT
  goto <bb 105>; [100.00%]

  <bb 103> [local count: 958878264]:
  # DEBUG BEGIN_STMT
  i_96 = i_92 + 1;
  # DEBUG i => i_96

  <bb 104> [local count: 1073741792]:
  # i_92 = PHI <0(100), i_96(103)>
  # DEBUG i => i_92
  # DEBUG BEGIN_STMT
  _97 = config_clock.29_91->dividersCount;
  _98 = (long unsigned int) _97;
  if (i_92 < _98)
    goto <bb 101>; [94.50%]
  else
    goto <bb 105>; [5.50%]

  <bb 105> [local count: 114863528]:
  # returnValue_99 = PHI <returnValue_95(102), 0B(104)>
  # DEBUG returnValue => returnValue_99
  # DEBUG BEGIN_STMT
  if (returnValue_99 == 0B)
    goto <bb 106>; [30.00%]
  else
    goto <bb 107>; [70.00%]

  <bb 106> [local count: 83686285]:
  # DEBUG returnValue => NULL
  # DEBUG BEGIN_STMT
  returnValue_101 = &dividerConfigurations[2];
  # DEBUG returnValue => returnValue_101
  # DEBUG BEGIN_STMT
  dividerConfigurations[2].name = 39;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _108 ={v} MEM[(struct SCG_Type *)1074151424B].HCCR;
  _109 = _108 & 15;
  _110 = _109 + 1;
  dividerConfigurations[2].value = _110;
  # DEBUG BEGIN_STMT

  <bb 107> [local count: 164090755]:
  # returnValue_111 = PHI <returnValue_99(105), returnValue_101(106)>
<L6>:
  # DEBUG returnValue => returnValue_111
  # DEBUG BEGIN_STMT
  _490 = returnValue_111;
  # DEBUG name => NULL
  # DEBUG i => NULL
  # DEBUG dividerConfigIndex => NULL
  # DEBUG returnValue => NULL
  _48 = _490;
  slowConfig_Hsrun_Mode = _48;
  return;

}



;; Function ClockPowerModeChangeNotification (ClockPowerModeChangeNotification, funcdef_no=13, decl_uid=6027, cgraph_uid=14, symbol_order=41)

ClockPowerModeChangeNotification (power_modes_t powerMode, power_notification_t notification)
{
  const struct selectorCallback * scsRunClockSelector.33_1;
  void (*<T5ad>) (const struct Clock_Ip_SelectorConfigType *) _2;
  const struct Clock_Ip_SelectorConfigType * scsConfig_Vlpr_Mode.34_3;
  const struct dividerCallback * coreRunClockDivider.35_4;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _5;
  const struct Clock_Ip_DividerConfigType * coreConfig_Vlpr_Mode.36_6;
  const struct dividerCallback * busRunClockDivider.37_7;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _8;
  const struct Clock_Ip_DividerConfigType * busConfig_Vlpr_Mode.38_9;
  const struct dividerCallback * slowRunClockDivider.39_10;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _11;
  const struct Clock_Ip_DividerConfigType * slowConfig_Vlpr_Mode.40_12;
  const struct pllCallback * spllClock.41_13;
  void (*<T558>) (Clock_Ip_NameType) _14;
  const struct Clock_Ip_PllConfigType * spllConfig.42_15;
  <unnamed type> _16;
  const struct extOscCallback * soscClock.43_17;
  void (*<T558>) (Clock_Ip_NameType) _18;
  const struct Clock_Ip_XoscConfigType * soscConfig.44_19;
  <unnamed type> _20;
  const struct intOscCallback * fircClock.45_21;
  void (*<T558>) (Clock_Ip_NameType) _22;
  const struct Clock_Ip_IrcoscConfigType * fircConfig.46_23;
  <unnamed type> _24;
  const struct intOscCallback * fircClock.47_25;
  void (*<T555>) (const struct Clock_Ip_IrcoscConfigType *) _26;
  const struct Clock_Ip_IrcoscConfigType * fircConfig.48_27;
  const struct extOscCallback * soscClock.49_28;
  void (*<T564>) (const struct Clock_Ip_XoscConfigType *) _29;
  const struct Clock_Ip_XoscConfigType * soscConfig.50_30;
  const struct extOscCallback * soscClock.51_31;
  void (*<T564>) (const struct Clock_Ip_XoscConfigType *) _32;
  const struct Clock_Ip_XoscConfigType * soscConfig.52_33;
  const struct pllCallback * spllClock.53_34;
  void (*<T59a>) (const struct Clock_Ip_PllConfigType *) _35;
  const struct Clock_Ip_PllConfigType * spllConfig.54_36;
  const struct pllCallback * spllClock.55_37;
  clock_pll_status_t (*<T5a0>) (Clock_Ip_NameType) _38;
  const struct Clock_Ip_PllConfigType * spllConfig.56_39;
  <unnamed type> _40;
  const struct selectorCallback * scsRunClockSelector.57_41;
  void (*<T5ad>) (const struct Clock_Ip_SelectorConfigType *) _42;
  const struct Clock_Ip_SelectorConfigType * scsConfig_Run_Mode.58_43;
  const struct dividerCallback * coreRunClockDivider.59_44;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _45;
  const struct Clock_Ip_DividerConfigType * coreConfig_Run_Mode.60_46;
  const struct dividerCallback * busRunClockDivider.61_47;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _48;
  const struct Clock_Ip_DividerConfigType * busConfig_Run_Mode.62_49;
  const struct dividerCallback * slowRunClockDivider.63_50;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _51;
  const struct Clock_Ip_DividerConfigType * slowConfig_Run_Mode.64_52;
  const struct intOscCallback * fircClock.65_53;
  void (*<T555>) (const struct Clock_Ip_IrcoscConfigType *) _54;
  const struct Clock_Ip_IrcoscConfigType * fircConfig.66_55;
  const struct extOscCallback * soscClock.67_56;
  void (*<T564>) (const struct Clock_Ip_XoscConfigType *) _57;
  const struct Clock_Ip_XoscConfigType * soscConfig.68_58;
  const struct extOscCallback * soscClock.69_59;
  void (*<T564>) (const struct Clock_Ip_XoscConfigType *) _60;
  const struct Clock_Ip_XoscConfigType * soscConfig.70_61;
  const struct pllCallback * spllClock.71_62;
  void (*<T59a>) (const struct Clock_Ip_PllConfigType *) _63;
  const struct Clock_Ip_PllConfigType * spllConfig.72_64;
  const struct pllCallback * spllClock.73_65;
  clock_pll_status_t (*<T5a0>) (Clock_Ip_NameType) _66;
  const struct Clock_Ip_PllConfigType * spllConfig.74_67;
  <unnamed type> _68;
  const struct selectorCallback * scsHsrunClockSelector.75_69;
  void (*<T5ad>) (const struct Clock_Ip_SelectorConfigType *) _70;
  const struct Clock_Ip_SelectorConfigType * scsConfig_Hsrun_Mode.76_71;
  const struct dividerCallback * coreHsrunClockDivider.77_72;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _73;
  const struct Clock_Ip_DividerConfigType * coreConfig_Hsrun_Mode.78_74;
  const struct dividerCallback * busHsrunClockDivider.79_75;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _76;
  const struct Clock_Ip_DividerConfigType * busConfig_Hsrun_Mode.80_77;
  const struct dividerCallback * slowHsrunClockDivider.81_78;
  void (*<T572>) (const struct Clock_Ip_DividerConfigType *) _79;
  const struct Clock_Ip_DividerConfigType * slowConfig_Hsrun_Mode.82_80;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  switch (powerMode_82(D)) <default: <L12> [25.00%], case 0: <L4> [25.00%], case 1 ... 2: <L0> [25.00%], case 3: <L7> [25.00%]>

  <bb 3> [local count: 268435456]:
<L0>:
  # DEBUG BEGIN_STMT
  if (notification_84(D) == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 4> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  scsRunClockSelector.33_1 = scsRunClockSelector;
  _2 = scsRunClockSelector.33_1->Set;
  scsConfig_Vlpr_Mode.34_3 = scsConfig_Vlpr_Mode;
  _2 (scsConfig_Vlpr_Mode.34_3);
  # DEBUG BEGIN_STMT
  coreRunClockDivider.35_4 = coreRunClockDivider;
  _5 = coreRunClockDivider.35_4->Set;
  coreConfig_Vlpr_Mode.36_6 = coreConfig_Vlpr_Mode;
  _5 (coreConfig_Vlpr_Mode.36_6);
  # DEBUG BEGIN_STMT
  busRunClockDivider.37_7 = busRunClockDivider;
  _8 = busRunClockDivider.37_7->Set;
  busConfig_Vlpr_Mode.38_9 = busConfig_Vlpr_Mode;
  _8 (busConfig_Vlpr_Mode.38_9);
  # DEBUG BEGIN_STMT
  slowRunClockDivider.39_10 = slowRunClockDivider;
  _11 = slowRunClockDivider.39_10->Set;
  slowConfig_Vlpr_Mode.40_12 = slowConfig_Vlpr_Mode;
  _11 (slowConfig_Vlpr_Mode.40_12);
  # DEBUG BEGIN_STMT
  spllClock.41_13 = spllClock;
  _14 = spllClock.41_13->Disable;
  spllConfig.42_15 = spllConfig;
  _16 = spllConfig.42_15->name;
  _14 (_16);
  # DEBUG BEGIN_STMT
  soscClock.43_17 = soscClock;
  _18 = soscClock.43_17->Disable;
  soscConfig.44_19 = soscConfig;
  _20 = soscConfig.44_19->name;
  _18 (_20);
  # DEBUG BEGIN_STMT
  fircClock.45_21 = fircClock;
  _22 = fircClock.45_21->Disable;
  fircConfig.46_23 = fircConfig;
  _24 = fircConfig.46_23->name;
  _22 (_24);
  goto <bb 9>; [100.00%]

  <bb 5> [local count: 268435456]:
<L4>:
  # DEBUG BEGIN_STMT
  if (notification_84(D) == 2)
    goto <bb 6>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 6> [local count: 91268055]:
  # DEBUG BEGIN_STMT
  fircClock.47_25 = fircClock;
  _26 = fircClock.47_25->Enable;
  fircConfig.48_27 = fircConfig;
  _26 (fircConfig.48_27);
  # DEBUG BEGIN_STMT
  soscClock.49_28 = soscClock;
  _29 = soscClock.49_28->Enable;
  soscConfig.50_30 = soscConfig;
  _29 (soscConfig.50_30);
  # DEBUG BEGIN_STMT
  soscClock.51_31 = soscClock;
  _32 = soscClock.51_31->Complete;
  soscConfig.52_33 = soscConfig;
  _32 (soscConfig.52_33);
  # DEBUG BEGIN_STMT
  spllClock.53_34 = spllClock;
  _35 = spllClock.53_34->Enable;
  spllConfig.54_36 = spllConfig;
  _35 (spllConfig.54_36);
  # DEBUG BEGIN_STMT
  spllClock.55_37 = spllClock;
  _38 = spllClock.55_37->Complete;
  spllConfig.56_39 = spllConfig;
  _40 = spllConfig.56_39->name;
  _38 (_40);
  # DEBUG BEGIN_STMT
  scsRunClockSelector.57_41 = scsRunClockSelector;
  _42 = scsRunClockSelector.57_41->Set;
  scsConfig_Run_Mode.58_43 = scsConfig_Run_Mode;
  _42 (scsConfig_Run_Mode.58_43);
  # DEBUG BEGIN_STMT
  coreRunClockDivider.59_44 = coreRunClockDivider;
  _45 = coreRunClockDivider.59_44->Set;
  coreConfig_Run_Mode.60_46 = coreConfig_Run_Mode;
  _45 (coreConfig_Run_Mode.60_46);
  # DEBUG BEGIN_STMT
  busRunClockDivider.61_47 = busRunClockDivider;
  _48 = busRunClockDivider.61_47->Set;
  busConfig_Run_Mode.62_49 = busConfig_Run_Mode;
  _48 (busConfig_Run_Mode.62_49);
  # DEBUG BEGIN_STMT
  slowRunClockDivider.63_50 = slowRunClockDivider;
  _51 = slowRunClockDivider.63_50->Set;
  slowConfig_Run_Mode.64_52 = slowConfig_Run_Mode;
  _51 (slowConfig_Run_Mode.64_52);
  goto <bb 9>; [100.00%]

  <bb 7> [local count: 268435456]:
<L7>:
  # DEBUG BEGIN_STMT
  if (notification_84(D) == 2)
    goto <bb 8>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 8> [local count: 91268055]:
  # DEBUG BEGIN_STMT
  fircClock.65_53 = fircClock;
  _54 = fircClock.65_53->Enable;
  fircConfig.66_55 = fircConfig;
  _54 (fircConfig.66_55);
  # DEBUG BEGIN_STMT
  soscClock.67_56 = soscClock;
  _57 = soscClock.67_56->Enable;
  soscConfig.68_58 = soscConfig;
  _57 (soscConfig.68_58);
  # DEBUG BEGIN_STMT
  soscClock.69_59 = soscClock;
  _60 = soscClock.69_59->Complete;
  soscConfig.70_61 = soscConfig;
  _60 (soscConfig.70_61);
  # DEBUG BEGIN_STMT
  spllClock.71_62 = spllClock;
  _63 = spllClock.71_62->Enable;
  spllConfig.72_64 = spllConfig;
  _63 (spllConfig.72_64);
  # DEBUG BEGIN_STMT
  spllClock.73_65 = spllClock;
  _66 = spllClock.73_65->Complete;
  spllConfig.74_67 = spllConfig;
  _68 = spllConfig.74_67->name;
  _66 (_68);
  # DEBUG BEGIN_STMT
  scsHsrunClockSelector.75_69 = scsHsrunClockSelector;
  _70 = scsHsrunClockSelector.75_69->Set;
  scsConfig_Hsrun_Mode.76_71 = scsConfig_Hsrun_Mode;
  _70 (scsConfig_Hsrun_Mode.76_71);
  # DEBUG BEGIN_STMT
  coreHsrunClockDivider.77_72 = coreHsrunClockDivider;
  _73 = coreHsrunClockDivider.77_72->Set;
  coreConfig_Hsrun_Mode.78_74 = coreConfig_Hsrun_Mode;
  _73 (coreConfig_Hsrun_Mode.78_74);
  # DEBUG BEGIN_STMT
  busHsrunClockDivider.79_75 = busHsrunClockDivider;
  _76 = busHsrunClockDivider.79_75->Set;
  busConfig_Hsrun_Mode.80_77 = busConfig_Hsrun_Mode;
  _76 (busConfig_Hsrun_Mode.80_77);
  # DEBUG BEGIN_STMT
  slowHsrunClockDivider.81_78 = slowHsrunClockDivider;
  _79 = slowHsrunClockDivider.81_78->Set;
  slowConfig_Hsrun_Mode.82_80 = slowConfig_Hsrun_Mode;
  _79 (slowConfig_Hsrun_Mode.82_80);

  <bb 9> [local count: 1073741824]:
<L12>:
  return;

}


